{"version":3,"sources":["/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/chunk loaded","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Util.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Option.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Types.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Reflection.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Choice.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Promise.2.0.0/Promise.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Int32.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Numeric.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/lib/long.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Long.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Date.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/String.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Array.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/List.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Seq.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/FSharp.Core.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Set.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Model.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/MapUtil.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Fetch.2.2.0/Fetch.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Album.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/AsyncBuilder.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/cmd.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Async.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.Props.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Common.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Columns.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Column.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Elements/Button.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/Menu.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Properties.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Section.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/PhotoGallery.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Elements/Heading.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Component/MixCloud.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt/n.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/lib/big.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Decimal.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt/z.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Range.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/Content.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Wrappers/Rewrap.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Wrappers/ReactTransitionGroup.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Wrappers/ReactMotion.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Component/AnimatedText.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/Header.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Wrappers/ReactIntersectionObserver.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/ring.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/program.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.React.3.0.1/common.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/App.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.React.3.0.1/react.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/prelude.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/Transition.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/webpack/bootstrap","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/define property getters","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/global","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/hasOwnProperty shorthand","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/make namespace object","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/jsonp chunk loading","/mnt/d/Documents/codes/ghost-club.github.io/webpack/startup"],"names":["deferred","isArrayLike","x","Array","isArray","ArrayBuffer","isView","sameConstructor","y","Object","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","value","done","Error","Dispose","getEnumerator","o","GetEnumerator","Symbol","iterator","toIterator","en","hasNext","undefined","padWithZeros","i","length","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","get","stringHash","s","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","min","comparer","max","jsOptions","mutator","opts","WeakMap","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","Some","toJSON","String","other","some","defaultArg","opt","defaultValue","mapping","callStack","self","seqToString","cons","entries","k","join","name","Union","cases","tag","fields","concat","fieldStr","withParens","indexOf","unionToString","splice","Record","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","result","recordCompareTo","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","t","t1","t2","getRecordElements","k1","v1","k2","v2","gen","endsWith","assertUnion","FSharpChoice$2","super","PromiseBuilder__Delay_62FBFDE1","generator","then","f1","f2","er","Promise","reject","resolve","er_1","catch","er_2","er_3","PromiseBuilder__Run_212F1D4B","p","success","fail","NumberStyles","symbol","toPrecision","sd","toExponential","dp","toHex","Number","wasm","WebAssembly","Instance","Module","Uint8Array","exports","e","Long","low","high","unsigned","isLong","obj","prototype","multiply","substr","toFixed","bytes","le","fromBytesLE","fromBytesBE","fromBytes","$this","hi","lo","toBytesLE","toBytesBE","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","substring","radixToPower","size","parseInt","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","numBits","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Addition","LongLib","op_Multiply","op_Division","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","replace","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","fsFormatRegExp","printf","input","cont","lastIndex","strParts","matches","strIdx","exec","matchIndex","index","push","createPrinter","continuePrint","arg","toText","formatReplacement","flags","padLength","precision","sign","toLowerCase","numericCompare","isLessThan","toUpperCase","_provider","_a","_b","_c","d","dateWithOffset","dateToISOStringWithOffset","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","dateToString","zeroFlag","minusFlag","ch","padLeft","_strParts","_matches","_result","padArg","args","slice","_padLength","delimiter","xs","from","isRight","Helpers_allocateArrayFromCons","fill","target","targetIndex","start","initialize","initializer","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","c","ListEnumerator$1","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","toArray","fold","folder","state","acc","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","append","ys","reverse","contains","tryFindIndex","SR_notEnoughElements","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","curr","started","x_1","value_1","finish","matchValue_1","mkSeq","Enumerator_Seq_$ctor_673A07F2","ofSeq","argName","Operators_NullArg","delay","sources","outerOpt","innerOpt","finished","inner","outer","copyOfStruct","inner_1","outer_1","Enumerator_concat","ar","singleton_1","toList","ofArray_1","xs_3","root","node","enumerator","xs_5","t_2","ofSeq_1","generateIndexed","create","e_1","indexed","mapIndexed","skip","Enumerator_enumerateThenFinally","collect","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","_","SetTreeNode$1","left","right","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_countAux","t_mut","acc_mut","SetTreeModule_count","SetTreeModule_mk","l","r","hl","hr","t2_1","m","SetTreeModule_rebalance","t2_3","t_3","t2_4","t1h","t2h","t2_2","matchValue_2","matchValue_3","SetTreeModule_add","Compare","c_1","SetTreeModule_empty","SetTreeModule_spliceOutSuccessor","patternInput","SetTreeModule_remove","SetTreeModule_mem","comparer_mut","k_mut","SetTreeModule_iter","f_mut","SetTreeModule_SetIterator$1","stack","SetTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","matchValue_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","arr","SetTreeModule_ofSeq","delegateArg0","delegateArg1","SetTreeModule_ofArray","fold_2","SetTreeModule_ofList","ie","e_mut","SetTreeModule_mkFromEnumerator","FSharpSet","tree","this$","FSharpSet__ComputeHashCode","that","FSharpSet__get_Comparer","FSharpSet__get_Tree","map_1","toStringTag","FSharpSet__get_Count","clear","delete","FSharpSet__Contains","forEach","thisArg","FSharpSet_$ctor","set$","element","FSharpSet__Add","AlbumState","AlbumState__get_AsString","ModelState","Model","albumState","lang","completed","Msg","initModel","elements","ofList","y_1","dashify","separator","charAt","keyValueList","caseRule","definedCaseRule","kvPair","assign","changeCase","Types_RequestProperties","IMediaInfoModule_getOrigUrl","arg30","height","arg20","width","arg10","baseUrl","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","Cmd_exec","dispatch","cmd","call","ex","Cmd_none","Cmd_batch","cmds","lists","xs_6","Cmd_OfFunc_result","msg","Cmd_OfPromise_perform","task","ofSuccess","arg_1","Cmd_OfPromise_result","Bind","computation","binder","onSuccess","protectedBind","Combine","computation1","computation2","Delay","For","sequence","body","While","Return","protectedReturn","ReturnFrom","TryFinally","compensation","TryWith","catchHandler","ex2","Using","resource","guard","Zero","cancelled","_id","_cancelled","_listeners","Map","cancel","listener","addListener","removeListener","register","$","Prop","DangerousHtml","__html","DOMAttr","HTMLAttr","CSSProp","Reflection_getCaseName","case$","Screen","Screen_ToString_2D2414B4","screen","TextSize_Option_ToString_Z2E0B9453","Reflection_getCaseTag","Modifier_IModifier","Common_GenericOption","Common_GenericOptions","Props","Classes","RemovedClasses","Common_GenericOptions_Parse_9AE2F7C","options","parser","baseClass","baseProps","result_1","Common_GenericOptions__AddClass_Z721C83C5","Common_GenericOptions__AddProps_416C4D0B","Common_GenericOptions__AddProp_7BFEDA81","prop","props","cl","Common_GenericOptions__AddCaseName_1505","Common_GenericOptions__AddModifiers_5BB435D5","modifiers","option","screen_3","screen_7","level","Modifier_ofText","console","warn","display","Display_toDisplayOnlyClass","Modifier_ofInvisible","Modifier_ofInvisibleOnly","Modifier_ofHidden","Modifier_ofHiddenOnly","typ","amount","Modifier_ofBackground","Common_GenericOptions__ToReactElement_Z6D3CD4B7","el","children","children_1","filter","cls","Common_parseOptions","ISize_ToString_2283FB3F","Option","ISize","suffix","_arg1","column","className","ofOffset","props_1","react","viewPC","model","css","tupledArg","children_4","options_1","tupledArg_2","children_8","tupledArg_4","langSwitchText","i18next","props_5","children_5","Color_ofColor","btnView","button","_arg1_3","option_1","props_10","children_9","section","Helpers_memoEqualsButFunctions","xValue","Cache","FunctionComponent_Of_Z5A158BBF","render","displayName","memoizeWith","withKey","__callingMemberName","__callingSourceFile","__callingSourceLine","valueFactory","displayName_1","elemType","memoElement","areEqual","ReactElementTypeModule_memoWith","f_1","Cache_GetOrAdd_Z3AD3E68D","prevArrow","onClick","value_3","style","value_5","dangerouslySetInnerHTML","nextArrow","MixCloudOption","MixCloudListProp","user","mixName","MixCloudListProps","items","onLoad","mixCloudList","propsCount","loadedPropsCount","children_2","item","src","mix","_arg1_mut","go","frameBorder","_arg1_1","props_4","children_3","x_3","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","n","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_baseN","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","b","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_lt","q","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","split","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_mulSchoolBook","BigNatModule_scaleSubInPlace","a","patternInput_1","ad","a_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","xa","aa","pn","qai","BigNatModule_divmod","BigNatModule_copyN","Invariant","BigNatModule_ofInt32","BigNatModule_toString","degn","isLeading_mut","digits_mut","n_1_mut","isLeading","n_1","n_2","prior_1","nL","nH","digits_4","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_getSmall","P","cmp","_this","MAX_DP","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","UNDEFINED","NUMERIC","parse","nl","test","search","round","Big","DP","RM","rm","more","xc","findIndex","xci","idx","unshift","pop","stringify","doExponential","isNonzero","isneg","yc","bl","bt","ri","bz","ai","al","rl","qc","qi","shift","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","NE","PE","strict","valueOf","_Big_","normalize","TypeError","Decimal","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","BigInteger_op_LessThan_56F059C0","nn","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","BigNatModule_isSmall","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigNatModule_boundInt64","rem_u","rem_s","BigNatModule_embed64","BigNatModule_ofInt64","BigInteger_get_One","BigInteger_get_Zero","zero","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","unfold","st_1","Enumerator_unfold","rangeDouble","view","children_6","tupledArg_6","setProps","centerMode","infinite","centerPadding","slidesToShow","dots","dotsClass","autoplay","lazyLoad","react$002Dslick","view_1","color","Option_1","title","children_7","tupledArg_8","two","CommonProp","CommonTransitionProp$1","CSSTransitionProp","cssTransition","CSSTransition","MotionProp$2","round_1","slot","textLen","targetText","visible","Motion","motion","targetLength","totalLength","damping","stiffness","totalLen","targetLen","startIndex","period","x_2","y_2","random","opacity","y_3","children_11","logoLoaded","firstViewShown","videoRef","video_1","volume","defaultMuted","muted","setAttribute","setTimeout","play","ref","playsInline","autoPlay","poster","onLoadedData","type","_arg2","appear","enter","exit","_arg3","_arg4","inViewPlain","InView","RingState$1","RingBuffer$1","RingBuffer$1__Pop","wix","rix","rix$0027","Program$4","init","update","subscribe","setState","syncDispatch","ProgramModule_runWith","program","rb","reentered","apply","partialApply","wix_1","items_1","wix$0027","ix","RingBuffer$1__Push_2B595","nextMsg","msg_1","model$0027","ex_1","ex_3","ex_2","LazyProps$1","equal","Components_LazyView$1","Component","shouldComponentUpdate","nextProps","_nextState","initI18nTask","supportedLngs","ns","fallbackLng","returnEmptyString","resources","it_1","translation","ui","translation_1","ui_1","detection","it_2","cookieDomain","cookieMinutes","promise","i18next$002Dbrowser$002Dlanguagedetector","initAlbumTask","fetch$","url","fetch","response","ok","message","status","statusText","errorString","text","JSON","arg0","initCmd","arg0_1","delayCmd","ms","viewMain","Option_2","screen_4","size_4","screen_5","size_5","arg30_1","arg20_1","arg10_1","size_3","ProgramModule_run","error","ProgramModule_mkProgram","toConsoleError","lang_1","lang_2","activePatternResult7624","FSharpSet__Remove","model_1","view_2","transitionCompleted","transitionInProgress","scrollAmount","Prop_1","inView","toArray_1","entry","intersectionRatio","inView_1","srcSet","alt","x_7","lazyView2With","placeholderId","ProgramModule_withSetState","react$002Ddom","ProgramModule_view","document","getElementById","Program_Internal_withReactSynchronousUsing","Common_lazyView2With","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","definition","enumerable","g","globalThis","Function","window","hasOwnProperty","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"mappings":"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AG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GA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","file":"app.c33f262a15648bb49ab5.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.1.12/Choice.js\";\nimport { class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { equals, getEnumerator } from \"../fable-library.3.1.12/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\n        }\n        else {\n            return result(fn(a_1.fields[0]));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            p = (p.then((() => body(a))));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    return {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    return Promise.reject(er);\n                }\n                else {\n                    try {\n                        return Promise.resolve(f2(er));\n                    }\n                    catch (er_1) {\n                        return Promise.reject(er_1);\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    return Promise.resolve(f(er_2));\n                }\n                catch (er_3) {\n                    return Promise.reject(er_3);\n                }\n            }\n        },\n    };\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            const p_1 = Promise.resolve(p);\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = ((totalLength + arr_1.length) | 0);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = ((totalIdx + 1) | 0);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function insertRangeInPlace(index, range, array) {\n    let index_1;\n    let i = index | 0;\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            void (index_1 = (i | 0), array.splice(index_1, 0, x));\n            i = ((i + 1) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = ((iTrue + 1) | 0);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = ((iFalse + 1) | 0);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const res = [];\n    for (let i = 0; i <= (array.length - 1); i++) {\n        const matchValue = chooser(array[i]);\n        if (matchValue != null) {\n            const y = value_2(matchValue);\n            void (res.push(y));\n        }\n    }\n    if ((typeof cons) === \"function\") {\n        return map((x) => x, res, cons);\n    }\n    else {\n        return res;\n    }\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function allPairs(xs, ys) {\n    const len1 = xs.length | 0;\n    const len2 = ys.length | 0;\n    const res = new Array((len1 * len2));\n    for (let i = 0; i <= (xs.length - 1); i++) {\n        for (let j = 0; j <= (ys.length - 1); j++) {\n            res[(i * len2) + j] = [xs[i], ys[j]];\n        }\n    }\n    return res;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = (comparer(array1[i], array2[i]) | 0);\n                i = ((i + 1) | 0);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function tryExactlyOne(array) {\n    if (array.length === 1) {\n        return some(array[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { join } from \"./String.js\";\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\n\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\n\nexport const SR_inputListWasEmpty = \"List was empty\";\n\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport class FSharpList extends Record {\n    constructor(head, tail) {\n        super();\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        const xs = this;\n        return (\"[\" + join(\"; \", xs)) + \"]\";\n    }\n    Equals(other) {\n        const xs = this;\n        if (xs === other) {\n            return true;\n        }\n        else {\n            const loop = (xs_1_mut, ys_1_mut) => {\n                loop:\n                while (true) {\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                    const matchValue = [xs_1.tail, ys_1.tail];\n                    if (matchValue[0] != null) {\n                        if (matchValue[1] != null) {\n                            const xt = matchValue[0];\n                            const yt = matchValue[1];\n                            if (equals(xs_1.head, ys_1.head)) {\n                                xs_1_mut = xt;\n                                ys_1_mut = yt;\n                                continue loop;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                    else if (matchValue[1] != null) {\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                    break;\n                }\n            };\n            return loop(xs, other);\n        }\n    }\n    GetHashCode() {\n        const xs = this;\n        const loop = (i_mut, h_mut, xs_1_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\n                const matchValue = xs_1.tail;\n                if (matchValue != null) {\n                    const t = matchValue;\n                    if (i > 18) {\n                        return h | 0;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\n                        xs_1_mut = t;\n                        continue loop;\n                    }\n                }\n                else {\n                    return h | 0;\n                }\n                break;\n            }\n        };\n        return loop(0, 0, xs) | 0;\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return Array.from(this$);\n    }\n    CompareTo(other) {\n        const xs = this;\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1.tail, ys_1.tail];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const xt = matchValue[0];\n                        const yt = matchValue[1];\n                        const c = compare(xs_1.head, ys_1.head) | 0;\n                        if (c === 0) {\n                            xs_1_mut = xt;\n                            ys_1_mut = yt;\n                            continue loop;\n                        }\n                        else {\n                            return c | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1] != null) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                break;\n            }\n        };\n        return loop(xs, other) | 0;\n    }\n    GetEnumerator() {\n        const xs = this;\n        return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const xs = this;\n        return getEnumerator(xs);\n    }\n}\n\nexport function FSharpList$reflection(gen0) {\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\n}\n\nexport class ListEnumerator$1 {\n    constructor(xs) {\n        this.xs = xs;\n        this.it = this.xs;\n        this.current = null;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        const matchValue = __.it.tail;\n        if (matchValue != null) {\n            const t = matchValue;\n            __.current = __.it.head;\n            __.it = t;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        const __ = this;\n        __.it = __.xs;\n        __.current = null;\n    }\n    Dispose() {\n    }\n}\n\nexport function ListEnumerator$1$reflection(gen0) {\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\n\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\n    return new ListEnumerator$1(xs);\n}\n\nexport function FSharpList_get_Empty() {\n    return new FSharpList(null, void 0);\n}\n\nexport function FSharpList_Cons_305B8EAC(x, xs) {\n    return new FSharpList(x, xs);\n}\n\nexport function FSharpList__get_IsEmpty(xs) {\n    return xs.tail == null;\n}\n\nexport function FSharpList__get_Length(xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                i_mut = (i + 1);\n                xs_1_mut = matchValue;\n                continue loop;\n            }\n            else {\n                return i | 0;\n            }\n            break;\n        }\n    };\n    return loop(0, xs) | 0;\n}\n\nexport function FSharpList__get_Head(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return xs.head;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Tail(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return matchValue;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                if (i === index) {\n                    return xs_1.head;\n                }\n                else {\n                    i_mut = (i + 1);\n                    xs_1_mut = matchValue;\n                    continue loop;\n                }\n            }\n            else {\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function empty() {\n    return FSharpList_get_Empty();\n}\n\nexport function cons(x, xs) {\n    return FSharpList_Cons_305B8EAC(x, xs);\n}\n\nexport function singleton(x) {\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\n\nexport function isEmpty(xs) {\n    return FSharpList__get_IsEmpty(xs);\n}\n\nexport function length(xs) {\n    return FSharpList__get_Length(xs);\n}\n\nexport function head(xs) {\n    return FSharpList__get_Head(xs);\n}\n\nexport function tryHead(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        return void 0;\n    }\n    else {\n        return some(FSharpList__get_Head(xs));\n    }\n}\n\nexport function tail(xs) {\n    return FSharpList__get_Tail(xs);\n}\n\nexport function tryLast(xs_mut) {\n    tryLast:\n    while (true) {\n        const xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return void 0;\n        }\n        else {\n            const t = FSharpList__get_Tail(xs);\n            if (FSharpList__get_IsEmpty(t)) {\n                return some(FSharpList__get_Head(xs));\n            }\n            else {\n                xs_mut = t;\n                continue tryLast;\n            }\n        }\n        break;\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const loop = (xs_1_mut, ys_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (matchValue[1]) {\n                return 1;\n            }\n            else {\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n                if (c === 0) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\n                    continue loop;\n                }\n                else {\n                    return c | 0;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs, ys) | 0;\n}\n\nexport function toArray(xs) {\n    const len = FSharpList__get_Length(xs) | 0;\n    const res = fill(new Array(len), 0, len, null);\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (!FSharpList__get_IsEmpty(xs_1)) {\n                res[i] = FSharpList__get_Head(xs_1);\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(0, xs);\n    return res;\n}\n\nexport function fold(folder, state, xs) {\n    let acc = state;\n    let xs_1 = xs;\n    while (!FSharpList__get_IsEmpty(xs_1)) {\n        acc = folder(acc, FSharpList__get_Head(xs_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n    }\n    return acc;\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function foldIndexed(folder, state, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, state, xs);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    let acc = state;\n    let xs_1 = xs;\n    let ys_1 = ys;\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n        ys_1 = FSharpList__get_Tail(ys_1);\n    }\n    return acc;\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function unfold(gen, state) {\n    const loop = (acc_mut, node_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, node = node_mut;\n            const matchValue = gen(acc);\n            if (matchValue != null) {\n                acc_mut = matchValue[1];\n                node_mut = (t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t));\n                continue loop;\n            }\n            else {\n                return node;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(state, root);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function toSeq(xs) {\n    return xs;\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = xs.length - 1; i >= 0; i--) {\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\n\nexport function ofSeq(xs) {\n    let xs_3, t;\n    if (isArrayLike(xs)) {\n        return ofArray(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        const root = FSharpList_get_Empty();\n        let node = root;\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                node = (xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t)));\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        const xs_5 = node;\n        const t_2 = FSharpList_get_Empty();\n        xs_5.tail = t_2;\n        return FSharpList__get_Tail(root);\n    }\n}\n\nexport function concat(lists) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    const action = (xs) => {\n        node = fold((acc, x) => {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }, node, xs);\n    };\n    if (isArrayLike(lists)) {\n        lists.forEach(action);\n    }\n    else if (lists instanceof FSharpList) {\n        iterate(action, lists);\n    }\n    else {\n        const enumerator = getEnumerator(lists);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    const xs_6 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_6.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scan(folder, state, xs) {\n    let xs_4, t_2;\n    const root = FSharpList_get_Empty();\n    let node;\n    const t = new FSharpList(state, void 0);\n    root.tail = t;\n    node = t;\n    let acc = state;\n    let xs_3 = xs;\n    while (!FSharpList__get_IsEmpty(xs_3)) {\n        acc = folder(acc, FSharpList__get_Head(xs_3));\n        node = (xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2)));\n        xs_3 = FSharpList__get_Tail(xs_3);\n    }\n    const xs_6 = node;\n    const t_4 = FSharpList_get_Empty();\n    xs_6.tail = t_4;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scanBack(folder, xs, state) {\n    return ofArray(scanBack_1(folder, toArray(xs), state));\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\n}\n\nexport function collect(mapping, xs) {\n    let xs_1, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    let ys = xs;\n    while (!FSharpList__get_IsEmpty(ys)) {\n        let zs = mapping(FSharpList__get_Head(ys));\n        while (!FSharpList__get_IsEmpty(zs)) {\n            node = (xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t)));\n            zs = FSharpList__get_Tail(zs);\n        }\n        ys = FSharpList__get_Tail(ys);\n    }\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = foldIndexed((i, acc, x) => {\n        const t = new FSharpList(mapping(i, x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const t = new FSharpList(mapping(x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    const root = FSharpList_get_Empty();\n    const node = fold2((acc, x, y) => {\n        const t = new FSharpList(mapping(x, y), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = (t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(0, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                zs_1_mut = FSharpList__get_Tail(zs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(root, xs, ys, zs);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapFold(mapping, state, xs) {\n    const root = FSharpList_get_Empty();\n    const patternInput_1 = fold((tupledArg, x) => {\n        let t;\n        const patternInput = mapping(tupledArg[1], x);\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\n    }, [root, state], xs);\n    const t_2 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_2;\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\n}\n\nexport function tryPick(f, xs) {\n    const loop = (xs_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else {\n                const matchValue = f(FSharpList__get_Head(xs_1));\n                if (matchValue == null) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFind(f, xs) {\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function find(f, xs) {\n    const matchValue = tryFind(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFindBack_1(f, toArray(xs));\n}\n\nexport function findBack(f, xs) {\n    const matchValue = tryFindBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(f, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (f(FSharpList__get_Head(xs_1))) {\n                return i;\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, toArray(xs));\n}\n\nexport function findIndexBack(f, xs) {\n    const matchValue = tryFindIndexBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryItem(n, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (i === n) {\n                return some(FSharpList__get_Head(xs_1));\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function item(n, xs) {\n    return FSharpList__get_Item_Z524259A4(xs, n);\n}\n\nexport function filter(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        if (f(x)) {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }\n        else {\n            return acc;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function partition(f, xs) {\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n    const root2 = patternInput[1];\n    const root1 = patternInput[0];\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => {\n            let t, t_2;\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\n        };\n    }), [root1, root2], xs);\n    const t_4 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_4;\n    const t_5 = FSharpList_get_Empty();\n    patternInput_1[1].tail = t_5;\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\n\nexport function choose(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const t = new FSharpList(value_1(matchValue), void 0);\n            acc.tail = t;\n            return t;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function contains(value, xs, eq) {\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\n}\n\nexport function initialize(n, f) {\n    let xs, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    for (let i = 0; i <= (n - 1); i++) {\n        node = (xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t)));\n    }\n    const xs_2 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_2.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return fold(f, head(xs), tail(xs));\n    }\n}\n\nexport function reduceBack(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return foldBack(f, tail(xs), head(xs));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f, xs) {\n    return tryFindIndex(f, xs) != null;\n}\n\nexport function exists2(f_mut, xs_mut, ys_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1]) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1]) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    xs_mut = FSharpList__get_Tail(xs);\n                    ys_mut = FSharpList__get_Tail(ys);\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sortWith(comparer, xs) {\n    const arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, toArray(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\n}\n\nexport function allPairs(xs, ys) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    iterate((x) => {\n        iterate((y) => {\n            let xs_1, t;\n            node = (xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t)));\n        }, ys);\n    }, xs);\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function skip(count_mut, xs_mut) {\n    skip:\n    while (true) {\n        const count = count_mut, xs = xs_mut;\n        if (count <= 0) {\n            return xs;\n        }\n        else if (FSharpList__get_IsEmpty(xs)) {\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n        }\n        else {\n            count_mut = (count - 1);\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skip;\n        }\n        break;\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return xs;\n        }\n        else if (!predicate(FSharpList__get_Head(xs))) {\n            return xs;\n        }\n        else {\n            predicate_mut = predicate;\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skipWhile;\n        }\n        break;\n    }\n}\n\nexport function take(count, xs) {\n    if (count < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\n    }\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function takeWhile(predicate, xs) {\n    const loop = (acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function truncate(count, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function getSlice(startIndex, endIndex, xs) {\n    const len = length(xs) | 0;\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\n    if (startIndex_1 < 0) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\n    }\n    else if (endIndex_1 >= len) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\n    }\n    else if (endIndex_1 < startIndex_1) {\n        return FSharpList_get_Empty();\n    }\n    else {\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\n    }\n}\n\nexport function splitAt(index, xs) {\n    if (index < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\n    }\n    if (index > FSharpList__get_Length(xs)) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    return [take(index, xs), skip(index, xs)];\n}\n\nexport function exactlyOne(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n        return FSharpList__get_Head(xs);\n    }\n    else {\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\n        return some(FSharpList__get_Head(xs));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return ofArray(pairwise_1(toArray(xs)));\n}\n\nexport function windowed(windowSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\n}\n\nexport function transpose(lists) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\n}\n\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\n\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\n\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\n\nexport function Enumerator_noReset() {\n    throw (new Error(SR_resetNotSupported));\n}\n\nexport function Enumerator_notStarted() {\n    throw (new Error(SR_enumerationNotStarted));\n}\n\nexport function Enumerator_alreadyFinished() {\n    throw (new Error(SR_enumerationAlreadyFinished));\n}\n\nexport class Enumerator_Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    toString() {\n        const xs = this;\n        const maxCount = 4;\n        let i = 0;\n        let str = \"seq [\";\n        const e = getEnumerator(xs);\n        try {\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                if (i > 0) {\n                    str = (str + \"; \");\n                }\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\n                i = ((i + 1) | 0);\n            }\n            if (i === maxCount) {\n                str = (str + \"; ...\");\n            }\n            return str + \"]\";\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n    GetEnumerator() {\n        const x = this;\n        return x.f();\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const x = this;\n        return x.f();\n    }\n}\n\nexport function Enumerator_Seq$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\n\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\n    return new Enumerator_Seq(f);\n}\n\nexport class Enumerator_FromFunctions$1 {\n    constructor(current, next, dispose) {\n        this.current = current;\n        this.next = next;\n        this.dispose = dispose;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        return __.next();\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        return Enumerator_noReset();\n    }\n    Dispose() {\n        const __ = this;\n        __.dispose();\n    }\n}\n\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\n\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n    return new Enumerator_FromFunctions$1(current, next, dispose);\n}\n\nexport function Enumerator_cast(e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        if (isDisposable(e)) {\n            e.Dispose();\n        }\n    });\n}\n\nexport function Enumerator_concat(sources) {\n    let outerOpt = void 0;\n    let innerOpt = void 0;\n    let started = false;\n    let finished = false;\n    let curr = void 0;\n    const finish = () => {\n        finished = true;\n        if (innerOpt != null) {\n            const inner = innerOpt;\n            try {\n                inner.Dispose();\n            }\n            finally {\n                innerOpt = (void 0);\n            }\n        }\n        if (outerOpt != null) {\n            const outer = outerOpt;\n            try {\n                outer.Dispose();\n            }\n            finally {\n                outerOpt = (void 0);\n            }\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        else if (finished) {\n            Enumerator_alreadyFinished();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        let copyOfStruct;\n        if (!started) {\n            started = true;\n        }\n        if (finished) {\n            return false;\n        }\n        else {\n            let res = void 0;\n            while (res == null) {\n                const matchValue = [outerOpt, innerOpt];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const inner_1 = matchValue[1];\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                            res = true;\n                        }\n                        else {\n                            try {\n                                inner_1.Dispose();\n                            }\n                            finally {\n                                innerOpt = (void 0);\n                            }\n                        }\n                    }\n                    else {\n                        const outer_1 = matchValue[0];\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                            innerOpt = (copyOfStruct = ie, getEnumerator(copyOfStruct));\n                        }\n                        else {\n                            finish();\n                            res = false;\n                        }\n                    }\n                }\n                else {\n                    outerOpt = getEnumerator(sources);\n                }\n            }\n            return value_1(res);\n        }\n    }, () => {\n        if (!finished) {\n            finish();\n        }\n    });\n}\n\nexport function Enumerator_enumerateThenFinally(f, e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        try {\n            e.Dispose();\n        }\n        finally {\n            f();\n        }\n    });\n}\n\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\n    let started = false;\n    let curr = void 0;\n    let state = some(openf());\n    const dispose = () => {\n        if (state != null) {\n            const x_1 = value_1(state);\n            try {\n                closef(x_1);\n            }\n            finally {\n                state = (void 0);\n            }\n        }\n    };\n    const finish = () => {\n        try {\n            dispose();\n        }\n        finally {\n            curr = (void 0);\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        if (!started) {\n            started = true;\n        }\n        if (state != null) {\n            const s = value_1(state);\n            let matchValue_1;\n            try {\n                matchValue_1 = compute(s);\n            }\n            catch (matchValue) {\n                finish();\n                throw matchValue;\n            }\n            if (matchValue_1 != null) {\n                curr = matchValue_1;\n                return true;\n            }\n            else {\n                finish();\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }, dispose);\n}\n\nexport function Enumerator_unfold(f, state) {\n    let curr = void 0;\n    let acc = state;\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (curr != null) {\n            const st = curr[1];\n            return curr[0];\n        }\n        else {\n            return Enumerator_notStarted();\n        }\n    }, () => {\n        curr = f(acc);\n        if (curr != null) {\n            const x_1 = curr[0];\n            const st_1 = curr[1];\n            acc = st_1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, () => {\n    });\n}\n\nexport function indexNotFound() {\n    throw (new Error(SR_keyNotFoundAlt));\n}\n\nexport function checkNonNull(argName, arg) {\n    if (arg == null) {\n        Operators_NullArg(argName);\n    }\n}\n\nexport function mkSeq(f) {\n    return Enumerator_Seq_$ctor_673A07F2(f);\n}\n\nexport function ofSeq(xs) {\n    checkNonNull(\"source\", xs);\n    return getEnumerator(xs);\n}\n\nexport function delay(generator) {\n    return mkSeq(() => getEnumerator(generator()));\n}\n\nexport function concat(sources) {\n    return mkSeq(() => Enumerator_concat(sources));\n}\n\nexport function unfold(generator, state) {\n    return mkSeq(() => Enumerator_unfold(generator, state));\n}\n\nexport function empty() {\n    return delay(() => (new Array(0)));\n}\n\nexport function singleton(x) {\n    return delay(() => singleton_1(x));\n}\n\nexport function ofArray(arr) {\n    return arr;\n}\n\nexport function toArray(xs) {\n    if (isArrayLike(xs)) {\n        return xs;\n    }\n    else if (xs instanceof FSharpList) {\n        return toArray_1(xs);\n    }\n    else {\n        return Array.from(xs);\n    }\n}\n\nexport function ofList(xs) {\n    return xs;\n}\n\nexport function toList(xs) {\n    if (isArrayLike(xs)) {\n        return ofArray_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        return ofSeq_1(xs);\n    }\n}\n\nexport function generate(create, compute, dispose) {\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\n}\n\nexport function generateIndexed(create, compute, dispose) {\n    return mkSeq(() => {\n        let i = -1;\n        return Enumerator_generateWhileSome(create, (x) => {\n            i = ((i + 1) | 0);\n            return compute(i, x);\n        }, dispose);\n    });\n}\n\nexport function append(xs, ys) {\n    return concat([xs, ys]);\n}\n\nexport function cast(xs) {\n    return mkSeq(() => {\n        checkNonNull(\"source\", xs);\n        return Enumerator_cast(getEnumerator(xs));\n    });\n}\n\nexport function choose(chooser, xs) {\n    return generate(() => ofSeq(xs), (e) => {\n        let curr = void 0;\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return curr;\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let c = 0;\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n            while (((c === 0) ? b1 : false) ? b2 : false) {\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\n                if (c === 0) {\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                }\n            }\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function contains(value, xs, comparer) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function enumerateFromFunctions(create, moveNext, current) {\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\n        const matchValue = x_1;\n        if (isDisposable(matchValue)) {\n            matchValue.Dispose();\n        }\n    });\n}\n\nexport function enumerateThenFinally(source, compensation) {\n    const compensation_1 = compensation;\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n        }\n        catch (matchValue) {\n            compensation_1();\n            throw matchValue;\n        }\n    });\n}\n\nexport function enumerateUsing(resource, source) {\n    const compensation = () => {\n        if (equals(resource, null)) {\n        }\n        else {\n            let copyOfStruct = resource;\n            copyOfStruct.Dispose();\n        }\n    };\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n        }\n        catch (matchValue_1) {\n            compensation();\n            throw matchValue_1;\n        }\n    });\n}\n\nexport function enumerateWhile(guard, xs) {\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\n}\n\nexport function filter(f, xs) {\n    return choose((x) => {\n        if (f(x)) {\n            return some(x);\n        }\n        else {\n            return void 0;\n        }\n    }, xs);\n}\n\nexport function exists(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function exists2(predicate, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let found = false;\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return found;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function exactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\n            }\n            else {\n                return v;\n            }\n        }\n        else {\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\n        }\n        else {\n            return void 0;\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryFind(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (predicate(c)) {\n                res = some(c);\n            }\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function find(predicate, xs) {\n    const matchValue = tryFind(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(predicate, xs) {\n    return tryFindBack_1(predicate, toArray(xs));\n}\n\nexport function findBack(predicate, xs) {\n    const matchValue = tryFindBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (i_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n                        return i;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        continue loop;\n                    }\n                }\n                else {\n                    return void 0;\n                }\n                break;\n            }\n        };\n        return loop(0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function findIndex(predicate, xs) {\n    const matchValue = tryFindIndex(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(predicate, xs) {\n    return tryFindIndexBack_1(predicate, toArray(xs));\n}\n\nexport function findIndexBack(predicate, xs) {\n    const matchValue = tryFindIndexBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function fold(folder, state, xs) {\n    const e = ofSeq(xs);\n    try {\n        let acc = state;\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return acc;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let acc = state;\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return acc;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function forAll(predicate, xs) {\n    return !exists((x) => (!predicate(x)), xs);\n}\n\nexport function forAll2(predicate, xs, ys) {\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\n}\n\nexport function tryHead(xs) {\n    if (isArrayLike(xs)) {\n        return tryHead_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryHead_2(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function head(xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function initialize(count, f) {\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\n}\n\nexport function initializeInfinite(f) {\n    return initialize(2147483647, f);\n}\n\nexport function isEmpty(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length === 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return isEmpty_1(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function tryItem(index, xs) {\n    if (isArrayLike(xs)) {\n        return tryItem_1(index, xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryItem_2(index, xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            const loop = (index_1_mut) => {\n                loop:\n                while (true) {\n                    const index_1 = index_1_mut;\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                        return void 0;\n                    }\n                    else if (index_1 === 0) {\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    }\n                    else {\n                        index_1_mut = (index_1 - 1);\n                        continue loop;\n                    }\n                    break;\n                }\n            };\n            return loop(index);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function item(index, xs) {\n    const matchValue = tryItem(index, xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function tryLast(xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    return acc;\n                }\n                else {\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    continue loop;\n                }\n                break;\n            }\n        };\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function length(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length | 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return length_1(xs) | 0;\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            let count = 0;\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                count = ((count + 1) | 0);\n            }\n            return count | 0;\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function map(mapping, xs) {\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function mapIndexed(mapping, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        const e3 = tupledArg[2];\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            try {\n                tupledArg_1[1].Dispose();\n            }\n            finally {\n                tupledArg_1[2].Dispose();\n            }\n        }\n    });\n}\n\nexport function readOnly(xs) {\n    checkNonNull(\"source\", xs);\n    return map((x) => x, xs);\n}\n\nexport function cache(xs) {\n    let cached = false;\n    const xsCache = [];\n    return delay(() => {\n        if (!cached) {\n            cached = true;\n            return map((x) => {\n                void (xsCache.push(x));\n                return x;\n            }, xs);\n        }\n        else {\n            return xsCache;\n        }\n    });\n}\n\nexport function allPairs(xs, ys) {\n    const ysCache = cache(ys);\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\n}\n\nexport function mapFold(mapping, state, xs) {\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function tryPick(chooser, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function pick(chooser, xs) {\n    const matchValue = tryPick(chooser, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function reduce(folder, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    continue loop;\n                }\n                else {\n                    return acc;\n                }\n                break;\n            }\n        };\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        else {\n            throw (new Error(SR_inputSequenceEmpty));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function reduceBack(folder, xs) {\n    const arr = toArray(xs);\n    if (arr.length > 0) {\n        return arr.reduceRight(folder);\n    }\n    else {\n        throw (new Error(SR_inputSequenceEmpty));\n    }\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reverse(xs) {\n    return delay(() => ofArray(reverse_1(toArray(xs))));\n}\n\nexport function scan(folder, state, xs) {\n    return delay(() => {\n        let acc = state;\n        return concat([singleton(state), map((x) => {\n            acc = folder(acc, x);\n            return acc;\n        }, xs)]);\n    });\n}\n\nexport function scanBack(folder, xs, state) {\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\n}\n\nexport function skip(count, xs) {\n    return mkSeq(() => {\n        const e = ofSeq(xs);\n        try {\n            for (let i = 1; i <= count; i++) {\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n                }\n            }\n            return Enumerator_enumerateThenFinally(() => {\n            }, e);\n        }\n        catch (matchValue) {\n            e.Dispose();\n            throw matchValue;\n        }\n    });\n}\n\nexport function skipWhile(predicate, xs) {\n    return delay(() => {\n        let skipped = true;\n        return filter((x) => {\n            if (skipped) {\n                skipped = predicate(x);\n            }\n            return !skipped;\n        }, xs);\n    });\n}\n\nexport function tail(xs) {\n    return skip(1, xs);\n}\n\nexport function take(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\n        if (i < count) {\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            else {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n            }\n        }\n        else {\n            return void 0;\n        }\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function takeWhile(predicate, xs) {\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function truncate(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function collect(mapping, xs) {\n    return delay(() => concat(map(mapping, xs)));\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\n}\n\nexport function windowed(windowSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\n}\n\nexport function transpose(xss) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\n}\n\nexport function sortWith(comparer, xs) {\n    return delay(() => {\n        const arr = toArray(xs);\n        arr.sort(comparer);\n        return ofArray(arr);\n    });\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { toString, Record } from \"./Types.js\";\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\nimport { fold as fold_1, fill } from \"./Array.js\";\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = (h | 0);\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n    else {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Left(t2) == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (SetTreeNode$1__get_Left(t2) == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (SetTreeNode$1__get_Right(t2) == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (!isEmpty_1(stack)) {\n            const x = head(stack);\n            const rest = tail(stack);\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return empty_1();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (isEmpty_1(matchValue)) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (head(matchValue) != null) {\n            const t = head(matchValue);\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const t = head(matchValue);\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\n                    return !isEmpty_1(i.stack);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !isEmpty_1(i.stack);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (!isEmpty_1(matchValue[0])) {\n            if (!isEmpty_1(matchValue[1])) {\n                if (head(matchValue[1]) != null) {\n                    if (head(matchValue[0]) != null) {\n                        const x1_3 = head(matchValue[0]);\n                        const x2_3 = head(matchValue[1]);\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (!isEmpty_1(matchValue_3[0])) {\n                                            if (head(matchValue_3[0]) != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = tail(matchValue_3[0]);\n                                                x1_4 = head(matchValue_3[0]);\n                                            }\n                                            else if (!isEmpty_1(matchValue_3[1])) {\n                                                if (head(matchValue_3[1]) != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = tail(matchValue_3[1]);\n                                                    x2_4 = head(matchValue_3[1]);\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (!isEmpty_1(matchValue_3[1])) {\n                                            if (head(matchValue_3[1]) != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = tail(matchValue_3[1]);\n                                                x2_4 = head(matchValue_3[1]);\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (!isEmpty_1(matchValue_4[0])) {\n                                    if (head(matchValue_4[0]) != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = tail(matchValue_4[0]);\n                                        x1_5 = head(matchValue_4[0]);\n                                    }\n                                    else if (!isEmpty_1(matchValue_4[1])) {\n                                        if (head(matchValue_4[1]) != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = tail(matchValue_4[1]);\n                                            x2_5 = head(matchValue_4[1]);\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (!isEmpty_1(matchValue_4[1])) {\n                                    if (head(matchValue_4[1]) != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = tail(matchValue_4[1]);\n                                        x2_5 = head(matchValue_4[1]);\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (!isEmpty_1(matchValue_5[0])) {\n                                    if (head(matchValue_5[0]) != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = tail(matchValue_5[0]);\n                                        x1_6 = head(matchValue_5[0]);\n                                    }\n                                    else if (!isEmpty_1(matchValue_5[1])) {\n                                        if (head(matchValue_5[1]) != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = tail(matchValue_5[1]);\n                                            x2_6 = head(matchValue_5[1]);\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (!isEmpty_1(matchValue_5[1])) {\n                                    if (head(matchValue_5[1]) != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = tail(matchValue_5[1]);\n                                        x2_6 = head(matchValue_5[1]);\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = tail(matchValue[0]);\n                                l2_mut = tail(matchValue[1]);\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = head(matchValue[1]);\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (!isEmpty_1(matchValue_1[0])) {\n                            if (head(matchValue_1[0]) != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = tail(matchValue_1[0]);\n                                x1 = head(matchValue_1[0]);\n                            }\n                            else if (!isEmpty_1(matchValue_1[1])) {\n                                if (head(matchValue_1[1]) != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = tail(matchValue_1[1]);\n                                    x2_1 = head(matchValue_1[1]);\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (!isEmpty_1(matchValue_1[1])) {\n                            if (head(matchValue_1[1]) != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = tail(matchValue_1[1]);\n                                x2_1 = head(matchValue_1[1]);\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (head(matchValue[0]) != null) {\n                    const x1_1 = head(matchValue[0]);\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (!isEmpty_1(matchValue_2[0])) {\n                        if (head(matchValue_2[0]) != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = tail(matchValue_2[0]);\n                            x1_2 = head(matchValue_2[0]);\n                        }\n                        else if (!isEmpty_1(matchValue_2[1])) {\n                            if (head(matchValue_2[1]) != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = tail(matchValue_2[1]);\n                                x2_2 = head(matchValue_2[1]);\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (!isEmpty_1(matchValue_2[1])) {\n                        if (head(matchValue_2[1]) != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = tail(matchValue_2[1]);\n                            x2_2 = head(matchValue_2[1]);\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = tail(matchValue[0]);\n                    l2_mut = tail(matchValue[1]);\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (isEmpty_1(matchValue[1])) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\n                    continue loop;\n                }\n                else {\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, empty_1());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = ((j + 1) | 0);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = fill(new Array(n), 0, n, null);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport function SetTreeModule_ofList(comparer, l) {\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return SetTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof FSharpList) {\n        return SetTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        return (\"set [\" + join(\"; \", map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return Array.from(this$);\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            f(x, x, s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    return FSharpSet__get_Tree(s) == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    if (FSharpSet__get_Tree(set1) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set1) == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    if (FSharpSet__get_Tree(b) == null) {\n        return b;\n    }\n    else if (FSharpSet__get_Tree(a) == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = ((((res << 1) + structuralHash(x_1)) + 631) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function unionWith(s1, s2) {\n    return fold_3((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = getEnumerator(s1.keys());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                void s1.delete(x);\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","import { Record, Union } from \"./.fable/fable-library.3.1.12/Types.js\";\nimport { int32_type, bool_type, record_type, list_type, union_type, string_type, array_type, class_type } from \"./.fable/fable-library.3.1.12/Reflection.js\";\nimport { printf, toText } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { ofList, empty } from \"./.fable/fable-library.3.1.12/Set.js\";\nimport { comparePrimitives } from \"./.fable/fable-library.3.1.12/Util.js\";\nimport { singleton } from \"./.fable/fable-library.3.1.12/List.js\";\n\nexport class AlbumState extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Loading\", \"Loaded\", \"LoadFailed\"];\n    }\n}\n\nexport function AlbumState$reflection() {\n    return union_type(\"Model.AlbumState\", [], AlbumState, () => [[], [[\"Item\", array_type(class_type(\"Album.IMediaInfo\"))]], [[\"Item\", string_type]]]);\n}\n\nexport function AlbumState__get_AsString(this$) {\n    switch (this$.tag) {\n        case 1: {\n            return \"Album Loaded\";\n        }\n        case 2: {\n            return toText(printf(\"Album Load Failed (%s)\"))(this$.fields[0]);\n        }\n        default: {\n            return \"Album Loading\";\n        }\n    }\n}\n\nexport class ModelState extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Loading\", \"Loaded\", \"Error\"];\n    }\n}\n\nexport function ModelState$reflection() {\n    return union_type(\"Model.ModelState\", [], ModelState, () => [[], [], [[\"Item\", list_type(class_type(\"System.Exception\"))]]]);\n}\n\nexport class Model extends Record {\n    constructor(state, albumState, lang, completed, flags) {\n        super();\n        this.state = state;\n        this.albumState = albumState;\n        this.lang = lang;\n        this.completed = completed;\n        this.flags = flags;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"Model.Model\", [], Model, () => [[\"state\", ModelState$reflection()], [\"albumState\", AlbumState$reflection()], [\"lang\", string_type], [\"completed\", class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [string_type])], [\"flags\", class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [string_type])]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ignore\", \"CheckInitTaskDone\", \"InitError\", \"LoadAlbumResponse\", \"SwitchLanguage\", \"Completed\", \"SetFlag\", \"TriggerAfter\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Model.Msg\", [], Msg, () => [[], [], [[\"Item\", class_type(\"System.Exception\")]], [[\"Item\", class_type(\"Album.IResult\")]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item1\", string_type], [\"Item2\", bool_type]], [[\"ms\", int32_type], [\"Item2\", Msg$reflection()]]]);\n}\n\nexport function initModel(arg) {\n    return new Model(new ModelState(0), new AlbumState(0), \"unspecified\", empty({\n        Compare: (x, y) => comparePrimitives(x, y),\n    }), ofList(singleton(\"playButtonIsShown\"), {\n        Compare: (x_1, y_1) => comparePrimitives(x_1, y_1),\n    }));\n}\n\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { bool_type, class_type, union_type, obj_type, int32_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\nimport { result } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\nimport { singleton } from \"../fable-library.3.1.12/List.js\";\n\nexport class Types_HttpRequestHeaders extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Accept\", \"Accept-Charset\", \"Accept-Encoding\", \"Accept-Language\", \"Accept-Datetime\", \"Authorization\", \"Cache-Control\", \"Connection\", \"Cookie\", \"Content-Length\", \"Content-MD5\", \"Content-Type\", \"Date\", \"Expect\", \"Forwarded\", \"From\", \"Host\", \"If-Match\", \"If-Modified-Since\", \"If-None-Match\", \"If-Range\", \"If-Unmodified-Since\", \"Max-Forwards\", \"Origin\", \"Pragma\", \"Proxy-Authorization\", \"Range\", \"Referer\", \"SOAPAction\", \"TE\", \"User-Agent\", \"Upgrade\", \"Via\", \"Warning\", \"X-Requested-With\", \"DNT\", \"X-Forwarded-For\", \"X-Forwarded-Host\", \"X-Forwarded-Proto\", \"Front-End-Https\", \"X-Http-Method-Override\", \"X-ATT-DeviceId\", \"X-Wap-Profile\", \"Proxy-Connection\", \"X-UIDH\", \"X-Csrf-Token\", \"Custom\"];\n    }\n}\n\nexport function Types_HttpRequestHeaders$reflection() {\n    return union_type(\"Fetch.Types.HttpRequestHeaders\", [], Types_HttpRequestHeaders, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"key\", string_type], [\"value\", obj_type]]]);\n}\n\nexport class Types_RequestProperties extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Method\", \"Headers\", \"Body\", \"Mode\", \"Credentials\", \"Cache\", \"Redirect\", \"Referrer\", \"ReferrerPolicy\", \"Integrity\", \"KeepAlive\", \"Signal\"];\n    }\n}\n\nexport function Types_RequestProperties$reflection() {\n    return union_type(\"Fetch.Types.RequestProperties\", [], Types_RequestProperties, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Fetch.Types.IHttpRequestHeaders\")]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", class_type(\"Fetch.Types.AbortSignal\")]]]);\n}\n\nfunction errorString(response) {\n    return (((int32ToString(response.status) + \" \") + (response.statusText)) + \" for URL \") + (response.url);\n}\n\nexport function fetch$(url, init) {\n    const pr = fetch(url, keyValueList(init, 1));\n    return pr.then(((response) => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            const message = errorString(response);\n            throw (new Error(message));\n        }\n    }));\n}\n\nexport function tryFetch(url, init) {\n    return result(fetch$(url, init));\n}\n\nexport function tryOptionsRequest(url) {\n    return result(fetch$(url, singleton(new Types_RequestProperties(0, \"OPTIONS\"))));\n}\n\n","import { printf, toText } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"./.fable/Fable.Promise.2.0.0/Promise.fs.js\";\nimport { promise } from \"./.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js\";\nimport { Types_RequestProperties, fetch$ } from \"./.fable/Fable.Fetch.2.2.0/Fetch.fs.js\";\nimport { ofArray } from \"./.fable/fable-library.3.1.12/List.js\";\nimport { equals } from \"./.fable/fable-library.3.1.12/Util.js\";\n\nexport function IMediaInfoModule_getOrigUrl(x) {\n    const arg30 = x.height | 0;\n    const arg20 = x.width | 0;\n    const arg10 = x.baseUrl;\n    return toText(printf(\"%s=w%d-h%d\"))(arg10)(arg20)(arg30);\n}\n\nfunction err(msg) {\n    return {\n        status: \"error\",\n        message: msg,\n    };\n}\n\nexport function get$() {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (fetch$(\"https://script.google.com/macros/s/AKfycbwc04XnKjP8Yq-yCgw34WXxcEd06BO4Y3n2B9P65rVRcXN1qQjaXfNHXcsaXjhOd0fa/exec?action=images\", ofArray([new Types_RequestProperties(0, \"GET\"), new Types_RequestProperties(3, \"cors\")])).then(((_arg1) => (_arg1.text().then(((_arg2) => (Promise.resolve(JSON.parse(_arg2, (key, value) => (equals(key, \"created\") ? (new Date(value)) : value))))))))))));\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.12/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.12/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.12/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w))));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { toString, Record, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\"), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\"), unit_type)]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { record_type, list_type, class_type, bool_type, string_type, union_type, getCaseTag, getCaseName } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Record, toString, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { stringHash, int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { defaultArg, some } from \"../fable-library.3.1.12/Option.js\";\nimport { contains, filter, append, empty, cons, fold } from \"../fable-library.3.1.12/List.js\";\nimport { join } from \"../fable-library.3.1.12/String.js\";\nimport { HTMLAttr } from \"../Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\n\nexport function Reflection_getCaseName(case$) {\n    return getCaseName(case$);\n}\n\nexport function Reflection_getCaseTag(case$) {\n    return getCaseTag(case$);\n}\n\nexport class Screen extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"All\", \"desktop\", \"tablet\", \"mobile\", \"widescreen\", \"touch\", \"fullhd\"];\n    }\n}\n\nexport function Screen$reflection() {\n    return union_type(\"Fulma.Screen\", [], Screen, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Screen_ToString_2D2414B4(screen) {\n    switch (screen.tag) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6: {\n            return \"-\" + Reflection_getCaseName(screen);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Color_IColor extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-black\", \"is-dark\", \"is-light\", \"is-white\", \"is-primary\", \"is-info\", \"is-success\", \"is-warning\", \"is-danger\", \"is-link\", \"is-black-bis\", \"is-black-ter\", \"is-grey-darker\", \"is-grey-dark\", \"is-grey\", \"is-grey-light\", \"is-grey-lighter\", \"is-white-ter\", \"is-white-bis\", \"IsCustomColor\", \"NoColor\"];\n    }\n}\n\nexport function Color_IColor$reflection() {\n    return union_type(\"Fulma.Color.IColor\", [], Color_IColor, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", string_type]], []]);\n}\n\nexport function Color_ofColor(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"is-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return Reflection_getCaseName(level);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Size_ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-small\", \"is-medium\", \"is-large\"];\n    }\n}\n\nexport function Size_ISize$reflection() {\n    return union_type(\"Fulma.Size.ISize\", [], Size_ISize, () => [[], [], []]);\n}\n\nexport class TextSize_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Is1\", \"Is2\", \"Is3\", \"Is4\", \"Is5\", \"Is6\", \"Is7\"];\n    }\n}\n\nexport function TextSize_Option$reflection() {\n    return union_type(\"Fulma.TextSize.Option\", [], TextSize_Option, () => [[], [], [], [], [], [], []]);\n}\n\nexport function TextSize_Option_ToString_Z2E0B9453(x) {\n    return int32ToString(Reflection_getCaseTag(x) + 1);\n}\n\nexport class TextAlignment_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-centered\", \"has-text-justified\", \"has-text-left\", \"has-text-right\"];\n    }\n}\n\nexport function TextAlignment_Option$reflection() {\n    return union_type(\"Fulma.TextAlignment.Option\", [], TextAlignment_Option, () => [[], [], [], []]);\n}\n\nexport class TextWeight_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-weight-light\", \"has-text-weight-normal\", \"has-text-weight-semibold\", \"has-text-weight-bold\", \"has-text-weight-medium\"];\n    }\n}\n\nexport function TextWeight_Option$reflection() {\n    return union_type(\"Fulma.TextWeight.Option\", [], TextWeight_Option, () => [[], [], [], [], []]);\n}\n\nexport class TextTransform_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-capitalized\", \"is-lowercase\", \"is-uppercase\", \"is-italic\"];\n    }\n}\n\nexport function TextTransform_Option$reflection() {\n    return union_type(\"Fulma.TextTransform.Option\", [], TextTransform_Option, () => [[], [], [], []]);\n}\n\nexport class Display_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"block\", \"flex\", \"inline\", \"inline-block\", \"inline-flex\"];\n    }\n}\n\nexport function Display_Option$reflection() {\n    return union_type(\"Fulma.Display.Option\", [], Display_Option, () => [[], [], [], [], []]);\n}\n\nexport function Display_toDisplayClass(screen, display) {\n    return (\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Display_toDisplayOnlyClass(screen, display) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return ((\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support display only.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Spacing_TypeAndDirection extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"mt\", \"mr\", \"mb\", \"ml\", \"my\", \"mx\", \"pt\", \"pr\", \"pb\", \"pl\", \"py\", \"px\"];\n    }\n}\n\nexport function Spacing_TypeAndDirection$reflection() {\n    return union_type(\"Fulma.Spacing.TypeAndDirection\", [], Spacing_TypeAndDirection, () => [[], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Spacing_Amount extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\n    }\n}\n\nexport function Spacing_Amount$reflection() {\n    return union_type(\"Fulma.Spacing.Amount\", [], Spacing_Amount, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Spacing_toSpacingClass(typ, amount) {\n    return (Reflection_getCaseName(typ) + \"-\") + Reflection_getCaseName(amount);\n}\n\nexport function Modifier_ofBackground(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-background-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-background-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofText(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-text-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-text-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofInvisible(screen) {\n    return \"is-invisible\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofHidden(screen) {\n    return \"is-hidden\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofInvisibleOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-invisible\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofHiddenOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-hidden\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Modifier_IModifier extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BackgroundColor\", \"TextColor\", \"TextWeight\", \"TextSize\", \"TextSizeOnly\", \"TextAlignment\", \"TextAlignmentOnly\", \"TextTransform\", \"Display\", \"DisplayOnly\", \"is-clearfix\", \"is-pulled-left\", \"is-pulled-right\", \"is-marginless\", \"is-paddingless\", \"is-overlay\", \"is-clipped\", \"is-radiusless\", \"is-shadowless\", \"is-unselectable\", \"is-relative\", \"IsInvisible\", \"IsHidden\", \"IsInvisibleOnly\", \"IsHiddenOnly\", \"IsSrOnly\", \"IsScreenReaderOnly\", \"Spacing\"];\n    }\n}\n\nexport function Modifier_IModifier$reflection() {\n    return union_type(\"Fulma.Modifier.IModifier\", [], Modifier_IModifier, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Color_IColor$reflection()]], [[\"Item\", TextWeight_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item\", TextTransform_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [], [], [], [], [], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [], [], [[\"Item1\", Spacing_TypeAndDirection$reflection()], [\"Item2\", Spacing_Amount$reflection()]]]);\n}\n\nexport function Modifier_parseModifiers(options) {\n    return fold((result, option) => {\n        let screen_3, screen_7;\n        switch (option.tag) {\n            case 1: {\n                return cons(Modifier_ofText(option.fields[0]), result);\n            }\n            case 2: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 3: {\n                return cons((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 4: {\n                return cons((screen_3 = option.fields[0], (screen_3.tag === 2) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 1) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 4) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_3))), \"\")))), result);\n            }\n            case 5: {\n                return cons(Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 6: {\n                return cons((screen_7 = option.fields[0], (screen_7.tag === 2) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 1) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 4) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_7))), \"\")))), result);\n            }\n            case 7: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 8: {\n                return cons(Display_toDisplayClass(option.fields[0], option.fields[1]), result);\n            }\n            case 9: {\n                return cons(Display_toDisplayOnlyClass(option.fields[0], option.fields[1]), result);\n            }\n            case 21: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisible(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 23: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisibleOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 22: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHidden(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 24: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHiddenOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 25:\n            case 26: {\n                return cons(\"is-sr-only\", result);\n            }\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20: {\n                return cons(Reflection_getCaseName(option), result);\n            }\n            case 27: {\n                return cons(Spacing_toSpacingClass(option.fields[0], option.fields[1]), result);\n            }\n            default: {\n                return cons(Modifier_ofBackground(option.fields[0]), result);\n            }\n        }\n    }, empty(), options);\n}\n\nexport class Common_GenericOption extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Common_GenericOption$reflection() {\n    return union_type(\"Fulma.Common.GenericOption\", [], Common_GenericOption, () => [[[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Common_GenericOptions extends Record {\n    constructor(Props, Classes, RemovedClasses) {\n        super();\n        this.Props = Props;\n        this.Classes = Classes;\n        this.RemovedClasses = RemovedClasses;\n    }\n}\n\nexport function Common_GenericOptions$reflection() {\n    return record_type(\"Fulma.Common.GenericOptions\", [], Common_GenericOptions, () => [[\"Props\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))], [\"Classes\", list_type(string_type)], [\"RemovedClasses\", list_type(string_type)]]);\n}\n\nexport function Common_GenericOptions_get_Empty() {\n    return new Common_GenericOptions(empty(), empty(), empty());\n}\n\nexport function Common_GenericOptions_Parse_9AE2F7C(options, parser, baseClass, baseProps) {\n    const result = fold(parser, Common_GenericOptions_get_Empty(), options);\n    const result_1 = (baseClass == null) ? result : Common_GenericOptions__AddClass_Z721C83C5(result, baseClass);\n    if (baseProps == null) {\n        return result_1;\n    }\n    else {\n        return Common_GenericOptions__AddProps_416C4D0B(result_1, baseProps);\n    }\n}\n\nexport function Common_GenericOptions__AddProp_7BFEDA81(this$, prop) {\n    return new Common_GenericOptions(cons(prop, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddProps_416C4D0B(this$, props) {\n    return new Common_GenericOptions(append(props, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, cons(cl, this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__RemoveClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, this$.Classes, cons(cl, this$.RemovedClasses));\n}\n\nexport function Common_GenericOptions__AddCaseName_1505(this$, case$) {\n    return Common_GenericOptions__AddClass_Z721C83C5(this$, Reflection_getCaseName(case$));\n}\n\nexport function Common_GenericOptions__AddModifiers_5BB435D5(this$, modifiers) {\n    return new Common_GenericOptions(this$.Props, append(Modifier_parseModifiers(modifiers), this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z6D3CD4B7(this$, el, children) {\n    const children_1 = defaultArg(children, empty());\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props), children_1);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z46A53D36(this$, el) {\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props));\n}\n\nexport function Common_parseOptions(result, option) {\n    switch (option.tag) {\n        case 0: {\n            return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n        }\n        case 2: {\n            return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n        }\n        default: {\n            return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n        }\n    }\n}\n\nexport function Common_Helpers_classes(std, options, booleans) {\n    return new HTMLAttr(64, fold((complete_1, tupledArg) => {\n        if (tupledArg[1]) {\n            return (complete_1 + \" \") + tupledArg[0];\n        }\n        else {\n            return complete_1;\n        }\n    }, fold((complete, option) => {\n        if (option == null) {\n            return complete;\n        }\n        else {\n            return (complete + \" \") + option;\n        }\n    }, std, options), booleans));\n}\n\nexport function Text_p(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"p\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_div(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_span(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Screen_ToString_2D2414B4, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Screen$reflection, Reflection_getCaseName } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { contains } from \"../../fable-library.3.1.12/List.js\";\nimport { stringHash } from \"../../fable-library.3.1.12/Util.js\";\nimport { printf, toText } from \"../../fable-library.3.1.12/String.js\";\nimport { some } from \"../../fable-library.3.1.12/Option.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Columns.ISize\", [], ISize, () => [[], [], [], [], [], [], [], []]);\n}\n\nexport function ISize_ToString_2283FB3F(x) {\n    return Reflection_getCaseName(x);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-centered\", \"is-vcentered\", \"is-multiline\", \"is-gapless\", \"is-grid\", \"is-mobile\", \"is-desktop\", \"IsGap\", \"IsGapOnly\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Columns.Option\", [], Option, () => [[], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function columns(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let screen_4, size_4, x_2, arg30, arg20, arg10, screen_5, size_5, x_3, arg30_1, arg20_1, arg10_1;\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 7: {\n                const size = option.fields[1];\n                const screen = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x, y) => (x === y),\n                    GetHashCode: (x) => stringHash(x),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n            }\n            case 8: {\n                const size_3 = option.fields[1];\n                const screen_3 = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x_1, y_1) => (x_1 === y_1),\n                    GetHashCode: (x_1) => stringHash(x_1),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), (screen_4 = screen_3, (size_4 = size_3, (screen_4.tag === 2) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 1) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 4) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : (x_2 = screen_4, (console.warn(some((arg30 = Screen_ToString_2D2414B4(x_2), (arg20 = ISize_ToString_2283FB3F(size_4), (arg10 = Screen_ToString_2D2414B4(x_2), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10)(arg20)(arg30)))))), \"\")))))));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, (screen_5 = screen_3, (size_5 = size_3, (screen_5.tag === 2) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 1) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 4) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : (x_3 = screen_5, (console.warn(some((arg30_1 = Screen_ToString_2D2414B4(x_3), (arg20_1 = ISize_ToString_2283FB3F(size_5), (arg10_1 = Screen_ToString_2D2414B4(x_3), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10_1)(arg20_1)(arg30_1)))))), \"\")))))));\n                }\n            }\n            case 10: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 9: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 11: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"columns\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Reflection_getCaseName, Modifier_IModifier$reflection, Screen$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-one-quarter\", \"is-one-third\", \"is-half\", \"is-two-thirds\", \"is-three-quarters\", \"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\", \"is-9\", \"is-10\", \"is-11\", \"is-12\", \"is-narrow\", \"is-full\", \"is-one-fifth\", \"is-two-fifths\", \"is-three-fifths\", \"is-four-fifths\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Column.ISize\", [], ISize, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Width\", \"Offset\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Column.Option\", [], Option, () => [[[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nfunction suffix(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"-desktop\";\n        }\n        case 2: {\n            return \"-tablet\";\n        }\n        case 3: {\n            return \"-mobile\";\n        }\n        case 4: {\n            return \"-widescreen\";\n        }\n        case 6: {\n            return \"-fullhd\";\n        }\n        case 5: {\n            return \"-touch\";\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function ofWidth(screen, size) {\n    return Reflection_getCaseName(size) + suffix(screen);\n}\n\nexport function ofOffset(screen, offset) {\n    const className = Reflection_getCaseName(offset);\n    return (\"is-offset-\" + className.slice(3, className.length)) + suffix(screen);\n}\n\nexport function column(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofOffset(option.fields[0], option.fields[1]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofWidth(option.fields[0], option.fields[1]));\n            }\n        }\n    }, \"column\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddProp_7BFEDA81, Common_GenericOptions__AddCaseName_1505, Reflection_getCaseName, Color_ofColor, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Size_ISize$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { union_type, string_type, lambda_type, unit_type, list_type, class_type, bool_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { DOMAttr, HTMLAttr } from \"../../Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { singleton, empty, cons, map, exists } from \"../../fable-library.3.1.12/List.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Color\", \"Size\", \"is-fullwidth\", \"is-link\", \"is-outlined\", \"is-inverted\", \"is-text\", \"is-rounded\", \"is-expanded\", \"is-hovered\", \"is-focused\", \"is-active\", \"is-loading\", \"is-static\", \"is-light\", \"Disabled\", \"Props\", \"OnClick\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Button.Option\", [], Option, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Size_ISize$reflection()]], [], [], [], [], [], [], [], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [], [[\"Item\", bool_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function btnView(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let pattern_matching_result, state;\n        switch (option.tag) {\n            case 1: {\n                pattern_matching_result = 1;\n                break;\n            }\n            case 3:\n            case 2:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 14: {\n                pattern_matching_result = 2;\n                break;\n            }\n            case 9: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 10: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 11: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 12: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 13: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 15: {\n                pattern_matching_result = 4;\n                break;\n            }\n            case 17: {\n                pattern_matching_result = 5;\n                break;\n            }\n            case 16: {\n                pattern_matching_result = 6;\n                break;\n            }\n            case 18: {\n                pattern_matching_result = 7;\n                break;\n            }\n            case 19: {\n                pattern_matching_result = 8;\n                break;\n            }\n            default: pattern_matching_result = 0}\n        switch (pattern_matching_result) {\n            case 0: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Reflection_getCaseName(option.fields[0]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                if (state) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 4: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new HTMLAttr(79, option.fields[0]));\n            }\n            case 5: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new DOMAttr(40, option.fields[0]));\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n        }\n    }, \"button\"), element, children);\n}\n\nexport function button(options, children) {\n    return btnView((props, children_1) => react.createElement(\"button\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function span(options, children) {\n    return btnView((props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function a(options, children) {\n    return btnView((props, children_1) => react.createElement(\"a\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function Input_btnInput(typ, options) {\n    if (exists((opts) => {\n        if (opts.tag === 16) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, options)) {\n        return btnView((options_1, _arg1) => react.createElement(\"input\", keyValueList(options_1, 1)), map((opts_1) => {\n            if (opts_1.tag === 16) {\n                return new Option(16, cons(new HTMLAttr(159, typ), opts_1.fields[0]));\n            }\n            else {\n                return opts_1;\n            }\n        }, options), empty());\n    }\n    else {\n        return btnView((options_2, _arg2) => react.createElement(\"input\", keyValueList(options_2, 1)), cons(new Option(16, singleton(new HTMLAttr(159, typ))), options), empty());\n    }\n}\n\nexport function Input_reset(options) {\n    return Input_btnInput(\"reset\", options);\n}\n\nexport function Input_submit(options) {\n    return Input_btnInput(\"submit\", options);\n}\n\nexport class List_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-addons\", \"is-centered\", \"is-right\", \"are-small\", \"are-medium\", \"are-large\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function List_Option$reflection() {\n    return union_type(\"Fulma.Button.List.Option\", [], List_Option, () => [[], [], [], [], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function list(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"buttons\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import i18next from \"i18next\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport { Prop, CSSProp, HTMLAttr } from \"../.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { contains } from \"../.fable/fable-library.3.1.12/Set.js\";\nimport { ofArray, singleton } from \"../.fable/fable-library.3.1.12/List.js\";\nimport { Common_parseOptions, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Common_GenericOption } from \"../.fable/Fulma.2.10.0/Common.fs.js\";\nimport { Msg, AlbumState__get_AsString } from \"../Model.fs.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.1.12/String.js\";\nimport { Option, button } from \"../.fable/Fulma.2.10.0/Elements/Button.fs.js\";\nimport { Language_get_Flip } from \"../Properties.fs.js\";\n\nexport function viewPC(model, dispatch) {\n    let css, options, tupledArg, children_4, arg10, options_1, tupledArg_2, children_8, tupledArg_4;\n    const langSwitchText = i18next.t(\"ui:change-to-another-language\");\n    return react.createElement(\"div\", keyValueList([new HTMLAttr(65, \"menu\"), (css = singleton(new CSSProp(291, contains(\"menuIsSticky\", model.flags) ? \"fixed\" : \"absolute\")), [\"style\", keyValueList(css, 1)]), new Prop(0, \"Menu.fs:26\")], 1), (options = singleton((tupledArg = [null, null, singleton(new Prop(0, \"Menu.fs:27\"))], new Common_GenericOption(1, tupledArg[2]))), (children_4 = ofArray([react.createElement(\"p\", {\n        key: \"hello-world\",\n    }, i18next.t(\"Hello, world!\")), react.createElement(\"p\", {\n        key: \"album-state\",\n    }, (arg10 = AlbumState__get_AsString(model.albumState), toText(printf(\"album: %s\"))(arg10)))]), Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"block\"), (props_5, children_5) => react.createElement(\"div\", keyValueList(props_5, 1), ...children_5), children_4))), (options_1 = singleton((tupledArg_2 = [null, null, singleton(new Prop(0, \"Menu.fs:31\"))], new Common_GenericOption(1, tupledArg_2[2]))), (children_8 = singleton(button(ofArray([(tupledArg_4 = [null, null, singleton(new Prop(0, \"Menu.fs:33\"))], new Option(16, tupledArg_4[2])), new Option(17, (_arg1_3) => {\n        dispatch(new Msg(4, Language_get_Flip()(model.lang)));\n    })]), singleton(langSwitchText))), Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options_1, (result_1, option_1) => Common_parseOptions(result_1, option_1), \"block\"), (props_10, children_9) => react.createElement(\"div\", keyValueList(props_10, 1), ...children_9), children_8))));\n}\n\n","\nexport const Assets_InlineSVG_LeftButton = \"\\u003csvg class=\\\"left-button\\\" width=\\\"67\\\" height=\\\"67\\\" viewBox=\\\"0 0 67 67\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\u003e\\n\\u003cpath class=\\\"circle\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"M33.4 65.8C51.294 65.8 65.8 51.294 65.8 33.4C65.8 15.506 51.294 1 33.4 1C15.506 1 1 15.506 1 33.4C1 51.294 15.506 65.8 33.4 65.8Z\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\"/\\u003e\\n\\u003cpath class=\\\"arrow\\\"  vector-effect=\\\"non-scaling-stroke\\\" d=\\\"M41.1 18.6992L19.5 33.3992L41.1 48.0992\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\"/\\u003e\\n\\u003c/svg\\u003e\";\n\nexport const Assets_InlineSVG_RightButton = \"\\u003csvg class=\\\"right-button\\\" width=\\\"67\\\" height=\\\"67\\\" viewBox=\\\"0 0 67 67\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\u003e\\n\\u003cpath class=\\\"circle\\\" vector-effect=\\\"non-scaling-stroke\\\" d=\\\"M33.3998 1.00078C15.5058 1.00077 0.999806 15.5067 0.999804 33.4008C0.999803 51.2948 15.5058 65.8008 33.3998 65.8008C51.2938 65.8008 65.7998 51.2948 65.7998 33.4008C65.7998 15.5068 51.2938 1.00078 33.3998 1.00078Z\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\"/\\u003e\\n\\u003cpath class=\\\"arrow\\\"  vector-effect=\\\"non-scaling-stroke\\\" d=\\\"M25.6998 48.1016L47.2998 33.4016L25.6998 18.7016\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\"/\\u003e\\n\\u003c/svg\\u003e\";\n\nexport const Assets_InlineSVG_TwitterButton = \"\\u003csvg width=\\\"50\\\" height=\\\"50\\\" viewBox=\\\"0 0 50 50\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\u003e\\n\\u003cpath d=\\\"M25 50C38.8071 50 50 38.8071 50 25C50 11.1929 38.8071 0 25 0C11.1929 0 0 11.1929 0 25C0 38.8071 11.1929 50 25 50Z\\\" fill=\\\"white\\\"/\\u003e\\n\\u003cpath d=\\\"M20.5 38.1673C31.6667 38.1673 37.6667 29.0007 37.6667 21.0007C37.6667 20.6673 37.6667 20.5007 37.6667 20.1673C38.8333 19.334 39.8333 18.334 40.6667 17.0007C39.6667 17.5007 38.5 17.834 37.1667 18.0007C38.5 17.334 39.3333 16.0007 39.8333 14.6673C38.6667 15.334 37.3333 15.834 36 16.1673C34.8333 15.0007 33.3333 14.334 31.5 14.334C28.1667 14.334 25.5 17.0007 25.5 20.334C25.5 20.834 25.5 21.334 25.6667 21.6673C20.6667 21.334 16.1667 19.0007 13.1667 15.334C12.6667 16.1673 12.3333 17.334 12.3333 18.334C12.3333 20.5007 13.3333 22.334 15 23.334C14 23.334 13.1667 23.0007 12.3333 22.6673C12.3333 25.6673 14.3333 28.0007 17.1667 28.5007C16.6667 28.6673 16.1667 28.6673 15.5 28.6673C15.1667 28.6673 14.6667 28.6673 14.3333 28.5007C15.1667 30.834 17.3333 32.6673 20 32.6673C18 34.334 15.3333 35.1673 12.5 35.1673C12 35.1673 11.5 35.1673 11 35.0007C13.8333 37.1673 17 38.1673 20.5 38.1673Z\\\" fill=\\\"black\\\"/\\u003e\\n\\u003c/svg\\u003e\";\n\nexport const Assets_InlineSVG_PlayMovie = \"\\u003csvg class=\\\"watch-movie\\\" width=\\\"264\\\" height=\\\"67\\\" viewBox=\\\"0 0 264 67\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\u003e\\n\\u003cpath class=\\\"text\\\" d=\\\"M91.176 40H93.246L95.892 30.1H95.982L98.628 40H100.698L103.578 28.408H104.514V27.436H100.77V28.408H102.3L100.122 37.858H100.032L97.368 27.436H95.424L92.76 37.858H92.67L90.492 28.408H92.022V27.436H87.36V28.408H88.296L91.176 40ZM107.456 40.216C109.112 40.216 109.778 39.406 110.12 38.614H110.21V38.704C110.21 39.586 110.714 40.216 111.812 40.216C112.406 40.216 112.982 40.054 113.306 39.856V39.046H112.082V33.43C112.082 31.54 110.894 30.424 108.662 30.424C106.322 30.424 105.008 31.486 105.008 32.584C105.008 33.304 105.476 33.754 106.106 33.754C106.844 33.754 107.258 33.304 107.258 32.638C107.258 32.116 106.97 31.828 106.718 31.702V31.63C107.006 31.468 107.492 31.378 108.05 31.378C109.436 31.378 110.066 32.17 110.066 33.628V34.852H108.77C105.854 34.852 104.63 35.806 104.63 37.624C104.63 39.226 105.602 40.216 107.456 40.216ZM108.248 38.956C107.294 38.956 106.7 38.542 106.7 37.678V37.336C106.7 36.31 107.294 35.734 108.986 35.734H110.066V37.336C110.066 38.47 109.292 38.956 108.248 38.956ZM117.426 40.144C118.434 40.144 119.442 39.964 119.838 39.766V38.974H117.588V31.684H119.838V30.64H117.588V28.138H116.544L115.986 29.722C115.77 30.316 115.554 30.64 114.654 30.64H114.348V31.684H115.572V38.344C115.572 39.586 116.076 40.144 117.426 40.144ZM125.406 40.216C127.494 40.216 128.628 38.884 129.078 37.66L128.304 37.192C127.872 38.11 127.116 38.812 125.694 38.812C124.164 38.812 123.21 37.696 123.21 35.896V34.33C123.21 32.566 124.254 31.378 125.838 31.378C126.486 31.378 126.9 31.504 127.188 31.63V31.72C126.738 31.918 126.414 32.332 126.414 32.89C126.414 33.556 126.828 34.06 127.62 34.06C128.394 34.06 128.88 33.556 128.88 32.728C128.88 31.396 127.638 30.424 125.586 30.424C122.94 30.424 121.014 32.26 121.014 35.32C121.014 38.182 122.58 40.216 125.406 40.216ZM130.255 40H134.683V39.028H133.495V33.43C133.495 32.296 134.503 31.774 135.457 31.774C136.753 31.774 137.329 32.476 137.329 34.024V39.028H136.141V40H140.569V39.028H139.345V33.916C139.345 31.594 138.463 30.424 136.195 30.424C134.755 30.424 133.891 31.27 133.585 32.098H133.495V26.32L130.255 26.95V27.742L131.479 27.976V39.028H130.255V40ZM150.797 40.216C153.533 40.216 155.135 38.596 155.135 36.382C155.135 34.33 153.785 33.196 151.481 32.638L150.635 32.458C148.961 32.044 148.277 31.468 148.277 30.28C148.277 29.164 149.069 28.336 150.725 28.336C152.489 28.336 153.299 28.984 153.299 30.208V31.018H154.937V27.436H153.299V28.426H153.209C152.885 27.778 152.003 27.22 150.581 27.22C148.061 27.22 146.477 28.624 146.477 30.694C146.477 32.926 147.917 34.042 150.257 34.582L151.175 34.798C152.705 35.176 153.299 35.752 153.299 36.922C153.299 38.236 152.471 39.1 150.563 39.1C148.745 39.1 147.953 38.362 147.953 37.12V36.31H146.315V40H147.953V38.938H148.043C148.385 39.622 149.321 40.216 150.797 40.216ZM156.729 43.6H161.553V42.628H159.969V38.596H160.059C160.437 39.46 161.283 40.216 162.687 40.216C164.991 40.216 166.467 38.398 166.467 35.32C166.467 32.242 164.991 30.424 162.687 30.424C161.301 30.424 160.437 31.18 160.059 32.044H159.969V30.424L156.729 31.054V31.846L157.953 32.08V42.628H156.729V43.6ZM162.057 38.92C160.977 38.92 159.969 38.254 159.969 37.156V33.484C159.969 32.386 160.977 31.72 162.057 31.72C163.425 31.72 164.307 32.728 164.307 34.366V36.274C164.307 37.912 163.425 38.92 162.057 38.92ZM172.585 40.216C174.727 40.216 175.933 38.902 176.383 37.678L175.609 37.21C175.195 38.128 174.367 38.812 172.981 38.812C171.415 38.812 170.389 37.732 170.389 35.878V35.302H176.581V34.816C176.581 32.188 175.015 30.424 172.477 30.424C169.975 30.424 168.211 32.35 168.211 35.32C168.211 38.236 169.813 40.216 172.585 40.216ZM170.389 34.114C170.389 32.404 171.145 31.432 172.477 31.432C173.827 31.432 174.493 32.422 174.493 34.15V34.348H170.389V34.114ZM182.447 40.216C184.535 40.216 185.669 38.884 186.119 37.66L185.345 37.192C184.913 38.11 184.157 38.812 182.735 38.812C181.205 38.812 180.251 37.696 180.251 35.896V34.33C180.251 32.566 181.295 31.378 182.879 31.378C183.527 31.378 183.941 31.504 184.229 31.63V31.72C183.779 31.918 183.455 32.332 183.455 32.89C183.455 33.556 183.869 34.06 184.661 34.06C185.435 34.06 185.921 33.556 185.921 32.728C185.921 31.396 184.679 30.424 182.627 30.424C179.981 30.424 178.055 32.26 178.055 35.32C178.055 38.182 179.621 40.216 182.447 40.216ZM189.762 28.894C190.536 28.894 190.986 28.408 190.986 27.706V27.598C190.986 26.896 190.536 26.41 189.762 26.41C188.988 26.41 188.538 26.896 188.538 27.598V27.706C188.538 28.408 188.988 28.894 189.762 28.894ZM187.53 40H191.994V39.028H190.77V30.424L187.53 31.054V31.846L188.754 32.08V39.028H187.53V40ZM196.103 40.216C197.759 40.216 198.425 39.406 198.767 38.614H198.857V38.704C198.857 39.586 199.361 40.216 200.459 40.216C201.053 40.216 201.629 40.054 201.953 39.856V39.046H200.729V33.43C200.729 31.54 199.541 30.424 197.309 30.424C194.969 30.424 193.655 31.486 193.655 32.584C193.655 33.304 194.123 33.754 194.753 33.754C195.491 33.754 195.905 33.304 195.905 32.638C195.905 32.116 195.617 31.828 195.365 31.702V31.63C195.653 31.468 196.139 31.378 196.697 31.378C198.083 31.378 198.713 32.17 198.713 33.628V34.852H197.417C194.501 34.852 193.277 35.806 193.277 37.624C193.277 39.226 194.249 40.216 196.103 40.216ZM196.895 38.956C195.941 38.956 195.347 38.542 195.347 37.678V37.336C195.347 36.31 195.941 35.734 197.633 35.734H198.713V37.336C198.713 38.47 197.939 38.956 196.895 38.956ZM203.064 40H207.528V39.028H206.304V26.32L203.064 26.95V27.742L204.288 27.976V39.028H203.064V40ZM213.144 40H216.942V39.028H215.628V29.416H215.718L216.618 31.54L219.714 37.966L222.828 31.54L223.728 29.416H223.818V39.028H222.504V40H227.256V39.028H225.942V28.408H227.256V27.436H223.584L220.254 34.474H220.2L216.888 27.436H213.144V28.408H214.458V39.028H213.144V40ZM233.283 39.154C231.789 39.154 231.087 38.128 231.087 36.58V34.06C231.087 32.512 231.789 31.486 233.283 31.486C234.777 31.486 235.479 32.512 235.479 34.06V36.58C235.479 38.128 234.777 39.154 233.283 39.154ZM233.283 40.216C235.911 40.216 237.675 38.344 237.675 35.32C237.675 32.296 235.911 30.424 233.283 30.424C230.655 30.424 228.891 32.296 228.891 35.32C228.891 38.344 230.655 40.216 233.283 40.216ZM242.383 40H243.949L247.117 31.612H248.017V30.64H244.723V31.612H245.911L243.697 38.038H243.607L241.393 31.612H242.581V30.64H238.315V31.612H239.215L242.383 40ZM251.128 28.894C251.902 28.894 252.352 28.408 252.352 27.706V27.598C252.352 26.896 251.902 26.41 251.128 26.41C250.354 26.41 249.904 26.896 249.904 27.598V27.706C249.904 28.408 250.354 28.894 251.128 28.894ZM248.896 40H253.36V39.028H252.136V30.424L248.896 31.054V31.846L250.12 32.08V39.028H248.896V40ZM259.052 40.216C261.194 40.216 262.4 38.902 262.85 37.678L262.076 37.21C261.662 38.128 260.834 38.812 259.448 38.812C257.882 38.812 256.856 37.732 256.856 35.878V35.302H263.048V34.816C263.048 32.188 261.482 30.424 258.944 30.424C256.442 30.424 254.678 32.35 254.678 35.32C254.678 38.236 256.28 40.216 259.052 40.216ZM256.856 34.114C256.856 32.404 257.612 31.432 258.944 31.432C260.294 31.432 260.96 32.422 260.96 34.15V34.348H256.856V34.114Z\\\" fill=\\\"white\\\"/\\u003e\\n\\u003cpath class=\\\"circle\\\" d=\\\"M33.4 65.8C51.294 65.8 65.8 51.294 65.8 33.4C65.8 15.506 51.294 1 33.4 1C15.506 1 1 15.506 1 33.4C1 51.294 15.506 65.8 33.4 65.8Z\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\"/\\u003e\\n\\u003cpath class=\\\"play\\\" d=\\\"M28.0996 44.8L44.8996 33.4L28.0996 22V44.8Z\\\" fill=\\\"white\\\"/\\u003e\\n\\u003c/svg\\u003e\";\n\nexport const Assets_InlineSVG_MenuBox = \"\\u003csvg width=\\\"220\\\" height=\\\"830\\\" viewBox=\\\"0 0 220 830\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\u003e\\n\\u003crect vector-effect=\\\"non-scaling-stroke\\\" width=\\\"220\\\" height=\\\"830\\\" fill=\\\"black\\\"/\\u003e\\n\\u003crect vector-effect=\\\"non-scaling-stroke\\\" x=\\\"1\\\" y=\\\"1\\\" width=\\\"218\\\" height=\\\"828\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\"/\\u003e\\n\\u003crect vector-effect=\\\"non-scaling-stroke\\\" x=\\\"1\\\" y=\\\"1\\\" width=\\\"208\\\" height=\\\"818\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\"/\\u003e\\n\\u003cline vector-effect=\\\"non-scaling-stroke\\\" y1=\\\"29\\\" x2=\\\"210\\\" y2=\\\"29\\\" stroke=\\\"white\\\" stroke-width=\\\"2\\\"/\\u003e\\n\\u003c/svg\\u003e\";\n\nexport function Language_get_Flip() {\n    return (_arg1) => ((_arg1 === \"en\") ? \"ja\" : ((_arg1 === \"ja\") ? \"en\" : \"unspecified\"));\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { union_type, string_type, list_type, class_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Props\", \"CustomClass\", \"is-medium\", \"is-large\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Section.Option\", [], Option, () => [[[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [], [], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function section(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 3: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 0: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"section\"), (props_1, children_1) => react.createElement(\"section\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import * as react from \"react\";\nimport { equals, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { choose, fold } from \"../fable-library.3.1.12/Seq.js\";\nimport { isNullOrEmpty } from \"../fable-library.3.1.12/String.js\";\nimport { HTMLAttr } from \"./Fable.React.Props.fs.js\";\n\nexport function ReactElementTypeModule_memo(render) {\n    return react.memo(render, uncurry(2, null));\n}\n\nexport function ReactElementTypeModule_memoWith(areEqual, render) {\n    return react.memo(render, areEqual);\n}\n\nexport function Helpers_equalsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : equals(xValue, y[key]));\n        }\n        return result;\n    }\n    else {\n        return equals(x, y);\n    }\n}\n\nexport function Helpers_memoEqualsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : (xValue === y[key]));\n        }\n        return result;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Helpers_memoBuilder(name, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memo(render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_memoBuilderWith(name, areEqual, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memoWith(areEqual, render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_opt(o) {\n    const o_1 = o;\n    if (o_1 == null) {\n        return null;\n    }\n    else {\n        return o_1;\n    }\n}\n\nexport const Helpers_nothing = null;\n\nexport function Helpers_classBaseList(baseClass, classes) {\n    return new HTMLAttr(64, fold((state, name_1) => ((state + \" \") + name_1), baseClass, choose((tupledArg) => {\n        const name = tupledArg[0];\n        if (tupledArg[1] ? (!isNullOrEmpty(name)) : false) {\n            return name;\n        }\n        else {\n            return void 0;\n        }\n    }, classes)));\n}\n\nexport function Helpers_classList(classes) {\n    return Helpers_classBaseList(\"\", classes);\n}\n\n","import { class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { defaultArg, value as value_1 } from \"../fable-library.3.1.12/Option.js\";\nimport { curry, int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { ReactElementTypeModule_memoWith } from \"./Fable.React.Helpers.fs.js\";\nimport * as react from \"react\";\n\nexport class Cache {\n    constructor() {\n    }\n}\n\nexport function Cache$reflection() {\n    return class_type(\"Fable.React.Cache\", void 0, Cache);\n}\n\nexport function Cache_$ctor() {\n    return new Cache();\n}\n\n(() => {\n    Cache.cache = (new Map());\n})();\n\nexport function Cache_GetOrAdd_Z3AD3E68D(key, valueFactory) {\n    if (Cache.cache.has(key)) {\n        return Cache.cache.get(key);\n    }\n    else {\n        const v = valueFactory(key);\n        void Cache.cache.set(key, v);\n        return v;\n    }\n}\n\nexport class FunctionComponent {\n    constructor() {\n    }\n}\n\nexport function FunctionComponent$reflection() {\n    return class_type(\"Fable.React.FunctionComponent\", void 0, FunctionComponent);\n}\n\nexport function FunctionComponent_Of_Z5A158BBF(render, displayName, memoizeWith, withKey, __callingMemberName, __callingSourceFile, __callingSourceLine) {\n    return Cache_GetOrAdd_Z3AD3E68D((value_1(__callingSourceFile) + \"#L\") + int32ToString(value_1(__callingSourceLine)), (_arg1) => {\n        const displayName_1 = defaultArg(displayName, value_1(__callingMemberName));\n        render.displayName = displayName_1;\n        let elemType;\n        if (curry(2, memoizeWith) == null) {\n            elemType = render;\n        }\n        else {\n            const memoElement = ReactElementTypeModule_memoWith(memoizeWith, render);\n            memoElement.displayName = ((\"Memo(\" + displayName_1) + \")\");\n            elemType = memoElement;\n        }\n        return (props) => {\n            let f_1;\n            return react.createElement(elemType, (withKey == null) ? props : (f_1 = withKey, (props.key = f_1(props), props)));\n        };\n    });\n}\n\n","import { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport * as react from \"react\";\nimport { map, defaultArg } from \"../.fable/fable-library.3.1.12/Option.js\";\nimport { Assets_InlineSVG_RightButton, Assets_InlineSVG_LeftButton } from \"../Properties.fs.js\";\nimport { DangerousHtml } from \"../.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { uncurry } from \"../.fable/fable-library.3.1.12/Util.js\";\nimport { ReactSlick_slider } from \"../Wrappers/Rewrap.fs.js\";\nimport { indexed, singleton, collect, delay, toList } from \"../.fable/fable-library.3.1.12/Seq.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.1.12/String.js\";\nimport { IMediaInfoModule_getOrigUrl } from \"../Album.fs.js\";\nimport { empty, singleton as singleton_1 } from \"../.fable/fable-library.3.1.12/List.js\";\n\nconst prevArrow = FunctionComponent_Of_Z5A158BBF((props) => react.createElement(\"div\", {\n    className: defaultArg(props.className, \"\"),\n    onClick: defaultArg(map((arg) => arg, props.onClick), (value_3) => {\n    }),\n    style: defaultArg(map((value_5) => value_5, props.style), \"\"),\n    dangerouslySetInnerHTML: new DangerousHtml(Assets_InlineSVG_LeftButton),\n}), void 0, uncurry(2, void 0), (_arg1) => \"PhotoGallery.fs:21\", \"prevArrow\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/PhotoGallery.fs\", 14);\n\nconst nextArrow = FunctionComponent_Of_Z5A158BBF((props) => react.createElement(\"div\", {\n    className: defaultArg(props.className, \"\"),\n    onClick: defaultArg(map((arg) => arg, props.onClick), (value_3) => {\n    }),\n    style: defaultArg(map((value_5) => value_5, props.style), \"\"),\n    dangerouslySetInnerHTML: new DangerousHtml(Assets_InlineSVG_RightButton),\n}), void 0, uncurry(2, void 0), (_arg1) => \"PhotoGallery.fs:31\", \"nextArrow\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/PhotoGallery.fs\", 24);\n\nexport function view(model, dispatch) {\n    const matchValue_1 = model.albumState;\n    if (matchValue_1.tag === 1) {\n        return singleton_1(react.createElement(\"div\", {\n            key: \"photo-gallery\",\n        }, ReactSlick_slider((it) => {\n            it.className = \"center\";\n            it.centerMode = true;\n            it.infinite = true;\n            it.centerPadding = \"0\";\n            it.slidesToShow = 1;\n            it.dots = true;\n            it.dotsClass = \"slick-dots is-hidden-mobile\";\n            it.autoplay = true;\n            it.lazyLoad = \"progressive\";\n            it.prevArrow = prevArrow({});\n            it.nextArrow = nextArrow({});\n        }, toList(delay(() => collect((matchValue) => singleton(react.createElement(\"div\", {\n            key: toText(printf(\"photo-gallery-img%d\"))(matchValue[0]),\n        }, react.createElement(\"img\", {\n            src: IMediaInfoModule_getOrigUrl(matchValue[1]),\n        }))), indexed(matchValue_1.fields[0])))))));\n    }\n    else {\n        return empty();\n    }\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { union_type, list_type, class_type, string_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__RemoveClass_Z721C83C5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { cons } from \"../../fable-library.3.1.12/List.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"subtitle`\", \"is-spaced\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Heading.Option\", [], Option, () => [[], [], [], [], [], [], [], [], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function title(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 7: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__RemoveClass_Z721C83C5(result, \"title\"), \"subtitle\");\n            }\n            case 9: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 10: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"title\"), element, children);\n}\n\nexport function h1(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h1\", keyValueList(props, 1), ...children), cons(new Option(0), options), children_3);\n}\n\nexport function h2(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h2\", keyValueList(props, 1), ...children), cons(new Option(1), options), children_3);\n}\n\nexport function h3(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h3\", keyValueList(props, 1), ...children), cons(new Option(2), options), children_3);\n}\n\nexport function h4(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h4\", keyValueList(props, 1), ...children), cons(new Option(3), options), children_3);\n}\n\nexport function h5(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h5\", keyValueList(props, 1), ...children), cons(new Option(4), options), children_3);\n}\n\nexport function h6(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h6\", keyValueList(props, 1), ...children), cons(new Option(5), options), children_3);\n}\n\nexport function p(opts, children) {\n    return title((props, children_1) => react.createElement(\"p\", keyValueList(props, 1), ...children_1), opts, children);\n}\n\n","import { Record, Union } from \"../.fable/fable-library.3.1.12/Types.js\";\nimport { option_type, lambda_type, unit_type, list_type, record_type, string_type, union_type, bool_type } from \"../.fable/fable-library.3.1.12/Reflection.js\";\nimport { length, empty, singleton, tail, head, isEmpty } from \"../.fable/fable-library.3.1.12/List.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.1.12/String.js\";\nimport * as react from \"react\";\nimport { Common_GenericOption, Common_parseOptions, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7 } from \"../.fable/Fulma.2.10.0/Common.fs.js\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport { indexed, singleton as singleton_1, collect, delay, toList } from \"../.fable/fable-library.3.1.12/Seq.js\";\nimport { Prop } from \"../.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { Helpers_memoEqualsButFunctions } from \"../.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js\";\n\nexport class MixCloudOption extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"HideCover\", \"HideArtwork\", \"Mini\"];\n    }\n}\n\nexport function MixCloudOption$reflection() {\n    return union_type(\"MixCloud.MixCloudOption\", [], MixCloudOption, () => [[[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]]]);\n}\n\nfunction buildMixCloudUrl(opts, user, mix) {\n    const go = (acc_mut, _arg1_mut) => {\n        go:\n        while (true) {\n            const acc = acc_mut, _arg1 = _arg1_mut;\n            if (!isEmpty(_arg1)) {\n                const x = head(_arg1);\n                acc_mut = ((x.tag === 1) ? (x.fields[0] ? (acc + \"hide_artwork=1\\u0026\") : \"\") : ((x.tag === 2) ? (x.fields[0] ? (acc + \"mini=1\\u0026\") : \"\") : (x.fields[0] ? (acc + \"hide_cover=1\\u0026\") : \"\")));\n                _arg1_mut = tail(_arg1);\n                continue go;\n            }\n            else {\n                return toText(printf(\"https://www.mixcloud.com/widget/iframe/?%sfeed=%%2F%s%%2F%s%%2F\"))(acc)(user)(mix);\n            }\n            break;\n        }\n    };\n    return go(\"\", opts);\n}\n\nexport function mixCloud(options, user, mix) {\n    const children_2 = singleton(react.createElement(\"iframe\", {\n        style: {\n            width: \"100%\",\n            height: 120,\n        },\n        src: buildMixCloudUrl(options, user, mix),\n        frameBorder: 0,\n    }));\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(empty(), (result, option) => Common_parseOptions(result, option), \"block\"), (props_2, children_3) => react.createElement(\"div\", keyValueList(props_2, 1), ...children_3), children_2);\n}\n\nexport class MixCloudListProp extends Record {\n    constructor(user, mixName) {\n        super();\n        this.user = user;\n        this.mixName = mixName;\n    }\n}\n\nexport function MixCloudListProp$reflection() {\n    return record_type(\"MixCloud.MixCloudListProp\", [], MixCloudListProp, () => [[\"user\", string_type], [\"mixName\", string_type]]);\n}\n\nexport class MixCloudListProps extends Record {\n    constructor(items, options, onLoad) {\n        super();\n        this.items = items;\n        this.options = options;\n        this.onLoad = onLoad;\n    }\n}\n\nexport function MixCloudListProps$reflection() {\n    return record_type(\"MixCloud.MixCloudListProps\", [], MixCloudListProps, () => [[\"items\", list_type(MixCloudListProp$reflection())], [\"options\", list_type(MixCloudOption$reflection())], [\"onLoad\", option_type(lambda_type(unit_type, unit_type))]]);\n}\n\nexport const mixCloudList = FunctionComponent_Of_Z5A158BBF((props) => {\n    const propsCount = length(props.items) | 0;\n    const loadedPropsCount = react.useState(0);\n    react.useEffect(() => {\n        if ((loadedPropsCount[0]) === propsCount) {\n            loadedPropsCount[1](-1);\n            const matchValue = props.onLoad;\n            if (matchValue != null) {\n                matchValue();\n            }\n        }\n    });\n    return react.createElement(\"div\", {}, ...toList(delay(() => collect((matchValue_1) => {\n        let options, tupledArg, children_2;\n        const item = matchValue_1[1];\n        return singleton_1((options = singleton((tupledArg = [null, null, singleton(new Prop(0, toText(printf(\"%d-mixcloud-%s-%s\"))(matchValue_1[0])(item.user)(item.mixName)))], new Common_GenericOption(1, tupledArg[2]))), (children_2 = singleton(react.createElement(\"iframe\", {\n            style: {\n                width: \"100%\",\n                height: 120,\n            },\n            src: buildMixCloudUrl(props.options, item.user, item.mixName),\n            frameBorder: 0,\n            onLoad: (_arg1_1) => {\n                loadedPropsCount[1](((loadedPropsCount[0]) + 1));\n            },\n        })), Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"block\"), (props_4, children_3) => react.createElement(\"div\", keyValueList(props_4, 1), ...children_3), children_2))));\n    }, indexed(props.items)))));\n}, void 0, (x_3, y_1) => Helpers_memoEqualsButFunctions(x_3, y_1), (prop) => toText(printf(\"%A\"))(prop.items), \"mixCloudList\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/Component/MixCloud.fs\", 46);\n\n","import { Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3, y_5;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            wj = (y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = (v | 0);\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = (v | 0);\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = ((n.digits[i] + (res << 3)) | 0);\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = (bound | 0);\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = (x_1 | 0);\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = (n.digits[i] | 0);\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = (n.digits[i + d] | 0);\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = (x_3 | 0);\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = ((k + 1) | 0);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = (i | 0);\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = ((n - 1) | 0);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = ((n - 1) | 0);\n                        p = ((p - 1) | 0);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return cons([k, ten2k], prior);\n            }\n            else {\n                prior_mut = cons([k, ten2k], prior);\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (!isEmpty(_arg1)) {\n                const prior_1 = tail(_arg1);\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return cons(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\n    if (isEmpty(digits_4)) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", toArray(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { Record, toString } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = (signInt | 0);\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return toString(this$);\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { compare } from \"./Util.js\";\nimport { unfold, delay } from \"./Seq.js\";\nimport { op_Addition, fromZero } from \"./BigInt.js\";\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\n\nexport function makeRangeStepFunction(step, stop, zero, add) {\n    const stepComparedWithZero = compare(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compare(x, stop) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, add(x, step)] : (void 0);\n    };\n}\n\nexport function integralRangeStep(start, step, stop, zero, add) {\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\n    return delay(() => unfold(stepFn, start));\n}\n\nexport function rangeBigInt(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\n}\n\nexport function rangeDecimal(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\n}\n\nexport function rangeDouble(start, step, stop) {\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\n}\n\nexport function rangeInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeUInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeChar(start, stop) {\n    const intStop = stop.charCodeAt(0) | 0;\n    return delay(() => unfold((c) => {\n        if (c <= intStop) {\n            return [String.fromCharCode(c), c + 1];\n        }\n        else {\n            return void 0;\n        }\n    }, start.charCodeAt(0)));\n}\n\n","import * as react from \"react\";\nimport { Option, section } from \"../.fable/Fulma.2.10.0/Layouts/Section.fs.js\";\nimport { Prop } from \"../.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { toArray, ofArray, empty, singleton } from \"../.fable/fable-library.3.1.12/List.js\";\nimport { view as view_1 } from \"./PhotoGallery.fs.js\";\nimport { Option as Option_1, h2 } from \"../.fable/Fulma.2.10.0/Elements/Heading.fs.js\";\nimport { Common_parseOptions, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7 } from \"../.fable/Fulma.2.10.0/Common.fs.js\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport { MixCloudListProps, MixCloudOption, MixCloudListProp, mixCloudList } from \"../Component/MixCloud.fs.js\";\nimport { map, delay, toList } from \"../.fable/fable-library.3.1.12/Seq.js\";\nimport { printf, toText } from \"../.fable/fable-library.3.1.12/String.js\";\nimport { rangeDouble } from \"../.fable/fable-library.3.1.12/Range.js\";\n\nexport function view(model, dispatch) {\n    let tupledArg, tupledArg_2, tupledArg_4, children_6, tupledArg_6;\n    return react.createElement(\"div\", {\n        key: \"Content.fs:17\",\n    }, section(singleton((tupledArg = [null, null, singleton(new Prop(0, \"Content.fs:18\"))], new Option(0, tupledArg[2]))), singleton(react.createElement(\"p\", {\n        key: \"Content.fs:19\",\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"))), react.createElement(\"div\", {\n        key: \"Content.fs:21\",\n    }, ...view_1(model, dispatch)), section(singleton((tupledArg_2 = [null, null, singleton(new Prop(0, \"Content.fs:22\"))], new Option(0, tupledArg_2[2]))), singleton(react.createElement(\"p\", {\n        key: \"Content.fs:23\",\n    }, \"対象は一つBYと投稿応じコードななため、出所できれる事典が公開者公式の引用要件をしれてはしある、theの作品も、著作する有償を前記よれこととして著作自由なたていますた。\\nしかし、記事の引用権は、趣旨の引用する利用自由ある文章を採録する、その最小限をありのでコンテンツを著作よれことに削除問いれます。\\nおよびを、手続財団を著作されるているライセンスとごく満たさ扱うことは、許諾なます、過去におけるは用意者の紹介として方針上の問題も有しことに、被説明物も、適法の著作にさて政治から許諾しなているませた。\\n例証さて、それの削除はなくなどするませな。\\nまたは、被策定会を、編集有し他の記事、フリーで必要に注意よれので基づきて、ライセンス見解の該当が記事を判断とどめことで掲げるて、抜粋用いますペディアを運用、引用者引用なけれですとの引用をすることは、少なくとも厳しいとさてよいんで。\"))), section(singleton((tupledArg_4 = [null, null, singleton(new Prop(0, \"Content.fs:25\"))], new Option(0, tupledArg_4[2]))), ofArray([(children_6 = singleton(h2(singleton((tupledArg_6 = [null, null, singleton([\"style\", {\n        color: \"white\",\n    }])], new Option_1(9, tupledArg_6[2]))))(singleton(\"DJ Mix\"))), Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(empty(), (result, option) => Common_parseOptions(result, option), \"block\"), (props_10, children_7) => react.createElement(\"div\", keyValueList(props_10, 1), ...children_7), children_6)), mixCloudList(new MixCloudListProps(singleton(new MixCloudListProp(\"cannorin\", \"20210402-gc-birthday-mix\")), singleton(new MixCloudOption(0, true)), void 0))])), toArray(toList(delay(() => map((i) => {\n        let tupledArg_8;\n        return section(singleton((tupledArg_8 = [null, null, singleton(new Prop(0, toText(printf(\"lorem-ipsum-%d\"))(i)))], new Option(0, tupledArg_8[2]))), singleton(react.createElement(\"p\", {\n            key: \"Content.fs:38\",\n        }, ((i % 2) === 0) ? \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\nUt enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\nExcepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\" : \"対象は一つBYと投稿応じコードななため、出所できれる事典が公開者公式の引用要件をしれてはしある、theの作品も、著作する有償を前記よれこととして著作自由なたていますた。\\nしかし、記事の引用権は、趣旨の引用する利用自由ある文章を採録する、その最小限をありのでコンテンツを著作よれことに削除問いれます。\\nおよびを、手続財団を著作されるているライセンスとごく満たさ扱うことは、許諾なます、過去におけるは用意者の紹介として方針上の問題も有しことに、被説明物も、適法の著作にさて政治から許諾しなているませた。\\n例証さて、それの削除はなくなどするませな。\\nまたは、被策定会を、編集有し他の記事、フリーで必要に注意よれので基づきて、ライセンス見解の該当が記事を判断とどめことで掲げるて、抜粋用いますペディアを運用、引用者引用なけれですとの引用をすることは、少なくとも厳しいとさてよいんで。\")));\n    }, rangeDouble(1, 1, 10))))));\n}\n\n","import * as react from \"react\";\nimport react$002Dslick from \"react-slick\";\nimport { jsOptions } from \"../.fable/fable-library.3.1.12/Util.js\";\n\nexport function ReactSlick_slider(setProps, children) {\n    return react.createElement(react$002Dslick, jsOptions(setProps), ...children);\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\nimport { toString as toString_1 } from \"./Types.js\";\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equals_1(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equals_1(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compare_1(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compare_1(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), 0, bytes.length, false);\n    }\n}\n\n","import { Union } from \"../.fable/fable-library.3.1.12/Types.js\";\nimport { tuple_type, string_type, option_type, obj_type, anonRecord_type, lambda_type, unit_type, float64_type, union_type, class_type, bool_type } from \"../.fable/fable-library.3.1.12/Reflection.js\";\nimport * as react from \"react\";\nimport { SwitchTransition, TransitionGroup, CSSTransition, Transition } from \"react-transition-group\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport { cons } from \"../.fable/fable-library.3.1.12/List.js\";\n\nexport class CommonProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Appear\", \"Enter\", \"Exit\", \"CustomProp\"];\n    }\n}\n\nexport function CommonProp$reflection() {\n    return union_type(\"ReactTransitionGroup.CommonProp\", [], CommonProp, () => [[[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", class_type(\"Fable.React.Props.IHTMLProp\")]]]);\n}\n\nexport class CommonTransitionProp$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"timeout\", \"addEndListener\", \"In\", \"MountOnEnter\", \"UnmountOnExit\", \"NodeRef\"];\n    }\n}\n\nexport function CommonTransitionProp$1$reflection(gen0) {\n    return union_type(\"ReactTransitionGroup.CommonTransitionProp`1\", [gen0], CommonTransitionProp$1, () => [[[\"Item\", float64_type]], [[\"Item\", anonRecord_type([\"explicit\", lambda_type(lambda_type(unit_type, unit_type), unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), lambda_type(lambda_type(unit_type, unit_type), unit_type))])]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", option_type(obj_type)]]]);\n}\n\nexport class TransitionProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"OnEnter\", \"OnEntering\", \"OnEntered\", \"OnExit\", \"OnExiting\", \"OnExited\"];\n    }\n}\n\nexport function TransitionProp$reflection() {\n    return union_type(\"ReactTransitionGroup.TransitionProp\", [], TransitionProp, () => [[[\"Item\", anonRecord_type([\"explicit\", lambda_type(bool_type, unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), lambda_type(bool_type, unit_type))])]], [[\"Item\", anonRecord_type([\"explicit\", lambda_type(bool_type, unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), lambda_type(bool_type, unit_type))])]], [[\"Item\", anonRecord_type([\"explicit\", lambda_type(bool_type, unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), lambda_type(bool_type, unit_type))])]], [[\"Item\", anonRecord_type([\"explicit\", lambda_type(unit_type, unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), unit_type)])]], [[\"Item\", anonRecord_type([\"explicit\", lambda_type(unit_type, unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), unit_type)])]], [[\"Item\", anonRecord_type([\"explicit\", lambda_type(unit_type, unit_type)], [\"implicit\", lambda_type(class_type(\"Browser.Types.HTMLElement\"), unit_type)])]]]);\n}\n\nexport class Class extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Appear\", \"AppearActive\", \"AppearDone\", \"Enter\", \"EnterActive\", \"EnterDone\", \"Exit\", \"ExitActive\", \"ExitDone\"];\n    }\n}\n\nexport function Class$reflection() {\n    return union_type(\"ReactTransitionGroup.Class\", [], Class, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]]]);\n}\n\nexport class CSSTransitionProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"classNames\", \"OnEnter\", \"OnEntering\", \"OnExit\", \"OnExiting\"];\n    }\n}\n\nexport function CSSTransitionProp$reflection() {\n    return union_type(\"ReactTransitionGroup.CSSTransitionProp\", [], CSSTransitionProp, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(tuple_type(class_type(\"Browser.Types.HTMLElement\"), bool_type), unit_type)]], [[\"Item\", lambda_type(tuple_type(class_type(\"Browser.Types.HTMLElement\"), bool_type), unit_type)]], [[\"Item\", lambda_type(tuple_type(class_type(\"Browser.Types.HTMLElement\"), bool_type), unit_type)]], [[\"Item\", lambda_type(tuple_type(class_type(\"Browser.Types.HTMLElement\"), bool_type), unit_type)]]]);\n}\n\nexport class Timeout extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Appear\", \"Enter\", \"Exit\"];\n    }\n}\n\nexport function Timeout$reflection() {\n    return union_type(\"ReactTransitionGroup.Timeout\", [], Timeout, () => [[[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]]]);\n}\n\nclass TransitionChildrenFunc extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Children\"];\n    }\n}\n\nfunction TransitionChildrenFunc$reflection() {\n    return union_type(\"ReactTransitionGroup.TransitionChildrenFunc\", [], TransitionChildrenFunc, () => [[[\"Item\", lambda_type(string_type, class_type(\"Fable.React.ReactElement\"))]]]);\n}\n\nexport function transition(props, children) {\n    return react.createElement(Transition, keyValueList(props, 1), children);\n}\n\nexport function transitionFunc(props, children) {\n    return react.createElement(Transition, keyValueList(cons(new TransitionChildrenFunc(0, children), props), 1));\n}\n\nexport function cssTransition(props, children) {\n    return react.createElement(CSSTransition, keyValueList(props, 1), children);\n}\n\nexport function cssTransitionFunc(props, children) {\n    return react.createElement(CSSTransition, keyValueList(cons(new TransitionChildrenFunc(0, children), props), 1));\n}\n\nexport class TransitionGroupProp$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Component\", \"ChildFactory\"];\n    }\n}\n\nexport function TransitionGroupProp$1$reflection(gen0) {\n    return union_type(\"ReactTransitionGroup.TransitionGroupProp`1\", [gen0], TransitionGroupProp$1, () => [[[\"Item\", gen0]], [[\"Item\", lambda_type(class_type(\"Fable.React.ReactElement\"), class_type(\"Fable.React.ReactElement\"))]]]);\n}\n\nexport function transitionGroup(props, children) {\n    return react.createElement(TransitionGroup, keyValueList(props, 1), ...children);\n}\n\nexport function switchTransition(mode, children) {\n    return react.createElement(SwitchTransition, {\n        mode: mode,\n    }, ...children);\n}\n\n","import { Union } from \"../.fable/fable-library.3.1.12/Types.js\";\nimport { array_type, anonRecord_type, string_type, lambda_type, unit_type, union_type, float64_type, int32_type } from \"../.fable/fable-library.3.1.12/Reflection.js\";\nimport * as react from \"react\";\nimport { StaggeredMotion, TransitionMotion, Motion } from \"react-motion\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport { cons } from \"../.fable/fable-library.3.1.12/List.js\";\n\nexport class SpringHelperConfig extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Stiffness\", \"Damping\", \"Precision\"];\n    }\n}\n\nexport function SpringHelperConfig$reflection() {\n    return union_type(\"ReactMotion.SpringHelperConfig\", [], SpringHelperConfig, () => [[[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", float64_type]]]);\n}\n\nexport class MotionProp$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultStyle\", \"Style\", \"OnRest\"];\n    }\n}\n\nexport function MotionProp$2$reflection(gen0, gen1) {\n    return union_type(\"ReactMotion.MotionProp`2\", [gen0, gen1], MotionProp$2, () => [[[\"Item\", gen1]], [[\"Item\", gen0]], [[\"Item\", lambda_type(unit_type, unit_type)]]]);\n}\n\nexport function motion(props, children) {\n    return react.createElement(Motion, keyValueList(cons([\"children\", children], props), 1));\n}\n\nexport class TransitionStyle$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Data\", \"Style\"];\n    }\n}\n\nexport function TransitionStyle$2$reflection(gen0, gen1) {\n    return union_type(\"ReactMotion.TransitionStyle`2\", [gen0, gen1], TransitionStyle$2, () => [[[\"Item\", string_type]], [[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class TransitionProp$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultStyles\", \"Styles\", \"styles\", \"WillEnter\", \"WillLeave\", \"DidLeave\"];\n    }\n}\n\nexport function TransitionProp$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"ReactMotion.TransitionProp`3\", [gen0, gen1, gen2], TransitionProp$3, () => [[[\"Item\", anonRecord_type([\"data\", gen0], [\"key\", string_type], [\"style\", gen2])]], [[\"Item\", array_type(TransitionStyle$2$reflection(gen0, gen2))]], [[\"Item\", lambda_type(array_type(anonRecord_type([\"data\", gen0], [\"key\", string_type], [\"style\", gen2])), array_type(TransitionStyle$2$reflection(gen0, gen2)))]], [[\"Item\", lambda_type(TransitionStyle$2$reflection(gen0, gen2), gen2)]], [[\"Item\", lambda_type(TransitionStyle$2$reflection(gen0, gen2), gen1)]], [[\"Item\", lambda_type(TransitionStyle$2$reflection(gen0, gen2), unit_type)]]]);\n}\n\nexport function transitionMotion(props, children) {\n    return react.createElement(TransitionMotion, keyValueList(cons([\"children\", children], props), 1));\n}\n\nexport class StaggeredMotionProp$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultStyles\", \"Styles\"];\n    }\n}\n\nexport function StaggeredMotionProp$2$reflection(gen0, gen1) {\n    return union_type(\"ReactMotion.StaggeredMotionProp`2\", [gen0, gen1], StaggeredMotionProp$2, () => [[[\"Item\", array_type(gen1)]], [[\"Item\", lambda_type(array_type(gen1), array_type(gen0))]]]);\n}\n\nexport function staggeredMotion(props, children) {\n    return react.createElement(StaggeredMotion, keyValueList(cons([\"children\", children], props), 1));\n}\n\n","import { max, comparePrimitives, min, round as round_1 } from \"../.fable/fable-library.3.1.12/Util.js\";\nimport { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport * as react from \"react\";\nimport { MotionProp$2, motion } from \"../Wrappers/ReactMotion.fs.js\";\nimport { ofArray } from \"../.fable/fable-library.3.1.12/List.js\";\nimport { initialize, substring } from \"../.fable/fable-library.3.1.12/String.js\";\nimport { Helpers_memoEqualsButFunctions } from \"../.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js\";\n\nfunction round(length) {\n    return ~(~round_1(length, 1));\n}\n\nexport const slot = FunctionComponent_Of_Z5A158BBF((props) => {\n    const textLen = props.targetText.length | 0;\n    return (!props.visible) ? react.createElement(\"span\", {\n        style: {\n            opacity: 0,\n        },\n    }, props.targetText) : motion(ofArray([new MotionProp$2(0, {\n        targetLength: 0,\n        totalLength: 0,\n    }), new MotionProp$2(1, {\n        targetLength: {\n            damping: 100,\n            precision: 0.1,\n            stiffness: 400,\n            val: textLen,\n        },\n        totalLength: {\n            damping: 100,\n            precision: 0.1,\n            stiffness: 450,\n            val: textLen,\n        },\n    })]), (style) => {\n        const totalLen = min((x, y) => comparePrimitives(x, y), round(style.totalLength) + 1, textLen) | 0;\n        const targetLen = min((x_1, y_1) => comparePrimitives(x_1, y_1), round(style.targetLength) + 1, textLen) | 0;\n        return react.createElement(\"span\", {}, substring(props.targetText, 0, targetLen) + ((totalLen === targetLen) ? props.period : initialize(max((x_2, y_2) => comparePrimitives(x_2, y_2), 0, totalLen - targetLen), (_arg1) => \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"[round(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".length * Math.random())])));\n    });\n}, void 0, (x_3, y_3) => Helpers_memoEqualsButFunctions(x_3, y_3), void 0, \"slot\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/Component/AnimatedText.fs\", 15);\n\n","import { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport * as react from \"react\";\nimport { contains } from \"../.fable/fable-library.3.1.12/Set.js\";\nimport { ModelState, Msg } from \"../Model.fs.js\";\nimport { equals } from \"../.fable/fable-library.3.1.12/Util.js\";\nimport { CommonProp, CommonTransitionProp$1, CSSTransitionProp, cssTransition } from \"../Wrappers/ReactTransitionGroup.fs.js\";\nimport { ofArray } from \"../.fable/fable-library.3.1.12/List.js\";\nimport { singleton, append, delay, toList } from \"../.fable/fable-library.3.1.12/Seq.js\";\nimport { slot } from \"../Component/AnimatedText.fs.js\";\nimport { Assets_InlineSVG_PlayMovie } from \"../Properties.fs.js\";\nimport { DangerousHtml } from \"../.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { toText, printf, toConsole } from \"../.fable/fable-library.3.1.12/String.js\";\nimport { Helpers_memoEqualsButFunctions } from \"../.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js\";\n\nexport const view = FunctionComponent_Of_Z5A158BBF((props) => {\n    let children_2, children_11;\n    const logoLoaded = react.useState(false);\n    const firstViewShown = react.useState(false);\n    const videoRef = react.useRef(void 0);\n    react.useEffect(() => {\n        const matchValue = videoRef.current;\n        if (matchValue != null) {\n            const video_1 = matchValue;\n            video_1.volume = 0;\n            video_1.defaultMuted = true;\n            video_1.muted = true;\n            video_1.setAttribute(\"muted\", \"\");\n            void setTimeout(() => {\n                video_1.play();\n            }, 1);\n        }\n    }, [videoRef]);\n    react.useEffect(() => {\n        if (contains(\"firstViewShown\", props.completed)) {\n            firstViewShown[1](true);\n        }\n        else if (contains(\"logoShown\", props.completed)) {\n            props.dispatch(new Msg(7, 1000, new Msg(5, \"firstViewShown\")));\n        }\n    }, [props.completed]);\n    return react.createElement(\"div\", {\n        className: equals(props.state, new ModelState(1)) ? \"header header-loaded\" : \"header\",\n        key: \"Header.fs:50\",\n    }, react.createElement(\"video\", {\n        className: \"background-video\",\n        key: \"background-video\",\n        ref: videoRef,\n        playsInline: true,\n        muted: true,\n        defaultMuted: true,\n        autoPlay: true,\n        loop: true,\n        poster: \"assets/video/bg.jpg\",\n        onLoadedData: (_arg1) => {\n            props.dispatch(new Msg(5, \"backgroundVideoLoaded\"));\n        },\n    }, react.createElement(\"source\", {\n        src: \"assets/video/bg.webm\",\n        type: \"video/webm\",\n    }), react.createElement(\"source\", {\n        src: \"assets/video/bg.mp4\",\n        type: \"video/mp4\",\n    }), react.createElement(\"img\", {\n        src: \"assets/video/bg.mp4\",\n        title: \"fallback\",\n    }), react.createElement(\"img\", {\n        src: \"assets/video/bg.jpg\",\n        title: \"HTML5 not supported\",\n    })), react.createElement(\"div\", {\n        className: \"header-container\",\n    }, (children_2 = react.createElement(\"div\", {\n        className: \"header-loading-screen\",\n        key: \"Header.fs:68\",\n    }), cssTransition(ofArray([new CSSTransitionProp(0, \"fade\"), new CommonTransitionProp$1(4, true), new CommonTransitionProp$1(2, !contains(\"logoShown\", props.completed)), new CommonTransitionProp$1(0, 1000)]), children_2)), react.createElement(\"div\", {\n        className: \"header-top\",\n        key: \"Header.fs:70\",\n    }, react.createElement(\"div\", {\n        key: \"Header.fs:71\",\n        className: \"slide-parent\",\n    }, react.createElement(\"p\", {\n        className: \"header-top-text\",\n        key: \"Header.fs:72\",\n    }, ...toList(delay(() => append((firstViewShown[0]) ? singleton(\"“\") : singleton(\"\"), delay(() => append(singleton(slot({\n        period: \".\",\n        targetText: \"Just a whisper...\\nI hear it in my ghost\",\n        visible: firstViewShown[0],\n    })), delay(() => ((firstViewShown[0]) ? singleton(\"”\") : singleton(\"\"))))))))))), react.createElement(\"div\", {\n        className: \"header-logo-container\",\n        key: \"Header.fs:82\",\n    }, (children_11 = react.createElement(\"img\", {\n        className: \"header-logo fade-init-hidden\",\n        src: \"assets/image/logo.svg\",\n        onLoad: (_arg2) => {\n            logoLoaded[1](true);\n            props.dispatch(new Msg(7, 1000, new Msg(5, \"logoShown\")));\n        },\n    }), cssTransition(ofArray([new CSSTransitionProp(0, \"fade\"), new CommonProp(0, true), [\"timeout\", {\n        appear: 1000,\n        enter: 1000,\n        exit: 0,\n    }], new CommonTransitionProp$1(2, logoLoaded[0])]), children_11))), react.createElement(\"div\", {\n        className: \"header-bottom\",\n        key: \"Header.fs:96\",\n    }, react.createElement(\"div\", {\n        className: \"header-bottom-playbutton-container\",\n    }, react.createElement(\"div\", {\n        className: contains(\"playButtonIsShown\", props.flags) ? \"header-bottom-playbutton\" : \"header-bottom-playbutton hidden\",\n        dangerouslySetInnerHTML: new DangerousHtml(Assets_InlineSVG_PlayMovie),\n        onClick: (_arg3) => {\n            toConsole(printf(\"play!\"));\n        },\n    })))));\n}, void 0, (x, y) => Helpers_memoEqualsButFunctions(x, y), (_arg4) => toText(printf(\"%s:%s\"))(\"Header.fs\")(\"110\"), \"view\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/Header.fs\", 21);\n\n","import { Union } from \"../.fable/fable-library.3.1.12/Types.js\";\nimport { union_type, lambda_type, unit_type, string_type, bool_type, array_type, float64_type, class_type } from \"../.fable/fable-library.3.1.12/Reflection.js\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport * as react from \"react\";\nimport { InView } from \"react-intersection-observer\";\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"root\", \"root\", \"Threshold\", \"threshold\", \"TriggerOnce\", \"Skip\", \"InitialInView\", \"TrackVisibility\", \"Delay\", \"As\", \"OnChange\", \"CustomProp\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"ReactIntersectionObserver.Prop\", [], Prop, () => [[[\"Item\", class_type(\"Browser.Types.Element\")]], [[\"Item\", class_type(\"Browser.Types.Document\")]], [[\"Item\", float64_type]], [[\"Item\", array_type(float64_type)]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(bool_type, lambda_type(class_type(\"IntersectionObserver.IntersectionObserverEntry\"), unit_type))]], [[\"Item\", class_type(\"Fable.React.Props.IHTMLProp\")]]]);\n}\n\nexport function inView(props, children) {\n    const options = keyValueList(props, 1);\n    options.children = ((props_1) => children(props_1));\n    return react.createElement(InView, options);\n}\n\nexport function inViewPlain(props, children) {\n    return react.createElement(InView, keyValueList(props, 1), children);\n}\n\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.12/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.1.12/Util.js\";\nimport { some } from \"../fable-library.3.1.12/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.12/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.1.12/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.1.12/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { ofArray } from \"../fable-library.3.1.12/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.1.12/Option.js\";\nimport { printf, toText } from \"../fable-library.3.1.12/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        void view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        void view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [program.update]);\n    const view = partialApply(2, mapView, [program.view]);\n    const setState = partialApply(2, mapSetState, [program.setState]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { Record } from \"../fable-library.3.1.12/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.1.12/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\n}\n\n","import { some } from \"./.fable/fable-library.3.1.12/Option.js\";\nimport { equals, jsOptions } from \"./.fable/fable-library.3.1.12/Util.js\";\nimport translation from \"./locales/ja/translation.json\";\nimport ui from \"./locales/ja/ui.json\";\nimport translation_1 from \"./locales/en/translation.json\";\nimport ui_1 from \"./locales/en/ui.json\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"./.fable/Fable.Promise.2.0.0/Promise.fs.js\";\nimport { promise } from \"./.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js\";\nimport i18next from \"i18next\";\nimport i18next$002Dbrowser$002Dlanguagedetector from \"i18next-browser-languagedetector\";\nimport { AlbumState, Model, ModelState, initModel, Msg } from \"./Model.fs.js\";\nimport { get$ } from \"./Album.fs.js\";\nimport { Cmd_OfPromise_perform, Cmd_OfFunc_result, Cmd_none, Cmd_OfPromise_result, Cmd_batch } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { empty, indexed, toArray, singleton, cons, ofArray } from \"./.fable/fable-library.3.1.12/List.js\";\nimport { toString } from \"./.fable/fable-library.3.1.12/Types.js\";\nimport { toText, printf, toConsoleError } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { remove, add, contains } from \"./.fable/fable-library.3.1.12/Set.js\";\nimport { FSharpChoice$2 } from \"./.fable/fable-library.3.1.12/Choice.js\";\nimport { body, Option, hero } from \"./.fable/Fulma.2.10.0/Layouts/Hero.fs.js\";\nimport { Prop } from \"./.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { Modifier_IModifier, Screen, Common_GenericOption } from \"./.fable/Fulma.2.10.0/Common.fs.js\";\nimport * as react from \"react\";\nimport { singleton as singleton_1, collect, delay, toList } from \"./.fable/fable-library.3.1.12/Seq.js\";\nimport { Option as Option_1, columns } from \"./.fable/Fulma.2.10.0/Layouts/Columns.fs.js\";\nimport { ISize, Option as Option_2, column } from \"./.fable/Fulma.2.10.0/Layouts/Column.fs.js\";\nimport { viewPC } from \"./View/Menu.fs.js\";\nimport { view as view_1 } from \"./View/Content.fs.js\";\nimport { view as view_2 } from \"./View/Header.fs.js\";\nimport { viewTransition } from \"./View/Transition.fs.js\";\nimport { ProgramModule_mkProgram, ProgramModule_run } from \"./.fable/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Program_withReactSynchronous } from \"./.fable/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport const initI18nTask = (() => {\n    const options = {\n        supportedLngs: [\"ja\", \"en\"],\n        ns: some([\"translation\", \"ui\"]),\n        fallbackLng: some(\"en\"),\n        returnEmptyString: false,\n        resources: jsOptions((it_1) => {\n            it_1[\"ja\"]={\n                translation: translation,\n                ui: ui,\n            };\n            it_1[\"en\"]={\n                translation: translation_1,\n                ui: ui_1,\n            };\n        }),\n        detection: some(jsOptions((it_2) => {\n            it_2.cookieDomain = \"xn--pckjp4dudxftf.xn--tckwe\";\n            it_2.cookieMinutes = 10;\n        })),\n    };\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (i18next.use(i18next$002Dbrowser$002Dlanguagedetector).init(options).then(((_arg1) => {\n        const lang = (i18next.language === \"ja\") ? \"ja\" : \"en\";\n        return Promise.resolve((new Msg(4, lang)));\n    })))));\n})();\n\nexport const initAlbumTask = (() => {\n    const pr = get$();\n    return pr.then(((arg0) => (new Msg(3, arg0))));\n})();\n\nexport const initCmd = Cmd_batch(ofArray([Cmd_OfPromise_result(initI18nTask.then(void 0, ((arg0) => (new Msg(2, arg0))))), Cmd_OfPromise_result(initAlbumTask.then(void 0, ((arg0_1) => (new Msg(2, arg0_1)))))]));\n\nexport function delayCmd(ms, msg) {\n    return Cmd_OfPromise_result(PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => ((new Promise(resolve => setTimeout(resolve, ms))).then((() => (Promise.resolve(msg))))))));\n}\n\nexport function init(arg) {\n    return [initModel(arg), initCmd];\n}\n\nexport function update(msg, model) {\n    let matchValue;\n    if (msg.tag === 7) {\n        return [model, delayCmd(msg.fields[0], msg.fields[1])];\n    }\n    else if (msg.tag === 2) {\n        const arg10 = toString(msg.fields[0]);\n        toConsoleError(printf(\"error on initialization:\\n%s\"))(arg10);\n        return [new Model((matchValue = model.state, (matchValue.tag === 2) ? (new ModelState(2, cons(msg.fields[0], matchValue.fields[0]))) : (new ModelState(2, singleton(msg.fields[0])))), model.albumState, model.lang, model.completed, model.flags), Cmd_none()];\n    }\n    else if (msg.tag === 1) {\n        const patternInput = (model.state.tag === 0) ? ((((model.lang === \"unspecified\") ? true : equals(model.albumState, new AlbumState(0))) ? true : (!contains(\"logoShown\", model.completed))) ? [model, Cmd_none()] : [new Model(new ModelState(1), model.albumState, model.lang, model.completed, model.flags), Cmd_none()]) : [model, Cmd_none()];\n        return [patternInput[0], patternInput[1]];\n    }\n    else if (msg.tag === 5) {\n        return [new Model(model.state, model.albumState, model.lang, add(msg.fields[0], model.completed), model.flags), Cmd_OfFunc_result(new Msg(1))];\n    }\n    else if (msg.tag === 4) {\n        return [new Model(model.state, model.albumState, msg.fields[0], model.completed, model.flags), Cmd_batch(ofArray([(msg.fields[0] === \"en\") ? Cmd_OfPromise_perform((lang_1) => i18next.changeLanguage(lang_1), \"en\", (_arg1) => (new Msg(0))) : ((msg.fields[0] === \"ja\") ? Cmd_OfPromise_perform((lang_2) => i18next.changeLanguage(lang_2), \"ja\", (_arg2) => (new Msg(0))) : Cmd_none()), Cmd_OfFunc_result(new Msg(1))]))];\n    }\n    else if (msg.tag === 3) {\n        let activePatternResult7624;\n        const x = msg.fields[0];\n        activePatternResult7624 = ((x.status === \"ok\") ? (new FSharpChoice$2(0, x)) : (new FSharpChoice$2(1, x)));\n        if (activePatternResult7624.tag === 1) {\n            return [new Model(model.state, new AlbumState(2, activePatternResult7624.fields[0].message), model.lang, model.completed, model.flags), Cmd_OfFunc_result(new Msg(1))];\n        }\n        else {\n            return [new Model(model.state, new AlbumState(1, activePatternResult7624.fields[0].value), model.lang, model.completed, model.flags), Cmd_OfFunc_result(new Msg(1))];\n        }\n    }\n    else if (msg.tag === 6) {\n        if (msg.fields[1]) {\n            return [new Model(model.state, model.albumState, model.lang, model.completed, add(msg.fields[0], model.flags)), Cmd_none()];\n        }\n        else {\n            return [new Model(model.state, model.albumState, model.lang, model.completed, remove(msg.fields[0], model.flags)), Cmd_none()];\n        }\n    }\n    else {\n        return [model, Cmd_none()];\n    }\n}\n\nfunction viewError(model, exns, dispatch) {\n    let tupledArg, tupledArg_2;\n    return hero(ofArray([(tupledArg = [null, null, singleton(new Prop(0, \"App.fs:110\"))], new Option(8, tupledArg[2])), new Option(5)]), singleton(body(singleton((tupledArg_2 = [null, null, singleton(new Prop(0, \"App.fs:111\"))], new Common_GenericOption(1, tupledArg_2[2]))), ofArray([react.createElement(\"p\", {\n        key: \"App.fs:112\",\n    }, \"Failed to initialize the web application.\"), react.createElement(\"p\", {\n        key: \"App.fs:113\",\n    }, \"Errors:\"), toArray(toList(delay(() => collect((matchValue) => singleton_1(react.createElement(\"code\", {\n        key: toText(printf(\"error-%d\"))(matchValue[0]),\n    }, toString(matchValue[1]))), indexed(exns)))))]))));\n}\n\nfunction viewMain(model, dispatch) {\n    let tupledArg, tupledArg_2, tupledArg_4, tupledArg_6;\n    return react.createElement(\"div\", {\n        className: \"main has-text-centered\",\n        key: \"App.fs:124\",\n    }, columns(singleton((tupledArg = [null, null, singleton(new Prop(0, \"App.fs:126\"))], new Option_1(10, tupledArg[2]))), ofArray([column(ofArray([(tupledArg_2 = [null, null, singleton(new Modifier_IModifier(22, new Screen(3), true))], new Option_2(4, tupledArg_2[2])), new Option_2(0, new Screen(2), new ISize(6)), new Option_2(0, new Screen(1), new ISize(6)), new Option_2(0, new Screen(4), new ISize(6)), new Option_2(0, new Screen(6), new ISize(6))]), singleton(viewPC(model, dispatch))), column(ofArray([new Option_2(0, new Screen(3), new ISize(18)), new Option_2(0, new Screen(2), new ISize(14)), new Option_2(0, new Screen(1), new ISize(14)), new Option_2(0, new Screen(4), new ISize(14)), new Option_2(0, new Screen(6), new ISize(14)), (tupledArg_4 = [null, null, \"content\"], new Option_2(2, tupledArg_4[2])), (tupledArg_6 = [null, null, singleton(new Prop(0, \"content\"))], new Option_2(3, tupledArg_6[2]))]), singleton(view_1(model, dispatch)))])));\n}\n\nfunction view(model, dispatch) {\n    return toArray(ofArray([view_2({\n        completed: model.completed,\n        dispatch: dispatch,\n        flags: model.flags,\n        state: model.state,\n    }), toArray((model.state.tag === 1) ? ofArray([viewTransition({\n        dispatch: dispatch,\n    }), viewMain(model, dispatch)]) : empty())]));\n}\n\nProgramModule_run(Program_withReactSynchronous(\"app\", ProgramModule_mkProgram(init, (msg, model) => update(msg, model), (model_1, dispatch) => view(model_1, dispatch))));\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react$002Ddom from \"react-dom\";\nimport { uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            window.cancelAnimationFrame(lastRequest);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\n","import { some } from \"../fable-library.3.1.12/Option.js\";\nimport Timer from \"../fable-library.3.1.12/Timer.js\";\nimport { add } from \"../fable-library.3.1.12/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed);\n    t.Enabled = true;\n    t.Start();\n}\n\n","import { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport * as react from \"react\";\nimport { ofArray, toArray } from \"../.fable/fable-library.3.1.12/List.js\";\nimport { keyValueList } from \"../.fable/fable-library.3.1.12/MapUtil.js\";\nimport { CSSProp, Prop, HTMLAttr } from \"../.fable/Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport { comparePrimitives, min } from \"../.fable/fable-library.3.1.12/Util.js\";\nimport { Prop as Prop_1, inViewPlain } from \"../Wrappers/ReactIntersectionObserver.fs.js\";\nimport { Msg } from \"../Model.fs.js\";\nimport { Helpers_memoEqualsButFunctions, Helpers_nothing } from \"../.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js\";\nimport { map, delay, toArray as toArray_1 } from \"../.fable/fable-library.3.1.12/Seq.js\";\nimport { rangeDouble } from \"../.fable/fable-library.3.1.12/Range.js\";\n\nexport function viewTransition(props) {\n    return FunctionComponent_Of_Z5A158BBF((props_1) => {\n        let css, patternInput;\n        const transitionCompleted = react.useState(false);\n        const transitionInProgress = react.useState(false);\n        const scrollAmount = react.useState(0);\n        return toArray(ofArray([react.createElement(\"div\", keyValueList([new HTMLAttr(65, \"transition-background\"), new Prop(0, \"Transition.fs:25\"), (css = (patternInput = ((transitionInProgress[0]) ? [min((x, y) => comparePrimitives(x, y), 1, scrollAmount[0]), \"inherit\"] : ((transitionCompleted[0]) ? [1, \"inherit\"] : [0, \"none\"])), ofArray([new CSSProp(261, patternInput[0]), new CSSProp(125, patternInput[1])])), [\"style\", keyValueList(css, 1)])], 1)), inViewPlain(ofArray([new HTMLAttr(65, \"transition-checker\"), new Prop(0, \"Transition.fs:36\"), new Prop_1(10, (inView, _arg1) => {\n            props_1.dispatch(new Msg(6, \"menuIsSticky\", !inView));\n            transitionCompleted[1]((!inView));\n        })]), Helpers_nothing), inViewPlain(ofArray([new HTMLAttr(65, \"transition-scroll\"), new Prop(0, \"Transition.fs:43\"), new Prop_1(3, toArray_1(delay(() => map((i) => (0.1 * i), rangeDouble(0, 1, 10))))), new Prop_1(10, (_arg2, entry) => {\n            if (!(transitionCompleted[0])) {\n                scrollAmount[1]((entry.intersectionRatio * 2.1));\n            }\n        })]), Helpers_nothing), inViewPlain(ofArray([new HTMLAttr(65, \"transition\"), new Prop(0, \"Transition.fs:50\"), new Prop_1(10, (inView_1, _arg3) => {\n            transitionInProgress[1](inView_1);\n            props_1.dispatch(new Msg(6, \"playButtonIsShown\", !inView_1));\n        })]), react.createElement(\"picture\", {}, react.createElement(\"source\", {\n            srcSet: \"assets/image/gc_mansion_1.webp\",\n            type: \"image/webp\",\n            className: \"transition-building\",\n        }), react.createElement(\"source\", {\n            srcSet: \"assets/image/gc_mansion_1.png\",\n            type: \"image/png\",\n            className: \"transition-building\",\n        }), react.createElement(\"img\", {\n            src: \"assets/image/gc_mansion_1.png\",\n            alt: \"\",\n            className: \"transition-building\",\n        })))]));\n    }, void 0, (x_7, y_1) => Helpers_memoEqualsButFunctions(x_7, y_1), (_arg4) => \"Transition.fs:61\", \"viewTransition\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/Transition.fs\", 16)(props);\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkghost_club_website\"] = self[\"webpackChunkghost_club_website\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [216], () => (__webpack_require__(7744)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5080)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}