{"version":3,"sources":["/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/chunk loaded","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/create fake namespace object","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Util.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Int32.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Numeric.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/lib/long.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Long.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Date.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/RegExp.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Types.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/String.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Reflection.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Option.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Array.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/List.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/AsyncBuilder.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Choice.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/cmd.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Async.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/MapUtil.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Thoth.Json.4.0.0/Types.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Guid.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt/n.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/lib/big.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Decimal.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt/z.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/DateOffset.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/TimeSpan.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/FSharp.Core.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/FSharp.Collections.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Seq.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Map.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Set.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Thoth.Json.4.0.0/Decode.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Promise.2.0.0/Promise.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Fetch.2.1.0/Fetch.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Thoth.Json.4.0.0/Encode.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Thoth.Fetch.2.0.0/Fetch.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Album.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Model.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.Props.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Common.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Hero.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Columns.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Column.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Elements/Button.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Range.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/ring.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/program.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.React.3.0.1/common.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/App.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.React.3.0.1/react.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Container.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Elements/Content.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/prelude.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/Misc.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/webpack/bootstrap","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/define property getters","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/global","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/hasOwnProperty shorthand","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/make namespace object","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/jsonp chunk loading","/mnt/d/Documents/codes/ghost-club.github.io/webpack/startup"],"names":["deferred","leafPrototypes","getProto","isArrayLike","x","Array","isArray","ArrayBuffer","isView","sameConstructor","y","Object","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","value","done","Error","getEnumerator","o","GetEnumerator","Symbol","iterator","toIterator","en","hasNext","undefined","Lazy","factory","isValueCreated","createdValue","padWithZeros","i","length","str","toString","padLeftAndRightWithZeros","lengthLeft","lengthRight","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","get","stringHash","s","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","max","comparer","WeakMap","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","mapCurriedArgs","fn","mappings","mapArg","arg","idx","mapping","expectedArity","actualArity","res","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","replace","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","sign","validResponse","tryParse","defValue","contents","parse","Number","parseInt","isNaN","umin","umax","min","_a","symbol","isNumeric","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","wasm","WebAssembly","Instance","Module","Uint8Array","exports","e","Long","low","high","isLong","obj","prototype","toJSON","String","substr","bytes","le","fromBytesLE","fromBytesBE","fromBytes","$this","hi","lo","toBytesLE","toBytesBE","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","p","indexOf","substring","radixToPower","result","size","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","isOdd","other","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Addition","LongLib","op_Multiply","op_Division","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","_bitsize","maxValue","getMaxValue","toUpperCase","padStart","offsetRegex","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","_provider","_b","_c","dateWithOffset","d","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","DateTime","parseRaw","input","trim","m","baseDate","timeInSeconds","timeParts","split","parseFloat","offsetParts","offsetInMinutes","detectUTC","_err","create","pattern","options","flags","RegExp","escape","matches","reg","lastIndex","global","push","seqToString","self","callStack","cons","entries","join","name","Union","cases","tag","fields","concat","fieldStr","withParens","unionToString","splice","Record","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","recordCompareTo","FSharpRef","contentsOrGetter","setter","getter","fsFormatRegExp","formatRegExp","isLessThan","numericCompare","printf","cont","strParts","strIdx","matchIndex","index","createPrinter","continuePrint","toText","toFail","formatReplacement","padLength","precision","toLowerCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_strParts","_matches","_result","padArg","slice","args","_padLength","delimiter","xs","from","isRight","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","t","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","class_type","array_type","generic","obj_type","string_type","info","lastIndexOf","gen","endsWith","getElementType","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getEnumValues","kv","parseEnum","getEnumCase","getUnionCases","getTupleElements","isTuple","isUnion","isRecord","startsWith","getUnionCaseFields","uci","makeUnion","expectedLength","assertUnion","Some","some","defaultArg","opt","defaultValue","Helpers_allocateArrayFromCons","fill","target","targetIndex","start","source","initialize","initializer","fold","folder","state","array","delegateArg0","delegateArg1","foldBack2","array1","array2","acc","differentLengths","foldBackIndexed2","_arg1","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","c","ListEnumerator$1","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","tryLast","xs_mut","toArray","reverse","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","append","ys","contains","tryFindIndex","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","$","addListener","Dispose","removeListener","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","computation","binder","onSuccess","ex","protectedBind","computation1","computation2","Bind","generator","sequence","body","While","Delay","protectedReturn","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","FSharpResult$2","Result_Map","Cmd_exec","dispatch","cmd","call","Cmd_none","Cmd_batch","cmds","lists","root","node","forEach","enumerator","xs_6","t_2","Cmd_OfPromise_perform","task","ofSuccess","then","arg_1","dashify","separator","charAt","changeCase","caseRule","keyValueList","definedCaseRule","fail","kvPair","assign","tryGetValue","ErrorReason","CaseStrategy","Util_Cache$1","Util_Cache$1_$ctor","Util_Cache$1__GetOrAdd_43981464","outArg","x_1","dict","k","addToDict","Util_CachedEncoders","Util_CachedDecoders","Util_Casing_lowerFirst","Util_Casing_convert","caseStrategy","fieldName","replacement","limit","replacer","arguments","withGroups","pLast","groups","tmp","_s","sub1","sub2","guidRegex","guidRegexNoHyphen","guidRegexHex","hyphenateGuid","wsTrimAndLowered","chars","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","n","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_baseN","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","b","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_lt","q","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","k_mut","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_mulSchoolBook","BigNatModule_scaleSubInPlace","a","patternInput","patternInput_1","ad","a_1","f_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","xa","aa","qai","BigNatModule_divmod","copy","BigNatModule_copyN","finished","BigNatModule_ofInt32","BigNatModule_toString","degn","digits_4","collect","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_getSmall","P","_this","cmp","MAX_DP","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","UNDEFINED","NUMERIC","nl","search","round","Big","DP","RM","rm","more","xc","findIndex","xci","unshift","pop","stringify","doExponential","isNonzero","isneg","yc","l","bl","bt","ri","bz","ai","al","rl","qc","qi","shift","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","NE","PE","strict","valueOf","_Big_","normalize","TypeError","Decimal","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","BigNatModule_isSmall","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigNatModule_boundInt64","rem_u","rem_s","BigNatModule_embed64","BigNatModule_ofInt64","BigInteger_get_One","BigInteger_get_Zero","zero","DateTimeOffset","checkOffsetInRange","offsetMatch","signedRound","ms","fromTicks","ticks","days","ts","hours","seconds","milliseconds","firstDot","firstColon","LanguagePrimitives_FastGenericComparer","e1","e2","Compare","two","SR_notEnoughElements","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","started","curr","value_1","finish","matchValue_1","mkSeq","Enumerator_Seq_$ctor_673A07F2","ofSeq","argName","Operators_NullArg","checkNonNull","delay","sources","outerOpt","innerOpt","inner","outer","inner_1","outer_1","ie","Enumerator_concat","ar","singleton_1","toList","ofArray_1","xs_3","xs_5","ofSeq_1","generateIndexed","found","e_1","skip","Enumerator_enumerateThenFinally","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","_","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_sizeAux","acc_mut","m_mut","m2","MapTreeModule_size","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","MapTreeModule_iterOpt","f_mut","MapTreeModule_iter","MapTreeModule_mapiOpt","l2","r2","MapTreeModule_mapi","MapTreeModule_ofSeq","arr","forLoopVar","MapTreeModule_ofArray","fold_1","tupledArg","MapTreeModule_ofList","e_mut","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5257","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_1","intPart","decimalPart","toStringTag","b1","b2","compareWith","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","MapTreeModule_copyToArray","FSharpMap__get_Count","thisArg","iterate_1","FSharpMap_$ctor","MapTreeModule_find","MapTreeModule_mem","table","FSharpMap__Add","tryFind","FSharpMap__TryFind","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_countAux","t_mut","SetTreeModule_count","SetTreeModule_mk","SetTreeModule_rebalance","t2_3","t_3","t2_4","SetTreeModule_add","c_1","SetTreeModule_empty","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","x1_3","x2_3","pattern_matching_result","t1_6","x1_4","t2_6","x2_4","matchValue_4","pattern_matching_result_1","t1_7","x1_5","t2_7","x2_5","c_3","c_2","matchValue_5","pattern_matching_result_2","t1_8","x1_6","t2_8","x2_6","pattern_matching_result_3","t1_2","x1","t2_2","x2_1","pattern_matching_result_4","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofSeq","SetTreeModule_ofArray","fold_2","SetTreeModule_ofList","SetTreeModule_mkFromEnumerator","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","set$","elements","FSharpSet_$ctor","Helpers_isUndefined","genericMsg","msg","newLine","JSON","errorToString","path","error","reason_1","decoder","string","sbyte","value_2","name_1","path_1","value_3","value_4","isFinite","tryParse_3","byte","int16","uint16","int","uint32","datetimeOffset","tryParse_7","decodeMaybeNull","badPathError","fieldNames","currentPath","requestedIndex","copyOfStruct","vArray","list","list_1","tokens","acc_1","andThen","cb","ctor","d1","unwrapWith","errors","Getters$1","_this_1","required","Field","fieldValue","field","At","decoder_2","firstPath","firstValue","curPath","curValue","field_1","curValue_1","at","Raw","decoder_4","optional","fieldName_1","decoder_5","path_2","fieldNames_1","decoder_7","firstPath_1","firstValue_1","lastValue","optionalAt","decoder_9","v_2","reason","object","builder","getters","Getters$1_$ctor_4A51B60E","head_1","tuple2","decoder1","decoder2","decoder_3","path_3","decoder_1","arg10$0040","arg20$0040","toMap","mixedArray","decoders","arg30","arg10","extra","predicate","find","name_3","uci_1","makeUnion_1","values_1","map_2","fi","autoDecoder","autoDecodeRecordsAndUnions","isOptional","decoderRef","extra_1","makeRecord","decoderInfos","reduceRight","foldBack","autoObject","message","decoder_15","tryFind_1","enumType","value_5","enumValue","path_4","value_7","path_5","value_8","enumValue_1","y_1","path_6","value_10","t_4","path_7","value_11","enumValue_2","x_2","y_2","path_8","value_13","t_5","path_9","value_14","enumValue_3","x_3","y_3","path_10","value_16","t_6","path_11","value_17","enumValue_4","x_4","y_4","path_12","value_19","t_7","path_13","value_20","matchValue_6","enumValue_5","x_5","y_5","clo2","arg20","clo3","t_8","path_14","value_21","fullname_1","decoder_13","path_15","value_22","arg0","option","decoder_14","path_16","value_23","keyDecoder","valueDecoder","decoders_1","path_17","value_24","autoObject2","path_18","value_25","path_19","value_26","decoders_1_mut","errors_mut","append_1","runner","oneOf","path_20","value_28","decoder_16","path_21","value_29","matchValue_7","path_22","value_31","path_23","value_32","path_24","value_33","path_25","value_34","path_26","value_35","path_27","value_36","tryParse_6","datetime","path_28","value_37","path_29","value_38","tryParse_8","timespan","path_30","value_39","tryParse_2","guid","_arg1_6","PromiseBuilder__Delay_62FBFDE1","f1","f2","er","Promise","reject","resolve","er_1","catch","er_2","er_3","PromiseBuilder__Run_212F1D4B","success","Types_HttpRequestHeaders","Types_RequestProperties","seq","unit","autoEncodeRecordsAndUnions","skipNullField","encoder","encoderRef","setters","targetKey","encode_1","autoEncoder","source_1","target_1","case_","getUnionFields","fieldTypes","target_2","encode_2","encoders","value_9","encoder_2","Value","encoder_3","keyType","valueEncoder","value_12","activePatternResult6614","keyEncoder","clo4","arg40","_arg2","activePatternResult6618","value_18","value_30","toString_3","toString_4","FetchError","Helper_withContentTypeJson","data","headers","Helper_encode","dataResolver","space","resolver","ResolveType","caseStrategy_1","skipNullField_1","toString_5","Hash","map_3","Coders","makeExtra","Auto_generateEncoderCached_Z127D9D79","Helper_resolve","response","responseResolver","eitherUnitOr","value_40","toString_12","map_4","Auto_generateDecoderCached_7848D058","responseResolver_1","Helper_eitherUnit","promise","ok","text","SyntaxError","MediaInfo","baseUrl","mimeType","created","width","height","MediaInfo$reflection","MediaInfoDecoder","get$_1","Required","value_6","ResponseDecoder","get$","properties","caseNames","url","httpMethod","headers_2","properties_3","custom","list2","Helper_withProperties","data_1","Helper_withBody","init","fetch","Helper_fetch","exn","Fetch_tryFetchAs_25B10BBE","status","statusText","Helper_message","State","State__get_AsString","Model","Msg","DOMAttr","HTMLAttr","Reflection_getCaseName","case$","Screen","Screen_ToString_2D2414B4","screen","Color_ofColor","level","TextSize_Option_ToString_Z2E0B9453","Reflection_getCaseTag","Common_GenericOptions","Props","Classes","RemovedClasses","Common_GenericOptions_Parse_9AE2F7C","parser","baseClass","baseProps","result_1","Common_GenericOptions__AddClass_Z721C83C5","Common_GenericOptions__AddProps_416C4D0B","Common_GenericOptions__AddProp_7BFEDA81","prop","props","cl","Common_GenericOptions__AddCaseName_1505","Common_GenericOptions__AddModifiers_5BB435D5","modifiers","screen_3","screen_7","typ","amount","Modifier_ofText","console","warn","display","Display_toDisplayOnlyClass","Modifier_ofInvisible","Modifier_ofInvisibleOnly","Modifier_ofHidden","Modifier_ofHiddenOnly","Modifier_ofBackground","Common_GenericOptions__ToReactElement_Z6D3CD4B7","el","children","children_1","cls","Option","ISize_ToString_2283FB3F","ISize","suffix","column","className","ofWidth","props_1","react","button","element","btnView","Cache","FunctionComponent_Of_Z5A158BBF","render","displayName","memoizeWith","withKey","__callingMemberName","__callingSourceFile","__callingSourceLine","valueFactory","elemType","displayName_1","memoElement","areEqual","ReactElementTypeModule_memoWith","Cache_GetOrAdd_Z3AD3E68D","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","st_1","Enumerator_unfold","RingState$1","RingBuffer$1","Program$4","update","subscribe","view","setState","syncDispatch","ProgramModule_runWith","program","model","rb","reentered","apply","partialApply","item","wix_1","rix","items_1","wix$0027","ix","items","RingBuffer$1__doubleSize","wix","RingBuffer$1__Push_2B595","nextMsg","msg_1","model$0027","ex_1","rix$0027","RingBuffer$1__Pop","ex_3","ex_2","LazyProps$1","equal","Components_LazyView$1","nextProps","_nextState","Component","ofError","initCmd","mutator","opts","returnEmptyString","resources","it_1","ja","i18next","i18next$002Dbrowser$002Dlanguagedetector","arg_2","viewMain","hero","Common_parseOptions","container","Option_1","Option_2","Option_3","screen_4","size_4","screen_5","size_5","arg30_1","arg20_1","arg10_1","size_3","ProgramModule_run","ProgramModule_mkProgram","album","msg_2","toConsoleError","model_1","react$002Dgoogle$002Dfont$002Dloader","fonts","font","weights","lazyView2With","placeholderId","ProgramModule_withSetState","react$002Ddom","ProgramModule_view","document","getElementById","Program_Internal_withReactSynchronousUsing","Common_lazyView2With","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","mode","__esModule","ns","def","getOwnPropertyNames","definition","enumerable","g","globalThis","Function","window","hasOwnProperty","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"mappings":"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,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI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","file":"app.6a986b8cef57730448cd.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = ((totalLength + arr_1.length) | 0);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = ((totalIdx + 1) | 0);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function insertRangeInPlace(index, range, array) {\n    let index_1;\n    let i = index | 0;\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            void (index_1 = (i | 0), array.splice(index_1, 0, x));\n            i = ((i + 1) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = ((iTrue + 1) | 0);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = ((iFalse + 1) | 0);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const res = [];\n    for (let i = 0; i <= (array.length - 1); i++) {\n        const matchValue = chooser(array[i]);\n        if (matchValue != null) {\n            const y = value_2(matchValue);\n            void (res.push(y));\n        }\n    }\n    if ((typeof cons) === \"function\") {\n        return map((x) => x, res, cons);\n    }\n    else {\n        return res;\n    }\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function allPairs(xs, ys) {\n    const len1 = xs.length | 0;\n    const len2 = ys.length | 0;\n    const res = new Array((len1 * len2));\n    for (let i = 0; i <= (xs.length - 1); i++) {\n        for (let j = 0; j <= (ys.length - 1); j++) {\n            res[(i * len2) + j] = [xs[i], ys[j]];\n        }\n    }\n    return res;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = (comparer(array1[i], array2[i]) | 0);\n                i = ((i + 1) | 0);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function tryExactlyOne(array) {\n    if (array.length === 1) {\n        return some(array[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { join } from \"./String.js\";\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\n\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\n\nexport const SR_inputListWasEmpty = \"List was empty\";\n\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport class FSharpList extends Record {\n    constructor(head, tail) {\n        super();\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        const xs = this;\n        return (\"[\" + join(\"; \", xs)) + \"]\";\n    }\n    Equals(other) {\n        const xs = this;\n        if (xs === other) {\n            return true;\n        }\n        else {\n            const loop = (xs_1_mut, ys_1_mut) => {\n                loop:\n                while (true) {\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                    const matchValue = [xs_1.tail, ys_1.tail];\n                    if (matchValue[0] != null) {\n                        if (matchValue[1] != null) {\n                            const xt = matchValue[0];\n                            const yt = matchValue[1];\n                            if (equals(xs_1.head, ys_1.head)) {\n                                xs_1_mut = xt;\n                                ys_1_mut = yt;\n                                continue loop;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                    else if (matchValue[1] != null) {\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                    break;\n                }\n            };\n            return loop(xs, other);\n        }\n    }\n    GetHashCode() {\n        const xs = this;\n        const loop = (i_mut, h_mut, xs_1_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\n                const matchValue = xs_1.tail;\n                if (matchValue != null) {\n                    const t = matchValue;\n                    if (i > 18) {\n                        return h | 0;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\n                        xs_1_mut = t;\n                        continue loop;\n                    }\n                }\n                else {\n                    return h | 0;\n                }\n                break;\n            }\n        };\n        return loop(0, 0, xs) | 0;\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return Array.from(this$);\n    }\n    CompareTo(other) {\n        const xs = this;\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1.tail, ys_1.tail];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const xt = matchValue[0];\n                        const yt = matchValue[1];\n                        const c = compare(xs_1.head, ys_1.head) | 0;\n                        if (c === 0) {\n                            xs_1_mut = xt;\n                            ys_1_mut = yt;\n                            continue loop;\n                        }\n                        else {\n                            return c | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1] != null) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                break;\n            }\n        };\n        return loop(xs, other) | 0;\n    }\n    GetEnumerator() {\n        const xs = this;\n        return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const xs = this;\n        return getEnumerator(xs);\n    }\n}\n\nexport function FSharpList$reflection(gen0) {\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\n}\n\nexport class ListEnumerator$1 {\n    constructor(xs) {\n        this.xs = xs;\n        this.it = this.xs;\n        this.current = null;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        const matchValue = __.it.tail;\n        if (matchValue != null) {\n            const t = matchValue;\n            __.current = __.it.head;\n            __.it = t;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        const __ = this;\n        __.it = __.xs;\n        __.current = null;\n    }\n    Dispose() {\n    }\n}\n\nexport function ListEnumerator$1$reflection(gen0) {\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\n\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\n    return new ListEnumerator$1(xs);\n}\n\nexport function FSharpList_get_Empty() {\n    return new FSharpList(null, void 0);\n}\n\nexport function FSharpList_Cons_305B8EAC(x, xs) {\n    return new FSharpList(x, xs);\n}\n\nexport function FSharpList__get_IsEmpty(xs) {\n    return xs.tail == null;\n}\n\nexport function FSharpList__get_Length(xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                i_mut = (i + 1);\n                xs_1_mut = matchValue;\n                continue loop;\n            }\n            else {\n                return i | 0;\n            }\n            break;\n        }\n    };\n    return loop(0, xs) | 0;\n}\n\nexport function FSharpList__get_Head(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return xs.head;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Tail(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return matchValue;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                if (i === index) {\n                    return xs_1.head;\n                }\n                else {\n                    i_mut = (i + 1);\n                    xs_1_mut = matchValue;\n                    continue loop;\n                }\n            }\n            else {\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function empty() {\n    return FSharpList_get_Empty();\n}\n\nexport function cons(x, xs) {\n    return FSharpList_Cons_305B8EAC(x, xs);\n}\n\nexport function singleton(x) {\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\n\nexport function isEmpty(xs) {\n    return FSharpList__get_IsEmpty(xs);\n}\n\nexport function length(xs) {\n    return FSharpList__get_Length(xs);\n}\n\nexport function head(xs) {\n    return FSharpList__get_Head(xs);\n}\n\nexport function tryHead(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        return void 0;\n    }\n    else {\n        return some(FSharpList__get_Head(xs));\n    }\n}\n\nexport function tail(xs) {\n    return FSharpList__get_Tail(xs);\n}\n\nexport function tryLast(xs_mut) {\n    tryLast:\n    while (true) {\n        const xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return void 0;\n        }\n        else {\n            const t = FSharpList__get_Tail(xs);\n            if (FSharpList__get_IsEmpty(t)) {\n                return some(FSharpList__get_Head(xs));\n            }\n            else {\n                xs_mut = t;\n                continue tryLast;\n            }\n        }\n        break;\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const loop = (xs_1_mut, ys_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (matchValue[1]) {\n                return 1;\n            }\n            else {\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n                if (c === 0) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\n                    continue loop;\n                }\n                else {\n                    return c | 0;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs, ys) | 0;\n}\n\nexport function toArray(xs) {\n    const len = FSharpList__get_Length(xs) | 0;\n    const res = fill(new Array(len), 0, len, null);\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (!FSharpList__get_IsEmpty(xs_1)) {\n                res[i] = FSharpList__get_Head(xs_1);\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(0, xs);\n    return res;\n}\n\nexport function fold(folder, state, xs) {\n    let acc = state;\n    let xs_1 = xs;\n    while (!FSharpList__get_IsEmpty(xs_1)) {\n        acc = folder(acc, FSharpList__get_Head(xs_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n    }\n    return acc;\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function foldIndexed(folder, state, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, state, xs);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    let acc = state;\n    let xs_1 = xs;\n    let ys_1 = ys;\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n        ys_1 = FSharpList__get_Tail(ys_1);\n    }\n    return acc;\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function unfold(gen, state) {\n    const loop = (acc_mut, node_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, node = node_mut;\n            const matchValue = gen(acc);\n            if (matchValue != null) {\n                acc_mut = matchValue[1];\n                node_mut = (t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t));\n                continue loop;\n            }\n            else {\n                return node;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(state, root);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function toSeq(xs) {\n    return xs;\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = xs.length - 1; i >= 0; i--) {\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\n\nexport function ofSeq(xs) {\n    let xs_3, t;\n    if (isArrayLike(xs)) {\n        return ofArray(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        const root = FSharpList_get_Empty();\n        let node = root;\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                node = (xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t)));\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        const xs_5 = node;\n        const t_2 = FSharpList_get_Empty();\n        xs_5.tail = t_2;\n        return FSharpList__get_Tail(root);\n    }\n}\n\nexport function concat(lists) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    const action = (xs) => {\n        node = fold((acc, x) => {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }, node, xs);\n    };\n    if (isArrayLike(lists)) {\n        lists.forEach(action);\n    }\n    else if (lists instanceof FSharpList) {\n        iterate(action, lists);\n    }\n    else {\n        const enumerator = getEnumerator(lists);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    const xs_6 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_6.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scan(folder, state, xs) {\n    let xs_4, t_2;\n    const root = FSharpList_get_Empty();\n    let node;\n    const t = new FSharpList(state, void 0);\n    root.tail = t;\n    node = t;\n    let acc = state;\n    let xs_3 = xs;\n    while (!FSharpList__get_IsEmpty(xs_3)) {\n        acc = folder(acc, FSharpList__get_Head(xs_3));\n        node = (xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2)));\n        xs_3 = FSharpList__get_Tail(xs_3);\n    }\n    const xs_6 = node;\n    const t_4 = FSharpList_get_Empty();\n    xs_6.tail = t_4;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scanBack(folder, xs, state) {\n    return ofArray(scanBack_1(folder, toArray(xs), state));\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\n}\n\nexport function collect(mapping, xs) {\n    let xs_1, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    let ys = xs;\n    while (!FSharpList__get_IsEmpty(ys)) {\n        let zs = mapping(FSharpList__get_Head(ys));\n        while (!FSharpList__get_IsEmpty(zs)) {\n            node = (xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t)));\n            zs = FSharpList__get_Tail(zs);\n        }\n        ys = FSharpList__get_Tail(ys);\n    }\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = foldIndexed((i, acc, x) => {\n        const t = new FSharpList(mapping(i, x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const t = new FSharpList(mapping(x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    const root = FSharpList_get_Empty();\n    const node = fold2((acc, x, y) => {\n        const t = new FSharpList(mapping(x, y), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = (t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(0, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                zs_1_mut = FSharpList__get_Tail(zs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(root, xs, ys, zs);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapFold(mapping, state, xs) {\n    const root = FSharpList_get_Empty();\n    const patternInput_1 = fold((tupledArg, x) => {\n        let t;\n        const patternInput = mapping(tupledArg[1], x);\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\n    }, [root, state], xs);\n    const t_2 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_2;\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\n}\n\nexport function tryPick(f, xs) {\n    const loop = (xs_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else {\n                const matchValue = f(FSharpList__get_Head(xs_1));\n                if (matchValue == null) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFind(f, xs) {\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function find(f, xs) {\n    const matchValue = tryFind(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFindBack_1(f, toArray(xs));\n}\n\nexport function findBack(f, xs) {\n    const matchValue = tryFindBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(f, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (f(FSharpList__get_Head(xs_1))) {\n                return i;\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, toArray(xs));\n}\n\nexport function findIndexBack(f, xs) {\n    const matchValue = tryFindIndexBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryItem(n, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (i === n) {\n                return some(FSharpList__get_Head(xs_1));\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function item(n, xs) {\n    return FSharpList__get_Item_Z524259A4(xs, n);\n}\n\nexport function filter(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        if (f(x)) {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }\n        else {\n            return acc;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function partition(f, xs) {\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n    const root2 = patternInput[1];\n    const root1 = patternInput[0];\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => {\n            let t, t_2;\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\n        };\n    }), [root1, root2], xs);\n    const t_4 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_4;\n    const t_5 = FSharpList_get_Empty();\n    patternInput_1[1].tail = t_5;\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\n\nexport function choose(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const t = new FSharpList(value_1(matchValue), void 0);\n            acc.tail = t;\n            return t;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function contains(value, xs, eq) {\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\n}\n\nexport function initialize(n, f) {\n    let xs, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    for (let i = 0; i <= (n - 1); i++) {\n        node = (xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t)));\n    }\n    const xs_2 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_2.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return fold(f, head(xs), tail(xs));\n    }\n}\n\nexport function reduceBack(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return foldBack(f, tail(xs), head(xs));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f, xs) {\n    return tryFindIndex(f, xs) != null;\n}\n\nexport function exists2(f_mut, xs_mut, ys_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1]) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1]) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    xs_mut = FSharpList__get_Tail(xs);\n                    ys_mut = FSharpList__get_Tail(ys);\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sortWith(comparer, xs) {\n    const arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, toArray(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\n}\n\nexport function allPairs(xs, ys) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    iterate((x) => {\n        iterate((y) => {\n            let xs_1, t;\n            node = (xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t)));\n        }, ys);\n    }, xs);\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function skip(count_mut, xs_mut) {\n    skip:\n    while (true) {\n        const count = count_mut, xs = xs_mut;\n        if (count <= 0) {\n            return xs;\n        }\n        else if (FSharpList__get_IsEmpty(xs)) {\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n        }\n        else {\n            count_mut = (count - 1);\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skip;\n        }\n        break;\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return xs;\n        }\n        else if (!predicate(FSharpList__get_Head(xs))) {\n            return xs;\n        }\n        else {\n            predicate_mut = predicate;\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skipWhile;\n        }\n        break;\n    }\n}\n\nexport function take(count, xs) {\n    if (count < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\n    }\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function takeWhile(predicate, xs) {\n    const loop = (acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function truncate(count, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function getSlice(startIndex, endIndex, xs) {\n    const len = length(xs) | 0;\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\n    if (startIndex_1 < 0) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\n    }\n    else if (endIndex_1 >= len) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\n    }\n    else if (endIndex_1 < startIndex_1) {\n        return FSharpList_get_Empty();\n    }\n    else {\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\n    }\n}\n\nexport function splitAt(index, xs) {\n    if (index < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\n    }\n    if (index > FSharpList__get_Length(xs)) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    return [take(index, xs), skip(index, xs)];\n}\n\nexport function exactlyOne(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n        return FSharpList__get_Head(xs);\n    }\n    else {\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\n        return some(FSharpList__get_Head(xs));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return ofArray(pairwise_1(toArray(xs)));\n}\n\nexport function windowed(windowSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\n}\n\nexport function transpose(lists) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.12/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.12/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.12/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w))));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { FSharpRef, Record, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { record_type, class_type, tuple_type, lambda_type, union_type, list_type, obj_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { FSharpResult$2 } from \"../fable-library.3.1.12/Choice.js\";\nimport { addToDict, tryGetValue } from \"../fable-library.3.1.12/MapUtil.js\";\nimport { replace } from \"../fable-library.3.1.12/RegExp.js\";\n\nexport class ErrorReason extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\n    }\n}\n\nexport function ErrorReason$reflection() {\n    return union_type(\"Thoth.Json.ErrorReason\", [], ErrorReason, () => [[[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item\", string_type]], [[\"Item\", list_type(string_type)]]]);\n}\n\nexport class CaseStrategy extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\n    }\n}\n\nexport function CaseStrategy$reflection() {\n    return union_type(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, () => [[], [], []]);\n}\n\nexport class ExtraCoders extends Record {\n    constructor(Hash, Coders) {\n        super();\n        this.Hash = Hash;\n        this.Coders = Coders;\n    }\n}\n\nexport function ExtraCoders$reflection() {\n    return record_type(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, () => [[\"Hash\", string_type], [\"Coders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, tuple_type(lambda_type(obj_type, obj_type), lambda_type(string_type, lambda_type(obj_type, union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [obj_type, tuple_type(string_type, ErrorReason$reflection())], FSharpResult$2, () => [[[\"ResultValue\", obj_type]], [[\"ErrorValue\", tuple_type(string_type, ErrorReason$reflection())]]]))))])]]);\n}\n\nexport class Util_Cache$1 {\n    constructor() {\n        this.cache = (new Map([]));\n    }\n}\n\nexport function Util_Cache$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\n}\n\nexport function Util_Cache$1_$ctor() {\n    return new Util_Cache$1();\n}\n\nexport function Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(__.cache, key, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        const x_1 = factory();\n        addToDict(__.cache, key, x_1);\n        return x_1;\n    }\n}\n\nexport const Util_CachedEncoders = Util_Cache$1_$ctor();\n\nexport const Util_CachedDecoders = Util_Cache$1_$ctor();\n\nexport function Util_Casing_lowerFirst(str) {\n    return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\n}\n\nexport function Util_Casing_convert(caseStrategy, fieldName) {\n    switch (caseStrategy.tag) {\n        case 2: {\n            return replace(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\n        }\n        case 0: {\n            return fieldName;\n        }\n        default: {\n            return Util_Casing_lowerFirst(fieldName);\n        }\n    }\n}\n\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3, y_5;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            wj = (y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = (v | 0);\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = (v | 0);\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = ((n.digits[i] + (res << 3)) | 0);\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = (bound | 0);\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = (x_1 | 0);\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = (n.digits[i] | 0);\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = (n.digits[i + d] | 0);\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = (x_3 | 0);\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = ((k + 1) | 0);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = (i | 0);\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = ((n - 1) | 0);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = ((n - 1) | 0);\n                        p = ((p - 1) | 0);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return cons([k, ten2k], prior);\n            }\n            else {\n                prior_mut = cons([k, ten2k], prior);\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (!isEmpty(_arg1)) {\n                const prior_1 = tail(_arg1);\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return cons(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\n    if (isEmpty(digits_4)) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", toArray(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { Record, toString } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = (signInt | 0);\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return toString(this$);\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    checkOffsetInRange(offset);\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nfunction checkOffsetInRange(offset) {\n    if (offset != null && offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes.\");\n        }\n        if (Math.abs(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hours.\");\n        }\n    }\n}\nexport function fromDate(date, offset) {\n    let offset2 = 0;\n    switch (date.kind) {\n        case 1 /* UTC */:\n            if (offset != null && offset !== 0) {\n                throw new Error(\"The UTC Offset for Utc DateTime instances must be 0.\");\n            }\n            offset2 = 0;\n            break;\n        case 2 /* Local */:\n            offset2 = date.getTimezoneOffset() * -60000;\n            if (offset != null && offset !== offset2) {\n                throw new Error(\"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n            }\n            break;\n        case 0 /* Unspecified */:\n        default:\n            if (offset == null) {\n                offset2 = date.getTimezoneOffset() * -60000;\n            }\n            else {\n                offset2 = offset;\n            }\n            break;\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    checkOffsetInRange(offset);\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function toOffset(d, offset) {\n    return DateTimeOffset(d.getTime(), offset);\n}\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\nimport { toString as toString_1 } from \"./Types.js\";\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equals_1(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equals_1(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compare_1(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compare_1(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), 0, bytes.length, false);\n    }\n}\n\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\n\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\n\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\n\nexport function Enumerator_noReset() {\n    throw (new Error(SR_resetNotSupported));\n}\n\nexport function Enumerator_notStarted() {\n    throw (new Error(SR_enumerationNotStarted));\n}\n\nexport function Enumerator_alreadyFinished() {\n    throw (new Error(SR_enumerationAlreadyFinished));\n}\n\nexport class Enumerator_Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    toString() {\n        const xs = this;\n        const maxCount = 4;\n        let i = 0;\n        let str = \"seq [\";\n        const e = getEnumerator(xs);\n        try {\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                if (i > 0) {\n                    str = (str + \"; \");\n                }\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\n                i = ((i + 1) | 0);\n            }\n            if (i === maxCount) {\n                str = (str + \"; ...\");\n            }\n            return str + \"]\";\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n    GetEnumerator() {\n        const x = this;\n        return x.f();\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const x = this;\n        return x.f();\n    }\n}\n\nexport function Enumerator_Seq$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\n\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\n    return new Enumerator_Seq(f);\n}\n\nexport class Enumerator_FromFunctions$1 {\n    constructor(current, next, dispose) {\n        this.current = current;\n        this.next = next;\n        this.dispose = dispose;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        return __.next();\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        return Enumerator_noReset();\n    }\n    Dispose() {\n        const __ = this;\n        __.dispose();\n    }\n}\n\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\n\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n    return new Enumerator_FromFunctions$1(current, next, dispose);\n}\n\nexport function Enumerator_cast(e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        if (isDisposable(e)) {\n            e.Dispose();\n        }\n    });\n}\n\nexport function Enumerator_concat(sources) {\n    let outerOpt = void 0;\n    let innerOpt = void 0;\n    let started = false;\n    let finished = false;\n    let curr = void 0;\n    const finish = () => {\n        finished = true;\n        if (innerOpt != null) {\n            const inner = innerOpt;\n            try {\n                inner.Dispose();\n            }\n            finally {\n                innerOpt = (void 0);\n            }\n        }\n        if (outerOpt != null) {\n            const outer = outerOpt;\n            try {\n                outer.Dispose();\n            }\n            finally {\n                outerOpt = (void 0);\n            }\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        else if (finished) {\n            Enumerator_alreadyFinished();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        let copyOfStruct;\n        if (!started) {\n            started = true;\n        }\n        if (finished) {\n            return false;\n        }\n        else {\n            let res = void 0;\n            while (res == null) {\n                const matchValue = [outerOpt, innerOpt];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const inner_1 = matchValue[1];\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                            res = true;\n                        }\n                        else {\n                            try {\n                                inner_1.Dispose();\n                            }\n                            finally {\n                                innerOpt = (void 0);\n                            }\n                        }\n                    }\n                    else {\n                        const outer_1 = matchValue[0];\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                            innerOpt = (copyOfStruct = ie, getEnumerator(copyOfStruct));\n                        }\n                        else {\n                            finish();\n                            res = false;\n                        }\n                    }\n                }\n                else {\n                    outerOpt = getEnumerator(sources);\n                }\n            }\n            return value_1(res);\n        }\n    }, () => {\n        if (!finished) {\n            finish();\n        }\n    });\n}\n\nexport function Enumerator_enumerateThenFinally(f, e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        try {\n            e.Dispose();\n        }\n        finally {\n            f();\n        }\n    });\n}\n\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\n    let started = false;\n    let curr = void 0;\n    let state = some(openf());\n    const dispose = () => {\n        if (state != null) {\n            const x_1 = value_1(state);\n            try {\n                closef(x_1);\n            }\n            finally {\n                state = (void 0);\n            }\n        }\n    };\n    const finish = () => {\n        try {\n            dispose();\n        }\n        finally {\n            curr = (void 0);\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        if (!started) {\n            started = true;\n        }\n        if (state != null) {\n            const s = value_1(state);\n            let matchValue_1;\n            try {\n                matchValue_1 = compute(s);\n            }\n            catch (matchValue) {\n                finish();\n                throw matchValue;\n            }\n            if (matchValue_1 != null) {\n                curr = matchValue_1;\n                return true;\n            }\n            else {\n                finish();\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }, dispose);\n}\n\nexport function Enumerator_unfold(f, state) {\n    let curr = void 0;\n    let acc = state;\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (curr != null) {\n            const st = curr[1];\n            return curr[0];\n        }\n        else {\n            return Enumerator_notStarted();\n        }\n    }, () => {\n        curr = f(acc);\n        if (curr != null) {\n            const x_1 = curr[0];\n            const st_1 = curr[1];\n            acc = st_1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, () => {\n    });\n}\n\nexport function indexNotFound() {\n    throw (new Error(SR_keyNotFoundAlt));\n}\n\nexport function checkNonNull(argName, arg) {\n    if (arg == null) {\n        Operators_NullArg(argName);\n    }\n}\n\nexport function mkSeq(f) {\n    return Enumerator_Seq_$ctor_673A07F2(f);\n}\n\nexport function ofSeq(xs) {\n    checkNonNull(\"source\", xs);\n    return getEnumerator(xs);\n}\n\nexport function delay(generator) {\n    return mkSeq(() => getEnumerator(generator()));\n}\n\nexport function concat(sources) {\n    return mkSeq(() => Enumerator_concat(sources));\n}\n\nexport function unfold(generator, state) {\n    return mkSeq(() => Enumerator_unfold(generator, state));\n}\n\nexport function empty() {\n    return delay(() => (new Array(0)));\n}\n\nexport function singleton(x) {\n    return delay(() => singleton_1(x));\n}\n\nexport function ofArray(arr) {\n    return arr;\n}\n\nexport function toArray(xs) {\n    if (isArrayLike(xs)) {\n        return xs;\n    }\n    else if (xs instanceof FSharpList) {\n        return toArray_1(xs);\n    }\n    else {\n        return Array.from(xs);\n    }\n}\n\nexport function ofList(xs) {\n    return xs;\n}\n\nexport function toList(xs) {\n    if (isArrayLike(xs)) {\n        return ofArray_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        return ofSeq_1(xs);\n    }\n}\n\nexport function generate(create, compute, dispose) {\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\n}\n\nexport function generateIndexed(create, compute, dispose) {\n    return mkSeq(() => {\n        let i = -1;\n        return Enumerator_generateWhileSome(create, (x) => {\n            i = ((i + 1) | 0);\n            return compute(i, x);\n        }, dispose);\n    });\n}\n\nexport function append(xs, ys) {\n    return concat([xs, ys]);\n}\n\nexport function cast(xs) {\n    return mkSeq(() => {\n        checkNonNull(\"source\", xs);\n        return Enumerator_cast(getEnumerator(xs));\n    });\n}\n\nexport function choose(chooser, xs) {\n    return generate(() => ofSeq(xs), (e) => {\n        let curr = void 0;\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return curr;\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let c = 0;\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n            while (((c === 0) ? b1 : false) ? b2 : false) {\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\n                if (c === 0) {\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                }\n            }\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function contains(value, xs, comparer) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function enumerateFromFunctions(create, moveNext, current) {\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\n        const matchValue = x_1;\n        if (isDisposable(matchValue)) {\n            matchValue.Dispose();\n        }\n    });\n}\n\nexport function enumerateThenFinally(source, compensation) {\n    const compensation_1 = compensation;\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n        }\n        catch (matchValue) {\n            compensation_1();\n            throw matchValue;\n        }\n    });\n}\n\nexport function enumerateUsing(resource, source) {\n    const compensation = () => {\n        if (equals(resource, null)) {\n        }\n        else {\n            let copyOfStruct = resource;\n            copyOfStruct.Dispose();\n        }\n    };\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n        }\n        catch (matchValue_1) {\n            compensation();\n            throw matchValue_1;\n        }\n    });\n}\n\nexport function enumerateWhile(guard, xs) {\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\n}\n\nexport function filter(f, xs) {\n    return choose((x) => {\n        if (f(x)) {\n            return some(x);\n        }\n        else {\n            return void 0;\n        }\n    }, xs);\n}\n\nexport function exists(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function exists2(predicate, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let found = false;\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return found;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function exactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\n            }\n            else {\n                return v;\n            }\n        }\n        else {\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\n        }\n        else {\n            return void 0;\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryFind(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (predicate(c)) {\n                res = some(c);\n            }\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function find(predicate, xs) {\n    const matchValue = tryFind(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(predicate, xs) {\n    return tryFindBack_1(predicate, toArray(xs));\n}\n\nexport function findBack(predicate, xs) {\n    const matchValue = tryFindBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (i_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n                        return i;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        continue loop;\n                    }\n                }\n                else {\n                    return void 0;\n                }\n                break;\n            }\n        };\n        return loop(0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function findIndex(predicate, xs) {\n    const matchValue = tryFindIndex(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(predicate, xs) {\n    return tryFindIndexBack_1(predicate, toArray(xs));\n}\n\nexport function findIndexBack(predicate, xs) {\n    const matchValue = tryFindIndexBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function fold(folder, state, xs) {\n    const e = ofSeq(xs);\n    try {\n        let acc = state;\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return acc;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let acc = state;\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return acc;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function forAll(predicate, xs) {\n    return !exists((x) => (!predicate(x)), xs);\n}\n\nexport function forAll2(predicate, xs, ys) {\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\n}\n\nexport function tryHead(xs) {\n    if (isArrayLike(xs)) {\n        return tryHead_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryHead_2(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function head(xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function initialize(count, f) {\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\n}\n\nexport function initializeInfinite(f) {\n    return initialize(2147483647, f);\n}\n\nexport function isEmpty(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length === 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return isEmpty_1(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function tryItem(index, xs) {\n    if (isArrayLike(xs)) {\n        return tryItem_1(index, xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryItem_2(index, xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            const loop = (index_1_mut) => {\n                loop:\n                while (true) {\n                    const index_1 = index_1_mut;\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                        return void 0;\n                    }\n                    else if (index_1 === 0) {\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    }\n                    else {\n                        index_1_mut = (index_1 - 1);\n                        continue loop;\n                    }\n                    break;\n                }\n            };\n            return loop(index);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function item(index, xs) {\n    const matchValue = tryItem(index, xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function tryLast(xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    return acc;\n                }\n                else {\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    continue loop;\n                }\n                break;\n            }\n        };\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function length(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length | 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return length_1(xs) | 0;\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            let count = 0;\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                count = ((count + 1) | 0);\n            }\n            return count | 0;\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function map(mapping, xs) {\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function mapIndexed(mapping, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        const e3 = tupledArg[2];\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            try {\n                tupledArg_1[1].Dispose();\n            }\n            finally {\n                tupledArg_1[2].Dispose();\n            }\n        }\n    });\n}\n\nexport function readOnly(xs) {\n    checkNonNull(\"source\", xs);\n    return map((x) => x, xs);\n}\n\nexport function cache(xs) {\n    let cached = false;\n    const xsCache = [];\n    return delay(() => {\n        if (!cached) {\n            cached = true;\n            return map((x) => {\n                void (xsCache.push(x));\n                return x;\n            }, xs);\n        }\n        else {\n            return xsCache;\n        }\n    });\n}\n\nexport function allPairs(xs, ys) {\n    const ysCache = cache(ys);\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\n}\n\nexport function mapFold(mapping, state, xs) {\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function tryPick(chooser, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function pick(chooser, xs) {\n    const matchValue = tryPick(chooser, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function reduce(folder, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    continue loop;\n                }\n                else {\n                    return acc;\n                }\n                break;\n            }\n        };\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        else {\n            throw (new Error(SR_inputSequenceEmpty));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function reduceBack(folder, xs) {\n    const arr = toArray(xs);\n    if (arr.length > 0) {\n        return arr.reduceRight(folder);\n    }\n    else {\n        throw (new Error(SR_inputSequenceEmpty));\n    }\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reverse(xs) {\n    return delay(() => ofArray(reverse_1(toArray(xs))));\n}\n\nexport function scan(folder, state, xs) {\n    return delay(() => {\n        let acc = state;\n        return concat([singleton(state), map((x) => {\n            acc = folder(acc, x);\n            return acc;\n        }, xs)]);\n    });\n}\n\nexport function scanBack(folder, xs, state) {\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\n}\n\nexport function skip(count, xs) {\n    return mkSeq(() => {\n        const e = ofSeq(xs);\n        try {\n            for (let i = 1; i <= count; i++) {\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n                }\n            }\n            return Enumerator_enumerateThenFinally(() => {\n            }, e);\n        }\n        catch (matchValue) {\n            e.Dispose();\n            throw matchValue;\n        }\n    });\n}\n\nexport function skipWhile(predicate, xs) {\n    return delay(() => {\n        let skipped = true;\n        return filter((x) => {\n            if (skipped) {\n                skipped = predicate(x);\n            }\n            return !skipped;\n        }, xs);\n    });\n}\n\nexport function tail(xs) {\n    return skip(1, xs);\n}\n\nexport function take(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\n        if (i < count) {\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            else {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n            }\n        }\n        else {\n            return void 0;\n        }\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function takeWhile(predicate, xs) {\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function truncate(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function collect(mapping, xs) {\n    return delay(() => concat(map(mapping, xs)));\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\n}\n\nexport function windowed(windowSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\n}\n\nexport function transpose(xss) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\n}\n\nexport function sortWith(comparer, xs) {\n    return delay(() => {\n        const arr = toArray(xs);\n        arr.sort(comparer);\n        return ofArray(arr);\n    });\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\nimport { fill } from \"./Array.js\";\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\nimport { format, join } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = (h | 0);\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n    else {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (MapTreeNode$2__get_Left(m2) == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                }\n                else if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                f_mut = f;\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\n        foldFromTo:\n        while (true) {\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                    if (cKeyHi < 0) {\n                        f_1_mut = f_1;\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\n                        x_1_mut = x_3;\n                        continue foldFromTo;\n                    }\n                    else {\n                        return x_3;\n                    }\n                }\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                }\n                else {\n                    return x_1;\n                }\n            }\n            else {\n                return x_1;\n            }\n            break;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\n                    continue loop;\n                }\n                else {\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, empty_1());\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = ((j + 1) | 0);\n    }, m);\n}\n\nexport function MapTreeModule_toArray(m) {\n    const n = MapTreeModule_size(m) | 0;\n    const res = fill(new Array(n), 0, n, [null, null]);\n    MapTreeModule_copyToArray(m, res, 0);\n    return res;\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof FSharpList) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (!isEmpty_1(stack)) {\n            const rest = tail(stack);\n            const m = head(stack);\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return empty_1();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const m = head(matchValue);\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const m = head(matchValue);\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\n                    return !isEmpty_1(i.stack);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !isEmpty_1(i.stack);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, MapTreeModule_mkIEnumerator(s));\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return Array.from(this$);\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_1((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_1((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_1((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            f(p[1], p[0], m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_1(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const activePatternResult5257 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = (combineHash(res, structuralHash(activePatternResult5257[0])) | 0);\n            res = (combineHash(res, structuralHash(activePatternResult5257[1])) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { toString, Record } from \"./Types.js\";\nimport { FSharpList, fold as fold_2, cons, singleton as singleton_1, empty as empty_1, ofArrayWithTail, tail, head, isEmpty as isEmpty_1 } from \"./List.js\";\nimport { fold as fold_1, fill } from \"./Array.js\";\nimport { structuralHash, toIterator, getEnumerator, isArrayLike } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { fold as fold_3, reduce, iterate as iterate_1, map as map_1 } from \"./Seq.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = (h | 0);\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n    else {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Left(t2) == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (SetTreeNode$1__get_Left(t2) == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (SetTreeNode$1__get_Right(t2) == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (!isEmpty_1(stack)) {\n            const x = head(stack);\n            const rest = tail(stack);\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), SetTreeNode$1__get_Right(x2)], rest);\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return empty_1();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(singleton_1(s)), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (isEmpty_1(matchValue)) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (head(matchValue) != null) {\n            const t = head(matchValue);\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const t = head(matchValue);\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(tail(matchValue));\n                    return !isEmpty_1(i.stack);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !isEmpty_1(i.stack);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (!isEmpty_1(matchValue[0])) {\n            if (!isEmpty_1(matchValue[1])) {\n                if (head(matchValue[1]) != null) {\n                    if (head(matchValue[0]) != null) {\n                        const x1_3 = head(matchValue[0]);\n                        const x2_3 = head(matchValue[1]);\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\n                                            l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (!isEmpty_1(matchValue_3[0])) {\n                                            if (head(matchValue_3[0]) != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = tail(matchValue_3[0]);\n                                                x1_4 = head(matchValue_3[0]);\n                                            }\n                                            else if (!isEmpty_1(matchValue_3[1])) {\n                                                if (head(matchValue_3[1]) != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = tail(matchValue_3[1]);\n                                                    x2_4 = head(matchValue_3[1]);\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (!isEmpty_1(matchValue_3[1])) {\n                                            if (head(matchValue_3[1]) != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = tail(matchValue_3[1]);\n                                                x2_4 = head(matchValue_3[1]);\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0)], t1_6);\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4))], t1_6);\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_4), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0)], t2_6);\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4))], t2_6);\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = cons(SetTreeNode$1__get_Right(x1_3), tail(matchValue[0]));\n                                        l2_mut = cons(SetTreeModule_empty(), tail(matchValue[1]));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (!isEmpty_1(matchValue_4[0])) {\n                                    if (head(matchValue_4[0]) != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = tail(matchValue_4[0]);\n                                        x1_5 = head(matchValue_4[0]);\n                                    }\n                                    else if (!isEmpty_1(matchValue_4[1])) {\n                                        if (head(matchValue_4[1]) != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = tail(matchValue_4[1]);\n                                            x2_5 = head(matchValue_4[1]);\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (!isEmpty_1(matchValue_4[1])) {\n                                    if (head(matchValue_4[1]) != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = tail(matchValue_4[1]);\n                                        x2_5 = head(matchValue_4[1]);\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0)], t1_7);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5))], t1_7);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_5), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0)], t2_7);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5))], t2_7);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = cons(SetTreeModule_empty(), tail(matchValue[0]));\n                                    l2_mut = cons(SetTreeNode$1__get_Right(x2_3), tail(matchValue[1]));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (!isEmpty_1(matchValue_5[0])) {\n                                    if (head(matchValue_5[0]) != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = tail(matchValue_5[0]);\n                                        x1_6 = head(matchValue_5[0]);\n                                    }\n                                    else if (!isEmpty_1(matchValue_5[1])) {\n                                        if (head(matchValue_5[1]) != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = tail(matchValue_5[1]);\n                                            x2_6 = head(matchValue_5[1]);\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (!isEmpty_1(matchValue_5[1])) {\n                                    if (head(matchValue_5[1]) != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = tail(matchValue_5[1]);\n                                        x2_6 = head(matchValue_5[1]);\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0)], t1_8);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6))], t1_8);\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_6), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0)], t2_8);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6))], t2_8);\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = tail(matchValue[0]);\n                                l2_mut = tail(matchValue[1]);\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = head(matchValue[1]);\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (!isEmpty_1(matchValue_1[0])) {\n                            if (head(matchValue_1[0]) != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = tail(matchValue_1[0]);\n                                x1 = head(matchValue_1[0]);\n                            }\n                            else if (!isEmpty_1(matchValue_1[1])) {\n                                if (head(matchValue_1[1]) != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = tail(matchValue_1[1]);\n                                    x2_1 = head(matchValue_1[1]);\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (!isEmpty_1(matchValue_1[1])) {\n                            if (head(matchValue_1[1]) != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = tail(matchValue_1[1]);\n                                x2_1 = head(matchValue_1[1]);\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0)], t1_2);\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1))], t1_2);\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_1), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0)], t2_2);\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1))], t2_2);\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (head(matchValue[0]) != null) {\n                    const x1_1 = head(matchValue[0]);\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (!isEmpty_1(matchValue_2[0])) {\n                        if (head(matchValue_2[0]) != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = tail(matchValue_2[0]);\n                            x1_2 = head(matchValue_2[0]);\n                        }\n                        else if (!isEmpty_1(matchValue_2[1])) {\n                            if (head(matchValue_2[1]) != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = tail(matchValue_2[1]);\n                                x2_2 = head(matchValue_2[1]);\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (!isEmpty_1(matchValue_2[1])) {\n                        if (head(matchValue_2[1]) != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = tail(matchValue_2[1]);\n                            x2_2 = head(matchValue_2[1]);\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x1_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0)], t1_4);\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2))], t1_4);\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = ofArrayWithTail([SetTreeNode$1__get_Left(x2_2), SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0)], t2_4);\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = ofArrayWithTail([SetTreeModule_empty(), SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2))], t2_4);\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = tail(matchValue[0]);\n                    l2_mut = tail(matchValue[1]);\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (isEmpty_1(matchValue[1])) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, singleton_1(t1), singleton_1(t2)) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = cons(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc));\n                    continue loop;\n                }\n                else {\n                    return cons(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, empty_1());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = ((j + 1) | 0);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = fill(new Array(n), 0, n, null);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport function SetTreeModule_ofList(comparer, l) {\n    return fold_2((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return SetTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof FSharpList) {\n        return SetTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        return (\"set [\" + join(\"; \", map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return Array.from(this$);\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            f(x, x, s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    return FSharpSet__get_Tree(s) == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    if (FSharpSet__get_Tree(set1) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set1) == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    if (FSharpSet__get_Tree(b) == null) {\n        return b;\n    }\n    else if (FSharpSet__get_Tree(a) == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = ((((res << 1) + structuralHash(x_1)) + 631) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_3((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function unionWith(s1, s2) {\n    return fold_3((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = getEnumerator(s1.keys());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                void s1.delete(x);\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","import { toFail, printf, toText, join } from \"../fable-library.3.1.12/String.js\";\nimport { Result_Map, FSharpResult$2 } from \"../fable-library.3.1.12/Choice.js\";\nimport { Util_CachedDecoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert, ErrorReason } from \"./Types.fs.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.1.12/Guid.js\";\nimport { toString as toString_12, FSharpRef } from \"../fable-library.3.1.12/Types.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.1.12/Int32.js\";\nimport { tryParse as tryParse_4, fromInt, fromNumber, toNumber, fromBits } from \"../fable-library.3.1.12/Long.js\";\nimport { parse, fromInt32 } from \"../fable-library.3.1.12/BigInt.js\";\nimport { tryParse as tryParse_5 } from \"../fable-library.3.1.12/Decimal.js\";\nimport Decimal from \"../fable-library.3.1.12/Decimal.js\";\nimport { toUniversalTime, tryParse as tryParse_6, minValue } from \"../fable-library.3.1.12/Date.js\";\nimport { tryParse as tryParse_7, minValue as minValue_1 } from \"../fable-library.3.1.12/DateOffset.js\";\nimport { tryParse as tryParse_8 } from \"../fable-library.3.1.12/TimeSpan.js\";\nimport { map as map_4, value as value_40, defaultArg, some } from \"../fable-library.3.1.12/Option.js\";\nimport { ofArray, toArray, map as map_1, length, singleton, append as append_1, tail as tail_1, head as head_1, isEmpty, empty, reverse, fold, tryLast, cons } from \"../fable-library.3.1.12/List.js\";\nimport { int16ToString, numberHash, mapCurriedArgs, compare, int32ToString, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { map as map_2, tryFind, foldBack2, foldBack, fill, fold as fold_1 } from \"../fable-library.3.1.12/Array.js\";\nimport { contains, toList, fold as fold_2, append, reverse as reverse_1 } from \"../fable-library.3.1.12/Seq.js\";\nimport { empty as empty_1, map as map_3, tryFind as tryFind_1, add, ofSeq, ofList } from \"../fable-library.3.1.12/Map.js\";\nimport { getGenerics, getGenericTypeDefinition, makeTuple, getTupleElements, isTuple, isGenericType, parseEnum, getEnumValues, getEnumUnderlyingType, isEnum, getElementType, isArray, isUnion, makeRecord, getRecordElements, isRecord, fullName, getUnionCaseFields, makeUnion as makeUnion_1, getUnionCases, name as name_3, class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { ofSeq as ofSeq_1 } from \"../fable-library.3.1.12/Set.js\";\n\nexport function Helpers_isUndefined(o) {\n    return (typeof o) === \"undefined\";\n}\n\nfunction genericMsg(msg, value_1, newLine) {\n    try {\n        return (((\"Expecting \" + msg) + \" but instead got:\") + (newLine ? \"\\n\" : \" \")) + (JSON.stringify(value_1, null, 4) + '');\n    }\n    catch (matchValue) {\n        return ((\"Expecting \" + msg) + \" but decoder failed. Couldn\\u0027t report given value due to circular structure.\") + (newLine ? \"\\n\" : \" \");\n    }\n}\n\nfunction errorToString(path, error) {\n    const reason_1 = (error.tag === 2) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 1) ? ((genericMsg(error.fields[0], error.fields[1], false) + \"\\nReason: \") + error.fields[2]) : ((error.tag === 3) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 4) ? (genericMsg(error.fields[0], error.fields[1], true) + ((\"\\nNode `\" + error.fields[2]) + \"` is unkown.\")) : ((error.tag === 5) ? (((\"Expecting \" + error.fields[0]) + \".\\n\") + (JSON.stringify(error.fields[1], null, 4) + '')) : ((error.tag === 7) ? (\"The following errors were found:\\n\\n\" + join(\"\\n\\n\", error.fields[0])) : ((error.tag === 6) ? (\"The following `failure` occurred with the decoder: \" + error.fields[0]) : genericMsg(error.fields[0], error.fields[1], false)))))));\n    if (error.tag === 7) {\n        return reason_1;\n    }\n    else {\n        return ((\"Error at: `\" + path) + \"`\\n\") + reason_1;\n    }\n}\n\nexport function fromValue(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        const error = matchValue.fields[0];\n        return new FSharpResult$2(1, errorToString(error[0], error[1]));\n    }\n    else {\n        return new FSharpResult$2(0, matchValue.fields[0]);\n    }\n}\n\nexport function fromString(decoder, value_1) {\n    try {\n        return fromValue(\"$\", decoder, JSON.parse(value_1));\n    }\n    catch (matchValue) {\n        if (matchValue instanceof SyntaxError) {\n            return new FSharpResult$2(1, \"Given an invalid JSON: \" + matchValue.message);\n        }\n        else {\n            throw matchValue;\n        }\n    }\n}\n\nexport function unsafeFromString(decoder, value_1) {\n    const matchValue = fromString(decoder, value_1);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport function decodeValue(path, decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromValue(path, decoder_1, value_1);\n}\n\nexport function decodeString(decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromString(decoder_1, value_1);\n}\n\nexport function string(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a string\", value_1)]);\n    }\n}\n\nexport function guid(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = \"00000000-0000-0000-0000-000000000000\";\n        matchValue = [tryParse_2(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n    }\n}\n\nexport function unit(path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport const sbyte = (path) => ((value_2) => {\n    const name_1 = \"a sbyte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-128 <= value_4) ? (value_4 <= 127) : false) ? (new FSharpResult$2(0, (value_4 + 0x80 & 0xFF) - 0x80)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const byte = (path) => ((value_2) => {\n    const name_1 = \"a byte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 255) : false) ? (new FSharpResult$2(0, value_4 & 0xFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int16 = (path) => ((value_2) => {\n    const name_1 = \"an int16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-32768 <= value_4) ? (value_4 <= 32767) : false) ? (new FSharpResult$2(0, (value_4 + 0x8000 & 0xFFFF) - 0x8000)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint16 = (path) => ((value_2) => {\n    const name_1 = \"an uint16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 65535) : false) ? (new FSharpResult$2(0, value_4 & 0xFFFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int = (path) => ((value_2) => {\n    const name_1 = \"an int\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-2147483648 <= value_4) ? (value_4 <= 2147483647) : false) ? (new FSharpResult$2(0, ~(~value_4))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint32 = (path) => ((value_2) => {\n    const name_1 = \"an uint32\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 4294967295) : false) ? (new FSharpResult$2(0, value_4 >>> 0)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int64 = (() => {\n    const min = fromBits(0, 2147483648, false);\n    const max = fromBits(4294967295, 2147483647, false);\n    return (path) => ((value_2) => {\n        const name_1 = \"an int64\";\n        const path_1 = path;\n        const value_3 = value_2;\n        if ((typeof value_3) === \"number\") {\n            const value_4 = value_3;\n            return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(min) <= value_4) ? (value_4 <= toNumber(max)) : false) ? (new FSharpResult$2(0, fromNumber(value_4, false))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n        }\n        else if ((typeof value_3) === \"string\") {\n            let matchValue;\n            let outArg = fromInt(0);\n            matchValue = [tryParse_4(value_3, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n                outArg = v;\n            })), outArg];\n            return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n        }\n        else {\n            return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n        }\n    });\n})();\n\nexport const uint64 = (() => {\n    const min = fromBits(0, 0, true);\n    const max = fromBits(4294967295, 4294967295, true);\n    return (path) => ((value_2) => {\n        const name_1 = \"an uint64\";\n        const path_1 = path;\n        const value_3 = value_2;\n        if ((typeof value_3) === \"number\") {\n            const value_4 = value_3;\n            return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(min) <= value_4) ? (value_4 <= toNumber(max)) : false) ? (new FSharpResult$2(0, fromNumber(value_4, true))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n        }\n        else if ((typeof value_3) === \"string\") {\n            let matchValue;\n            let outArg = fromInt(0);\n            matchValue = [tryParse_4(value_3, 511, true, 64, new FSharpRef(() => outArg, (v) => {\n                outArg = v;\n            })), outArg];\n            return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n        }\n        else {\n            return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n        }\n    });\n})();\n\nexport function bigint(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, fromInt32(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        try {\n            return new FSharpResult$2(0, parse(value_1));\n        }\n        catch (matchValue) {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n    }\n}\n\nexport function bool(path, value_1) {\n    if ((typeof value_1) === \"boolean\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a boolean\", value_1)]);\n    }\n}\n\nexport function float(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float\", value_1)]);\n    }\n}\n\nexport function float32(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float32\", value_1)]);\n    }\n}\n\nexport function decimal(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, new Decimal(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = new Decimal(0);\n        matchValue = [tryParse_5(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n    }\n}\n\nexport function datetime(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue();\n        matchValue = [tryParse_6(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, toUniversalTime(matchValue[1]));\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function datetimeOffset(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue_1();\n        matchValue = [tryParse_7(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetimeoffset\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function timespan(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_8(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n    }\n}\n\nfunction decodeMaybeNull(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        if (value_1 == null) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else if (matchValue.tag === 1) {\n            return new FSharpResult$2(1, matchValue.fields[0]);\n        }\n        else {\n            throw (new Error(\"Match failure\"));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, some(matchValue.fields[0]));\n    }\n}\n\nexport function optional(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull((path + \".\") + fieldName, decoder, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nfunction badPathError(fieldNames, currentPath, value_1) {\n    return new FSharpResult$2(1, [defaultArg(currentPath, join(\".\", cons(\"$\", fieldNames))), new ErrorReason(4, (\"an object with path `\" + join(\".\", fieldNames)) + \"`\", value_1, defaultArg(tryLast(fieldNames), \"\"))]);\n}\n\nexport function optionalAt(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => ((res == null) ? ((curValue == null) ? [curPath, curValue, badPathError(fieldNames, curPath, firstValue)] : ((curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) ? [(curPath + \".\") + field_1, curValue[field_1], void 0] : [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])])) : [curPath, curValue, res]);\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        const lastValue = _arg1[1];\n        if (Helpers_isUndefined(lastValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull(_arg1[0], decoder, lastValue);\n        }\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function field(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(1, [path, new ErrorReason(3, (\"an object with a field named `\" + fieldName) + \"`\", value_1)]);\n        }\n        else {\n            return decoder((path + \".\") + fieldName, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nexport function at(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => {\n            if (res == null) {\n                if (curValue == null) {\n                    return [curPath, curValue, badPathError(fieldNames, curPath, firstValue)];\n                }\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\n                    const curValue_1 = curValue[field_1];\n                    return Helpers_isUndefined(curValue_1) ? [curPath, curValue_1, badPathError(fieldNames, void 0, firstValue)] : [(curPath + \".\") + field_1, curValue_1, void 0];\n                }\n                else {\n                    return [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])];\n                }\n            }\n            else {\n                return [curPath, curValue, res];\n            }\n        };\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        return decoder(_arg1[0], _arg1[1]);\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function index(requestedIndex, decoder, path, value_1) {\n    let copyOfStruct;\n    const currentPath = ((path + \".[\") + int32ToString(requestedIndex)) + \"]\";\n    if (Array.isArray(value_1)) {\n        const vArray = value_1;\n        if (requestedIndex < vArray.length) {\n            return decoder(currentPath, vArray[requestedIndex]);\n        }\n        else {\n            return new FSharpResult$2(1, [currentPath, new ErrorReason(5, (((\"a longer array. Need index `\" + int32ToString(requestedIndex)) + \"` but there are only `\") + (copyOfStruct = (vArray.length | 0), int32ToString(copyOfStruct))) + \"` entries\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [currentPath, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function option(decoder, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return Result_Map((arg0) => some(arg0), decoder(path, value_1));\n    }\n}\n\nexport function list(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((list_1) => reverse(list_1), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, cons(matchValue.fields[0], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a list\", value_1)]);\n    }\n}\n\nexport function seq(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((source) => reverse_1(source), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, append([matchValue.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, []), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a seq\", value_1)]);\n    }\n}\n\nexport function array(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        const tokens = value_1;\n        return fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const acc_1 = acc.fields[0];\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    acc_1[i] = matchValue.fields[0];\n                    return new FSharpResult$2(0, acc_1);\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, fill(new Array(tokens.length), 0, tokens.length, null)), tokens);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function keyValuePairs(decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        return Result_Map((list_1) => reverse(list_1), fold_2((acc, prop) => {\n            if (acc.tag === 0) {\n                const matchValue = decoder(path, value_1[prop]);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, cons([prop, matchValue.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), Object.keys(value_1)));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n}\n\nexport function oneOf(decoders, path, value_1) {\n    const runner = (decoders_1_mut, errors_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, errors = errors_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(1, [path, new ErrorReason(7, errors)]);\n            }\n            else {\n                const matchValue = fromValue(path, uncurry(2, head_1(decoders_1)), value_1);\n                if (matchValue.tag === 1) {\n                    decoders_1_mut = tail_1(decoders_1);\n                    errors_mut = append_1(errors, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n                else {\n                    return new FSharpResult$2(0, matchValue.fields[0]);\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function nil(output, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, output);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport function value(_arg1, v) {\n    return new FSharpResult$2(0, v);\n}\n\nexport function succeed(output, _arg2, _arg1) {\n    return new FSharpResult$2(0, output);\n}\n\nexport function fail(msg, path, _arg1) {\n    return new FSharpResult$2(1, [path, new ErrorReason(6, msg)]);\n}\n\nexport function andThen(cb, decoder, path, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 0) {\n        return cb(matchValue.fields[0], path, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n}\n\nexport function map(ctor, d1, path, value_1) {\n    const matchValue = d1(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(0, ctor(matchValue.fields[0]));\n    }\n}\n\nexport function map2(ctor, d1, d2, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0]));\n        }\n    }\n}\n\nexport function map3(ctor, d1, d2, d3, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0]));\n            }\n        }\n    }\n}\n\nexport function map4(ctor, d1, d2, d3, d4, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0]));\n                }\n            }\n        }\n    }\n}\n\nexport function map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0]));\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0]));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0]));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                const copyOfStruct_7 = matchValue[7];\n                                if (copyOfStruct_7.tag === 1) {\n                                    return new FSharpResult$2(1, copyOfStruct_7.fields[0]);\n                                }\n                                else {\n                                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0], copyOfStruct_7.fields[0]));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function dict(decoder) {\n    let d1;\n    const decoder_1 = decoder;\n    d1 = ((path) => ((value_1) => keyValuePairs(decoder_1, path, value_1)));\n    return (path_1) => ((value_2) => map((elements) => ofList(elements), uncurry(2, d1), path_1, value_2));\n}\n\nfunction unwrapWith(errors, path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        void (errors.push(matchValue.fields[0]));\n        return null;\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport class Getters$1 {\n    constructor(path, v) {\n        let _this, _this_1;\n        this.errors = [];\n        this.required = (_this = this, {\n            Field(fieldName, decoder) {\n                return unwrapWith(_this.errors, path, (path_1, value_1) => field(fieldName, decoder, path_1, value_1), v);\n            },\n            At(fieldNames, decoder_2) {\n                return unwrapWith(_this.errors, path, (firstPath, firstValue) => at(fieldNames, decoder_2, firstPath, firstValue), v);\n            },\n            Raw(decoder_4) {\n                return unwrapWith(_this.errors, path, decoder_4, v);\n            },\n        });\n        this.optional = (_this_1 = this, {\n            Field(fieldName_1, decoder_5) {\n                return unwrapWith(_this_1.errors, path, (path_2, value_2) => optional(fieldName_1, decoder_5, path_2, value_2), v);\n            },\n            At(fieldNames_1, decoder_7) {\n                return unwrapWith(_this_1.errors, path, (firstPath_1, firstValue_1) => optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1), v);\n            },\n            Raw(decoder_9) {\n                const matchValue = decoder_9(path, v);\n                if (matchValue.tag === 1) {\n                    const reason = matchValue.fields[0][1];\n                    const error = matchValue.fields[0];\n                    let pattern_matching_result, v_2;\n                    switch (reason.tag) {\n                        case 1: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 2: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 3:\n                        case 4: {\n                            pattern_matching_result = 1;\n                            break;\n                        }\n                        case 5:\n                        case 6:\n                        case 7: {\n                            pattern_matching_result = 2;\n                            break;\n                        }\n                        default: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                        }\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            if (v_2 == null) {\n                                return void 0;\n                            }\n                            else {\n                                void (_this_1.errors.push(error));\n                                return null;\n                            }\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                        case 2: {\n                            void (_this_1.errors.push(error));\n                            return null;\n                        }\n                    }\n                }\n                else {\n                    return some(matchValue.fields[0]);\n                }\n            },\n        });\n    }\n    get Required() {\n        const __ = this;\n        return __.required;\n    }\n    get Optional() {\n        const __ = this;\n        return __.optional;\n    }\n}\n\nexport function Getters$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\n}\n\nexport function Getters$1_$ctor_4A51B60E(path, v) {\n    return new Getters$1(path, v);\n}\n\nexport function Getters$1__get_Errors(__) {\n    return toList(__.errors);\n}\n\nexport function object(builder, path, v) {\n    const getters = Getters$1_$ctor_4A51B60E(path, v);\n    const result = builder(getters);\n    const matchValue = Getters$1__get_Errors(getters);\n    if (!isEmpty(matchValue)) {\n        const errors = matchValue;\n        if (length(errors) > 1) {\n            return new FSharpResult$2(1, [path, new ErrorReason(7, map_1((tupledArg) => errorToString(tupledArg[0], tupledArg[1]), errors))]);\n        }\n        else {\n            return new FSharpResult$2(1, head_1(matchValue));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, result);\n    }\n}\n\nexport function tuple2(decoder1, decoder2) {\n    let decoder_3;\n    const decoder = decoder1;\n    decoder_3 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_3) => ((value_4) => andThen(uncurry(3, (v1) => {\n        let decoder_2;\n        const decoder_1 = decoder2;\n        decoder_2 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_2) => ((value_3) => andThen((v2, arg10$0040, arg20$0040) => succeed([v1, v2], arg10$0040, arg20$0040), uncurry(2, decoder_2), path_2, value_3));\n    }), uncurry(2, decoder_3), path_3, value_4));\n}\n\nexport function tuple3(decoder1, decoder2, decoder3) {\n    let decoder_5;\n    const decoder = decoder1;\n    decoder_5 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_5) => ((value_6) => andThen(uncurry(3, (v1) => {\n        let decoder_4;\n        const decoder_1 = decoder2;\n        decoder_4 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_4) => ((value_5) => andThen(uncurry(3, (v2) => {\n            let decoder_3;\n            const decoder_2 = decoder3;\n            decoder_3 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_3) => ((value_4) => andThen((v3, arg10$0040, arg20$0040) => succeed([v1, v2, v3], arg10$0040, arg20$0040), uncurry(2, decoder_3), path_3, value_4));\n        }), uncurry(2, decoder_4), path_4, value_5));\n    }), uncurry(2, decoder_5), path_5, value_6));\n}\n\nexport function tuple4(decoder1, decoder2, decoder3, decoder4) {\n    let decoder_7;\n    const decoder = decoder1;\n    decoder_7 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_7) => ((value_8) => andThen(uncurry(3, (v1) => {\n        let decoder_6;\n        const decoder_1 = decoder2;\n        decoder_6 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_6) => ((value_7) => andThen(uncurry(3, (v2) => {\n            let decoder_5;\n            const decoder_2 = decoder3;\n            decoder_5 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_5) => ((value_6) => andThen(uncurry(3, (v3) => {\n                let decoder_4;\n                const decoder_3 = decoder4;\n                decoder_4 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_4) => ((value_5) => andThen((v4, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4], arg10$0040, arg20$0040), uncurry(2, decoder_4), path_4, value_5));\n            }), uncurry(2, decoder_5), path_5, value_6));\n        }), uncurry(2, decoder_6), path_6, value_7));\n    }), uncurry(2, decoder_7), path_7, value_8));\n}\n\nexport function tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\n    let decoder_9;\n    const decoder = decoder1;\n    decoder_9 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_9) => ((value_10) => andThen(uncurry(3, (v1) => {\n        let decoder_8;\n        const decoder_1 = decoder2;\n        decoder_8 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_8) => ((value_9) => andThen(uncurry(3, (v2) => {\n            let decoder_7;\n            const decoder_2 = decoder3;\n            decoder_7 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_7) => ((value_8) => andThen(uncurry(3, (v3) => {\n                let decoder_6;\n                const decoder_3 = decoder4;\n                decoder_6 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_6) => ((value_7) => andThen(uncurry(3, (v4) => {\n                    let decoder_5;\n                    const decoder_4 = decoder5;\n                    decoder_5 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_5) => ((value_6) => andThen((v5, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040), uncurry(2, decoder_5), path_5, value_6));\n                }), uncurry(2, decoder_6), path_6, value_7));\n            }), uncurry(2, decoder_7), path_7, value_8));\n        }), uncurry(2, decoder_8), path_8, value_9));\n    }), uncurry(2, decoder_9), path_9, value_10));\n}\n\nexport function tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\n    let decoder_11;\n    const decoder = decoder1;\n    decoder_11 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_11) => ((value_12) => andThen(uncurry(3, (v1) => {\n        let decoder_10;\n        const decoder_1 = decoder2;\n        decoder_10 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_10) => ((value_11) => andThen(uncurry(3, (v2) => {\n            let decoder_9;\n            const decoder_2 = decoder3;\n            decoder_9 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_9) => ((value_10) => andThen(uncurry(3, (v3) => {\n                let decoder_8;\n                const decoder_3 = decoder4;\n                decoder_8 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_8) => ((value_9) => andThen(uncurry(3, (v4) => {\n                    let decoder_7;\n                    const decoder_4 = decoder5;\n                    decoder_7 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_7) => ((value_8) => andThen(uncurry(3, (v5) => {\n                        let decoder_6;\n                        const decoder_5 = decoder6;\n                        decoder_6 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_6) => ((value_7) => andThen((v6, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040), uncurry(2, decoder_6), path_6, value_7));\n                    }), uncurry(2, decoder_7), path_7, value_8));\n                }), uncurry(2, decoder_8), path_8, value_9));\n            }), uncurry(2, decoder_9), path_9, value_10));\n        }), uncurry(2, decoder_10), path_10, value_11));\n    }), uncurry(2, decoder_11), path_11, value_12));\n}\n\nexport function tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\n    let decoder_13;\n    const decoder = decoder1;\n    decoder_13 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_13) => ((value_14) => andThen(uncurry(3, (v1) => {\n        let decoder_12;\n        const decoder_1 = decoder2;\n        decoder_12 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_12) => ((value_13) => andThen(uncurry(3, (v2) => {\n            let decoder_11;\n            const decoder_2 = decoder3;\n            decoder_11 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_11) => ((value_12) => andThen(uncurry(3, (v3) => {\n                let decoder_10;\n                const decoder_3 = decoder4;\n                decoder_10 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_10) => ((value_11) => andThen(uncurry(3, (v4) => {\n                    let decoder_9;\n                    const decoder_4 = decoder5;\n                    decoder_9 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_9) => ((value_10) => andThen(uncurry(3, (v5) => {\n                        let decoder_8;\n                        const decoder_5 = decoder6;\n                        decoder_8 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_8) => ((value_9) => andThen(uncurry(3, (v6) => {\n                            let decoder_7;\n                            const decoder_6 = decoder7;\n                            decoder_7 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_7) => ((value_8) => andThen((v7, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040), uncurry(2, decoder_7), path_7, value_8));\n                        }), uncurry(2, decoder_8), path_8, value_9));\n                    }), uncurry(2, decoder_9), path_9, value_10));\n                }), uncurry(2, decoder_10), path_10, value_11));\n            }), uncurry(2, decoder_11), path_11, value_12));\n        }), uncurry(2, decoder_12), path_12, value_13));\n    }), uncurry(2, decoder_13), path_13, value_14));\n}\n\nexport function tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\n    let decoder_15;\n    const decoder = decoder1;\n    decoder_15 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_15) => ((value_16) => andThen(uncurry(3, (v1) => {\n        let decoder_14;\n        const decoder_1 = decoder2;\n        decoder_14 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_14) => ((value_15) => andThen(uncurry(3, (v2) => {\n            let decoder_13;\n            const decoder_2 = decoder3;\n            decoder_13 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_13) => ((value_14) => andThen(uncurry(3, (v3) => {\n                let decoder_12;\n                const decoder_3 = decoder4;\n                decoder_12 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_12) => ((value_13) => andThen(uncurry(3, (v4) => {\n                    let decoder_11;\n                    const decoder_4 = decoder5;\n                    decoder_11 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_11) => ((value_12) => andThen(uncurry(3, (v5) => {\n                        let decoder_10;\n                        const decoder_5 = decoder6;\n                        decoder_10 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_10) => ((value_11) => andThen(uncurry(3, (v6) => {\n                            let decoder_9;\n                            const decoder_6 = decoder7;\n                            decoder_9 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_9) => ((value_10) => andThen(uncurry(3, (v7) => {\n                                let decoder_8;\n                                const decoder_7 = decoder8;\n                                decoder_8 = ((path_7) => ((value_8) => index(7, decoder_7, path_7, value_8)));\n                                return (path_8) => ((value_9) => andThen((v8, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040), uncurry(2, decoder_8), path_8, value_9));\n                            }), uncurry(2, decoder_9), path_9, value_10));\n                        }), uncurry(2, decoder_10), path_10, value_11));\n                    }), uncurry(2, decoder_11), path_11, value_12));\n                }), uncurry(2, decoder_12), path_12, value_13));\n            }), uncurry(2, decoder_13), path_13, value_14));\n        }), uncurry(2, decoder_14), path_14, value_15));\n    }), uncurry(2, decoder_15), path_15, value_16));\n}\n\nfunction toMap(xs) {\n    return ofSeq(xs);\n}\n\nfunction toSet(xs) {\n    return ofSeq_1(xs, {\n        Compare: (x, y) => compare(x, y),\n    });\n}\n\nfunction autoObject(decoderInfos, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return foldBack(uncurry(2, (tupledArg) => {\n            const name = tupledArg[0];\n            return (acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), tupledArg[1]((path + \".\") + name)(value_1[name])) : acc);\n        }), decoderInfos, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return fold_2((acc, name) => {\n            if (acc.tag === 0) {\n                const matchValue = keyDecoder(path, name);\n                if (matchValue.tag === 0) {\n                    const _arg1 = valueDecoder((path + \".\") + name, value_1[name]);\n                    if (_arg1.tag === 0) {\n                        return new FSharpResult$2(0, cons([matchValue.fields[0], _arg1.fields[0]], acc.fields[0]));\n                    }\n                    else {\n                        return new FSharpResult$2(1, _arg1.fields[0]);\n                    }\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), Object.keys(value_1));\n    }\n}\n\nfunction mixedArray(msg, decoders, path, values) {\n    let arg30, arg10;\n    if (decoders.length !== values.length) {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, (arg30 = (values.length | 0), (arg10 = (decoders.length | 0), toText(printf(\"Expected %i %s but got %i\"))(arg10)(msg)(arg30))))]);\n    }\n    else {\n        return foldBack2(uncurry(3, mapCurriedArgs((value_1) => ((decoder) => ((acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), decoder(path, value_1)) : acc))), [0, [0, 2], 0])), values, decoders, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\n    const uci = tryFind((x) => (name_3(x) === name), getUnionCases(t, true));\n    if (uci != null) {\n        const uci_1 = uci;\n        if (values.length === 0) {\n            return new FSharpResult$2(0, makeUnion_1(uci_1, [], true));\n        }\n        else {\n            return Result_Map((values_1) => makeUnion_1(uci_1, toArray(values_1), true), mixedArray(\"union fields\", map_2((fi) => autoDecoder(extra, caseStrategy, false, fi[1]), getUnionCaseFields(uci_1)), path, values));\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, ((\"Cannot find case \" + name) + \" in \") + fullName(t))]);\n    }\n}\n\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\n    const decoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), decoderRef, extra);\n    let decoder;\n    if (isRecord(t, true)) {\n        const decoders = map_2((fi) => [Util_Casing_convert(caseStrategy, name_3(fi)), autoDecoder(extra_1, caseStrategy, false, fi[1])], getRecordElements(t, true));\n        decoder = ((path) => ((value_1) => Result_Map((xs) => makeRecord(t, toArray(xs), true), autoObject(decoders, path, value_1))));\n    }\n    else if (isUnion(t, true)) {\n        decoder = ((path_1) => ((value_2) => {\n            if ((typeof value_2) === \"string\") {\n                return makeUnion(extra_1, caseStrategy, t, value_2, path_1, []);\n            }\n            else if (Array.isArray(value_2)) {\n                const values = value_2;\n                return makeUnion(extra_1, caseStrategy, t, values[0], path_1, values.slice(1, values.length));\n            }\n            else {\n                return new FSharpResult$2(1, [path_1, new ErrorReason(0, \"a string or array\", value_2)]);\n            }\n        }));\n    }\n    else if (isOptional) {\n        decoder = ((path_2) => ((value_3) => (new FSharpResult$2(1, [path_2, new ErrorReason(2, \"an extra coder for \" + fullName(t), value_3)]))));\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    decoderRef.contents = decoder;\n    return decoder;\n}\n\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\n    let decoder_15;\n    const fullname = fullName(t);\n    const matchValue = tryFind_1(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const decoder = autoDecoder(extra, caseStrategy, false, getElementType(t));\n            return (path_1) => ((value_2) => array(uncurry(2, decoder), path_1, value_2));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (path_2) => ((value_4) => {\n                    const t_2 = t;\n                    const path_3 = path_2;\n                    const value_5 = value_4;\n                    const matchValue_1 = sbyte(path_3)(value_5);\n                    if (matchValue_1.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_1.fields[0]);\n                    }\n                    else {\n                        const enumValue = matchValue_1.fields[0];\n                        return contains(enumValue, getEnumValues(t_2), {\n                            Equals: (x, y) => (x === y),\n                            GetHashCode: (x) => numberHash(x),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_2, enumValue.toString()))) : (new FSharpResult$2(1, [path_3, new ErrorReason(1, fullName(t_2), value_5, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Byte\") {\n                return (path_4) => ((value_7) => {\n                    const t_3 = t;\n                    const path_5 = path_4;\n                    const value_8 = value_7;\n                    const matchValue_2 = byte(path_5)(value_8);\n                    if (matchValue_2.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_2.fields[0]);\n                    }\n                    else {\n                        const enumValue_1 = matchValue_2.fields[0];\n                        return contains(enumValue_1, getEnumValues(t_3), {\n                            Equals: (x_1, y_1) => (x_1 === y_1),\n                            GetHashCode: (x_1) => numberHash(x_1),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_3, enumValue_1.toString()))) : (new FSharpResult$2(1, [path_5, new ErrorReason(1, fullName(t_3), value_8, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int16\") {\n                return (path_6) => ((value_10) => {\n                    const t_4 = t;\n                    const path_7 = path_6;\n                    const value_11 = value_10;\n                    const matchValue_3 = int16(path_7)(value_11);\n                    if (matchValue_3.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_3.fields[0]);\n                    }\n                    else {\n                        const enumValue_2 = matchValue_3.fields[0];\n                        return contains(enumValue_2, getEnumValues(t_4), {\n                            Equals: (x_2, y_2) => (x_2 === y_2),\n                            GetHashCode: (x_2) => numberHash(x_2),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_4, int16ToString(enumValue_2)))) : (new FSharpResult$2(1, [path_7, new ErrorReason(1, fullName(t_4), value_11, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (path_8) => ((value_13) => {\n                    const t_5 = t;\n                    const path_9 = path_8;\n                    const value_14 = value_13;\n                    const matchValue_4 = uint16(path_9)(value_14);\n                    if (matchValue_4.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_4.fields[0]);\n                    }\n                    else {\n                        const enumValue_3 = matchValue_4.fields[0];\n                        return contains(enumValue_3, getEnumValues(t_5), {\n                            Equals: (x_3, y_3) => (x_3 === y_3),\n                            GetHashCode: (x_3) => numberHash(x_3),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_5, enumValue_3.toString()))) : (new FSharpResult$2(1, [path_9, new ErrorReason(1, fullName(t_5), value_14, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int32\") {\n                return (path_10) => ((value_16) => {\n                    const t_6 = t;\n                    const path_11 = path_10;\n                    const value_17 = value_16;\n                    const matchValue_5 = int(path_11)(value_17);\n                    if (matchValue_5.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_5.fields[0]);\n                    }\n                    else {\n                        const enumValue_4 = matchValue_5.fields[0];\n                        return contains(enumValue_4, getEnumValues(t_6), {\n                            Equals: (x_4, y_4) => (x_4 === y_4),\n                            GetHashCode: (x_4) => numberHash(x_4),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_6, int32ToString(enumValue_4)))) : (new FSharpResult$2(1, [path_11, new ErrorReason(1, fullName(t_6), value_17, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (path_12) => ((value_19) => {\n                    const t_7 = t;\n                    const path_13 = path_12;\n                    const value_20 = value_19;\n                    const matchValue_6 = uint32(path_13)(value_20);\n                    if (matchValue_6.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_6.fields[0]);\n                    }\n                    else {\n                        const enumValue_5 = matchValue_6.fields[0];\n                        return contains(enumValue_5, getEnumValues(t_7), {\n                            Equals: (x_5, y_5) => (x_5 === y_5),\n                            GetHashCode: (x_5) => numberHash(x_5),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_7, enumValue_5.toString()))) : (new FSharpResult$2(1, [path_13, new ErrorReason(1, fullName(t_7), value_20, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra decoder.\\n                    \"))(arg10);\n                return (arg20) => {\n                    const clo3 = clo2(arg20);\n                    return (arg30) => clo3(arg30);\n                };\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const decoders = map_2((t_8) => autoDecoder(extra, caseStrategy, false, t_8), getTupleElements(t));\n                return (path_14) => ((value_21) => (Array.isArray(value_21) ? Result_Map((xs) => makeTuple(toArray(xs), t), mixedArray(\"tuple elements\", decoders, path_14, value_21)) : (new FSharpResult$2(1, [path_14, new ErrorReason(0, \"an array\", value_21)]))));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const decoder_13 = autoDecoder(extra, caseStrategy, true, getGenerics(t)[0]);\n                    return (path_15) => ((value_22) => option(uncurry(2, decoder_13), path_15, value_22));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\n                    const decoder_14 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_16) => ((value_23) => list(uncurry(2, decoder_14), path_16, value_23));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    const valueDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[1]);\n                    let d1;\n                    const decoders_1 = ofArray([(path_17) => ((value_24) => autoObject2(uncurry(2, keyDecoder), uncurry(2, valueDecoder), path_17, value_24)), (decoder_15 = tuple2(uncurry(2, keyDecoder), uncurry(2, valueDecoder)), (path_18) => ((value_25) => list(uncurry(2, decoder_15), path_18, value_25)))]);\n                    d1 = ((path_19) => ((value_26) => oneOf(decoders_1, path_19, value_26)));\n                    return (path_20) => ((value_28) => map((ar) => toMap(ar), uncurry(2, d1), path_20, value_28));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\n                    const decoder_16 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_21) => ((value_29) => {\n                        const matchValue_7 = array(uncurry(2, decoder_16), path_21, value_29);\n                        return (matchValue_7.tag === 0) ? (new FSharpResult$2(0, toSet(matchValue_7.fields[0]))) : (new FSharpResult$2(1, matchValue_7.fields[0]));\n                    });\n                }\n                else {\n                    return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (path_22) => ((value_31) => bool(path_22, value_31));\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return (path_23) => ((value_32) => unit(path_23, value_32));\n        }\n        else if (fullname === \"System.String\") {\n            return (path_24) => ((value_33) => string(path_24, value_33));\n        }\n        else if (fullname === \"System.SByte\") {\n            return sbyte;\n        }\n        else if (fullname === \"System.Byte\") {\n            return byte;\n        }\n        else if (fullname === \"System.Int16\") {\n            return int16;\n        }\n        else if (fullname === \"System.UInt16\") {\n            return uint16;\n        }\n        else if (fullname === \"System.Int32\") {\n            return int;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return uint32;\n        }\n        else if (fullname === \"System.Double\") {\n            return (path_25) => ((value_34) => float(path_25, value_34));\n        }\n        else if (fullname === \"System.Single\") {\n            return (path_26) => ((value_35) => float32(path_26, value_35));\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (path_27) => ((value_36) => datetime(path_27, value_36));\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (path_28) => ((value_37) => datetimeOffset(path_28, value_37));\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (path_29) => ((value_38) => timespan(path_29, value_38));\n        }\n        else if (fullname === \"System.Guid\") {\n            return (path_30) => ((value_39) => guid(path_30, value_39));\n        }\n        else if (fullname === \"System.Object\") {\n            return (_arg1_6) => ((v) => (new FSharpResult$2(0, v)));\n        }\n        else {\n            return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n        }\n    }\n    else {\n        const decoderRef = matchValue;\n        return (path) => ((value_1) => decoderRef.contents(path)(value_1));\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[1])), extra.Coders);\n    }\n    else {\n        return empty_1();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Decode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateDecoderCached_7848D058(caseStrategy, extra, resolver) {\n    let y_1, y;\n    const t = value_40(resolver).ResolveType();\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedDecoders, (y_1 = (y = fullName(t), toString_12(caseStrategy_1) + y), defaultArg(map_4((e) => e.Hash, extra), \"\") + y_1), () => autoDecoder(makeExtra(extra), caseStrategy_1, false, t));\n}\n\nexport function Auto_generateDecoder_7848D058(caseStrategy, extra, resolver) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const t = value_40(resolver).ResolveType();\n    return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n}\n\nexport function Auto_fromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\n    return fromString(uncurry(2, Auto_generateDecoder_7848D058(caseStrategy, extra, resolver)), json);\n}\n\nexport function Auto_unsafeFromString_Z5CB6BD(json, caseStrategy, extra, resolver) {\n    const matchValue = fromString(uncurry(2, Auto_generateDecoder_7848D058(caseStrategy, extra, resolver)), json);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.1.12/Choice.js\";\nimport { class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { equals, getEnumerator } from \"../fable-library.3.1.12/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\n        }\n        else {\n            return result(fn(a_1.fields[0]));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            p = (p.then((() => body(a))));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    return {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    return Promise.reject(er);\n                }\n                else {\n                    try {\n                        return Promise.resolve(f2(er));\n                    }\n                    catch (er_1) {\n                        return Promise.reject(er_1);\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    return Promise.resolve(f(er_2));\n                }\n                catch (er_3) {\n                    return Promise.reject(er_3);\n                }\n            }\n        },\n    };\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            const p_1 = Promise.resolve(p);\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { class_type, union_type, obj_type, int32_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\nimport { result } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\nimport { singleton } from \"../fable-library.3.1.12/List.js\";\n\nexport class Types_HttpRequestHeaders extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Accept\", \"Accept-Charset\", \"Accept-Encoding\", \"Accept-Language\", \"Accept-Datetime\", \"Authorization\", \"Cache-Control\", \"Connection\", \"Cookie\", \"Content-Length\", \"Content-MD5\", \"Content-Type\", \"Date\", \"Expect\", \"Forwarded\", \"From\", \"Host\", \"If-Match\", \"If-Modified-Since\", \"If-None-Match\", \"If-Range\", \"If-Unmodified-Since\", \"Max-Forwards\", \"Origin\", \"Pragma\", \"Proxy-Authorization\", \"Range\", \"Referer\", \"SOAPAction\", \"TE\", \"User-Agent\", \"Upgrade\", \"Via\", \"Warning\", \"X-Requested-With\", \"DNT\", \"X-Forwarded-For\", \"X-Forwarded-Host\", \"X-Forwarded-Proto\", \"Front-End-Https\", \"X-Http-Method-Override\", \"X-ATT-DeviceId\", \"X-Wap-Profile\", \"Proxy-Connection\", \"X-UIDH\", \"X-Csrf-Token\", \"Custom\"];\n    }\n}\n\nexport function Types_HttpRequestHeaders$reflection() {\n    return union_type(\"Fetch.Types.HttpRequestHeaders\", [], Types_HttpRequestHeaders, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"key\", string_type], [\"value\", obj_type]]]);\n}\n\nexport class Types_RequestProperties extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Method\", \"Headers\", \"Body\", \"Mode\", \"Credentials\", \"Cache\"];\n    }\n}\n\nexport function Types_RequestProperties$reflection() {\n    return union_type(\"Fetch.Types.RequestProperties\", [], Types_RequestProperties, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Fetch.Types.IHttpRequestHeaders\")]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]]]);\n}\n\nfunction errorString(response) {\n    return (((int32ToString(response.status) + \" \") + (response.statusText)) + \" for URL \") + (response.url);\n}\n\nexport function fetch$(url, init) {\n    const pr = fetch(url, keyValueList(init, 1));\n    return pr.then(((response) => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            const message = errorString(response);\n            throw (new Error(message));\n        }\n    }));\n}\n\nexport function tryFetch(url, init) {\n    return result(fetch$(url, init));\n}\n\nexport function tryOptionsRequest(url) {\n    return result(fetch$(url, singleton(new Types_RequestProperties(0, \"OPTIONS\"))));\n}\n\n","import { toString as toString_1 } from \"../fable-library.3.1.12/Decimal.js\";\nimport { Lazy, mapCurriedArgs, uncurry, getEnumerator } from \"../fable-library.3.1.12/Util.js\";\nimport { empty, map as map_3, tryFind, add, toList } from \"../fable-library.3.1.12/Map.js\";\nimport { toString as toString_2 } from \"../fable-library.3.1.12/BigInt.js\";\nimport { toString as toString_3 } from \"../fable-library.3.1.12/Date.js\";\nimport { toString as toString_4 } from \"../fable-library.3.1.12/TimeSpan.js\";\nimport { defaultArg, value as value_34, map, defaultArgWith, some } from \"../fable-library.3.1.12/Option.js\";\nimport { toString as toString_5, FSharpRef } from \"../fable-library.3.1.12/Types.js\";\nimport { class_type, getGenerics, getGenericTypeDefinition, getTupleFields, getTupleElements, isTuple, isGenericType, getEnumUnderlyingType, isEnum, getElementType, isArray, getUnionCaseFields, getUnionFields, isUnion, getRecordElements, getRecordField, name, isRecord, fullName } from \"../fable-library.3.1.12/Reflection.js\";\nimport { fill, map as map_1 } from \"../fable-library.3.1.12/Array.js\";\nimport { Util_CachedEncoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert } from \"./Types.fs.js\";\nimport { mapIndexed, map as map_2, fold } from \"../fable-library.3.1.12/Seq.js\";\nimport { toFail, printf, toText } from \"../fable-library.3.1.12/String.js\";\n\nexport function guid(value) {\n    return value;\n}\n\nexport function decimal(value) {\n    return toString_1(value);\n}\n\nexport const nil = null;\n\nexport function object(values) {\n    const o = {};\n    const enumerator = getEnumerator(values);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            o[forLoopVar[0]] = forLoopVar[1];\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return o;\n}\n\nexport function list(values) {\n    return Array.from(values);\n}\n\nexport function seq(values) {\n    return Array.from(values);\n}\n\nexport function dict(values) {\n    return object(toList(values));\n}\n\nexport function bigint(value) {\n    return toString_2(value);\n}\n\nexport function datetimeOffset(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function timespan(value) {\n    return toString_4(value);\n}\n\nexport function sbyte(value) {\n    return String(value);\n}\n\nexport function byte(value) {\n    return String(value);\n}\n\nexport function int16(value) {\n    return String(value);\n}\n\nexport function uint16(value) {\n    return String(value);\n}\n\nexport function int64(value) {\n    return String(value);\n}\n\nexport function uint64(value) {\n    return String(value);\n}\n\nexport function unit() {\n    return null;\n}\n\nexport function tuple2(enc1, enc2, v1, v2) {\n    return [enc1(v1), enc2(v2)];\n}\n\nexport function tuple3(enc1, enc2, enc3, v1, v2, v3) {\n    return [enc1(v1), enc2(v2), enc3(v3)];\n}\n\nexport function tuple4(enc1, enc2, enc3, enc4, v1, v2, v3, v4) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4)];\n}\n\nexport function tuple5(enc1, enc2, enc3, enc4, enc5, v1, v2, v3, v4, v5) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5)];\n}\n\nexport function tuple6(enc1, enc2, enc3, enc4, enc5, enc6, v1, v2, v3, v4, v5, v6) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6)];\n}\n\nexport function tuple7(enc1, enc2, enc3, enc4, enc5, enc6, enc7, v1, v2, v3, v4, v5, v6, v7) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7)];\n}\n\nexport function tuple8(enc1, enc2, enc3, enc4, enc5, enc6, enc7, enc8, v1, v2, v3, v4, v5, v6, v7, v8) {\n    return [enc1(v1), enc2(v2), enc3(v3), enc4(v4), enc5(v5), enc6(v6), enc7(v7), enc8(v8)];\n}\n\nexport function Enum_byte(value) {\n    return byte(value);\n}\n\nexport function Enum_sbyte(value) {\n    return sbyte(value);\n}\n\nexport function Enum_int16(value) {\n    return int16(value);\n}\n\nexport function Enum_uint16(value) {\n    return uint16(value);\n}\n\nexport function Enum_int(value) {\n    return value;\n}\n\nexport function Enum_uint32(value) {\n    return value;\n}\n\nexport function datetime(value) {\n    return toString_3(value, \"O\", {});\n}\n\nexport function toString(space, value) {\n    return JSON.stringify(value, uncurry(2, null), some(space));\n}\n\nexport function option(encoder) {\n    return (arg) => defaultArgWith(map(encoder, arg), () => nil);\n}\n\nfunction autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t) {\n    const encoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), encoderRef, extra);\n    let encoder;\n    if (isRecord(t, true)) {\n        const setters = map_1((fi) => {\n            const targetKey = Util_Casing_convert(caseStrategy, name(fi));\n            const encode_1 = autoEncoder(extra_1, caseStrategy, skipNullField, fi[1]);\n            return (source) => ((target) => {\n                const value = getRecordField(source, fi);\n                if ((!skipNullField) ? true : (skipNullField ? (!(value == null)) : false)) {\n                    target[targetKey]=encode_1(value);\n                }\n                return target;\n            });\n        }, getRecordElements(t, true));\n        encoder = ((source_1) => fold(uncurry(2, mapCurriedArgs((target_1) => ((set$) => set$(source_1, target_1)), [0, [0, 2]])), {}, setters));\n    }\n    else if (isUnion(t, true)) {\n        encoder = ((value_1) => {\n            const patternInput = getUnionFields(value_1, t, true);\n            const info = patternInput[0];\n            const fields = patternInput[1];\n            const matchValue = fields.length | 0;\n            if (matchValue === 0) {\n                return name(info);\n            }\n            else {\n                const len = matchValue | 0;\n                const fieldTypes = getUnionCaseFields(info);\n                const target_2 = fill(new Array(len + 1), 0, len + 1, null);\n                target_2[0] = name(info);\n                for (let i = 1; i <= len; i++) {\n                    const encode_2 = autoEncoder(extra_1, caseStrategy, skipNullField, fieldTypes[i - 1][1]);\n                    target_2[i] = encode_2(fields[i - 1]);\n                }\n                return target_2;\n            }\n        });\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto encoder for %s. Please pass an extra encoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    encoderRef.contents = encoder;\n    return encoder;\n}\n\nfunction autoEncoder(extra, caseStrategy, skipNullField, t) {\n    const fullname = fullName(t);\n    const matchValue = tryFind(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const encoder = autoEncoder(extra, caseStrategy, skipNullField, getElementType(t));\n            return (value) => seq(map_2(encoder, value));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (value_1) => sbyte(value_1);\n            }\n            else if (enumType === \"System.Byte\") {\n                return (value_2) => byte(value_2);\n            }\n            else if (enumType === \"System.Int16\") {\n                return (value_3) => int16(value_3);\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (value_4) => uint16(value_4);\n            }\n            else if (enumType === \"System.Int32\") {\n                return (value_5) => value_5;\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (value_7) => value_7;\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto encoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra encoder.\\n                    \"))(arg10);\n                return (arg20) => clo2(arg20);\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const encoders = map_1((t_2) => autoEncoder(extra, caseStrategy, skipNullField, t_2), getTupleElements(t));\n                return (value_9) => seq(mapIndexed((i, x) => encoders[i](x), getTupleFields(value_9)));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const encoder_2 = new Lazy(() => option(autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0])));\n                    return (value_10) => {\n                        if (value_10 == null) {\n                            return nil;\n                        }\n                        else {\n                            return encoder_2.Value(value_10);\n                        }\n                    };\n                }\n                else if ((fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") ? true : (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\")) {\n                    const encoder_3 = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[0]);\n                    return (value_11) => seq(map_2(encoder_3, value_11));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyType = getGenerics(t)[0];\n                    const valueEncoder = autoEncoder(extra, caseStrategy, skipNullField, getGenerics(t)[1]);\n                    if ((fullName(keyType) === \"System.String\") ? true : (fullName(keyType) === \"System.Guid\")) {\n                        return (value_12) => fold((target, _arg1) => {\n                            const activePatternResult6614 = _arg1;\n                            target[activePatternResult6614[0]]=valueEncoder(activePatternResult6614[1]);\n                            return target;\n                        }, {}, value_12);\n                    }\n                    else {\n                        let keyEncoder;\n                        const clo4 = autoEncoder(extra, caseStrategy, skipNullField, keyType);\n                        keyEncoder = ((arg40) => clo4(arg40));\n                        return (value_13) => seq(map_2((_arg2) => {\n                            const activePatternResult6618 = _arg2;\n                            return [keyEncoder(activePatternResult6618[0]), valueEncoder(activePatternResult6618[1])];\n                        }, value_13));\n                    }\n                }\n                else {\n                    return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (value_14) => value_14;\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return unit;\n        }\n        else if (fullname === \"System.String\") {\n            return (value_16) => value_16;\n        }\n        else if (fullname === \"System.SByte\") {\n            return (value_18) => sbyte(value_18);\n        }\n        else if (fullname === \"System.Byte\") {\n            return (value_19) => byte(value_19);\n        }\n        else if (fullname === \"System.Int16\") {\n            return (value_20) => int16(value_20);\n        }\n        else if (fullname === \"System.UInt16\") {\n            return (value_21) => uint16(value_21);\n        }\n        else if (fullname === \"System.Int32\") {\n            return (value_22) => value_22;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return (value_24) => value_24;\n        }\n        else if (fullname === \"System.Double\") {\n            return (value_26) => value_26;\n        }\n        else if (fullname === \"System.Single\") {\n            return (value_28) => value_28;\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (value_30) => datetime(value_30);\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (value_31) => datetimeOffset(value_31);\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (value_32) => timespan(value_32);\n        }\n        else if (fullname === \"System.Guid\") {\n            return (value_33) => guid(value_33);\n        }\n        else if (fullname === \"System.Object\") {\n            return (x_1) => x_1;\n        }\n        else {\n            return autoEncodeRecordsAndUnions(extra, caseStrategy, skipNullField, t);\n        }\n    }\n    else {\n        const encoderRef = matchValue;\n        return (v) => encoderRef.contents(v);\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[0])), extra.Coders);\n    }\n    else {\n        return empty();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Encode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateEncoderCached_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\n    let y_1, y;\n    const t = value_34(resolver).ResolveType();\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedEncoders, (y_1 = (y = fullName(t), toString_5(caseStrategy_1) + y), defaultArg(map((e) => e.Hash, extra), \"\") + y_1), () => autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t));\n}\n\nexport function Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    const skipNullField_1 = defaultArg(skipNullField, true);\n    const t = value_34(resolver).ResolveType();\n    return autoEncoder(makeExtra(extra), caseStrategy_1, skipNullField_1, t);\n}\n\nexport function Auto_toString_5A41365E(space, value, caseStrategy, extra, skipNullField, resolver) {\n    return toString(space, Auto_generateEncoder_Z127D9D79(caseStrategy, extra, skipNullField, resolver)(value));\n}\n\nexport function encode(space, value) {\n    return toString(space, value);\n}\n\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { fullName, union_type, string_type, class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\nimport { Types_RequestProperties, Types_HttpRequestHeaders } from \"../Fable.Fetch.2.1.0/Fetch.fs.js\";\nimport { ofArray, empty, append, cons } from \"../fable-library.3.1.12/List.js\";\nimport { Auto_generateEncoderCached_Z127D9D79, toString } from \"../Thoth.Json.4.0.0/Encode.fs.js\";\nimport { value as value_2, map, defaultArg } from \"../fable-library.3.1.12/Option.js\";\nimport { FSharpResult$2 } from \"../fable-library.3.1.12/Choice.js\";\nimport { int32ToString, uncurry, curry } from \"../fable-library.3.1.12/Util.js\";\nimport { fromString, Auto_generateDecoderCached_7848D058 } from \"../Thoth.Json.4.0.0/Decode.fs.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\nimport { promise } from \"../Fable.Promise.2.0.0/PromiseImpl.fs.js\";\n\nexport class FetchError extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PreparingRequestFailed\", \"DecodingFailed\", \"FetchFailed\", \"NetworkError\"];\n    }\n}\n\nexport function FetchError$reflection() {\n    return union_type(\"Thoth.Fetch.FetchError\", [], FetchError, () => [[[\"Item\", class_type(\"System.Exception\")]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Fetch.Types.Response\")]], [[\"Item\", class_type(\"System.Exception\")]]]);\n}\n\nexport function Helper_fetch(url, init) {\n    return fetch(url, keyValueList(init, 1));\n}\n\nexport function Helper_withContentTypeJson(data, headers) {\n    if (data != null) {\n        return cons(new Types_HttpRequestHeaders(11, \"application/json\"), headers);\n    }\n    else {\n        return headers;\n    }\n}\n\nexport function Helper_encode(data, caseStrategy, extra, dataResolver) {\n    return toString(0, Auto_generateEncoderCached_Z127D9D79(caseStrategy, extra, void 0, dataResolver)(data));\n}\n\nexport function Helper_withBody(data, caseStrategy, extra, dataResolver, properties) {\n    return defaultArg(map((data_1) => cons(new Types_RequestProperties(2, Helper_encode(data_1, caseStrategy, extra, dataResolver)), properties), data), properties);\n}\n\nexport function Helper_withProperties(custom, properties) {\n    return defaultArg(map((list2) => append(properties, list2), custom), properties);\n}\n\nexport function Helper_eitherUnit(responseResolver, cont) {\n    if (fullName(responseResolver.ResolveType()) === \"Microsoft.FSharp.Core.Unit\") {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return cont();\n    }\n}\n\nexport function Helper_resolve(response, caseStrategy, extra, decoder, responseResolver) {\n    const decoder_1 = defaultArg(curry(2, decoder), Auto_generateDecoderCached_7848D058(caseStrategy, extra, responseResolver));\n    let eitherUnitOr;\n    const responseResolver_1 = value_2(responseResolver);\n    eitherUnitOr = ((cont) => Helper_eitherUnit(responseResolver_1, cont));\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (((response.ok) ? PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (response.text().then(((_arg1) => (Promise.resolve(eitherUnitOr(() => {\n        const matchValue = fromString(uncurry(2, decoder_1), _arg1);\n        return (matchValue.tag === 1) ? (new FSharpResult$2(1, new FetchError(1, matchValue.fields[0]))) : (new FSharpResult$2(0, matchValue.fields[0]));\n    })))))))) : (Promise.resolve((new FSharpResult$2(1, new FetchError(2, response)))))).then(((_arg2) => (Promise.resolve(_arg2)))))));\n}\n\nexport function Helper_message(error) {\n    switch (error.tag) {\n        case 1: {\n            return \"[Thoth.Fetch] Error while decoding the response:\\n\\n\" + error.fields[0];\n        }\n        case 2: {\n            const response = error.fields[0];\n            return ((((\"[Thoth.Fetch] Request failed:\\n\\n\" + int32ToString(response.status)) + \" \") + (response.statusText)) + \" for URL \") + (response.url);\n        }\n        case 3: {\n            return \"[Thoth.Fetch] A network error occured:\\n\\n\" + error.fields[0].message;\n        }\n        default: {\n            return \"[Thoth.Fetch] Request preparation failed:\\n\\n\" + error.fields[0].message;\n        }\n    }\n}\n\nexport class Fetch {\n    constructor() {\n    }\n}\n\nexport function Fetch$reflection() {\n    return class_type(\"Thoth.Fetch.Fetch\", void 0, Fetch);\n}\n\nexport function Fetch_tryFetchAs_25B10BBE(url, decoder, data, httpMethod, properties, headers, caseStrategy, extra, responseResolver, dataResolver) {\n    let headers_2;\n    try {\n        const properties_3 = Helper_withProperties(properties, Helper_withBody(data, caseStrategy, extra, dataResolver, ofArray([new Types_RequestProperties(0, defaultArg(httpMethod, \"GET\")), (headers_2 = Helper_withContentTypeJson(data, defaultArg(headers, empty())), new Types_RequestProperties(1, keyValueList(headers_2, 0)))])));\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (Helper_fetch(url, properties_3).then(((_arg1) => (Helper_resolve(_arg1, caseStrategy, extra, decoder, responseResolver)))))));\n        return pr.then(void 0, ((arg) => (new FSharpResult$2(1, new FetchError(3, arg)))));\n    }\n    catch (exn) {\n        return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (Promise.resolve((new FSharpResult$2(1, new FetchError(0, exn)))))));\n    }\n}\n\nexport function Fetch_fetchAs_25B10BBE(url, decoder, data, httpMethod, properties, headers, caseStrategy, extra, responseResolver, dataResolver) {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (Fetch_tryFetchAs_25B10BBE(url, decoder, data, httpMethod, properties, headers, caseStrategy, extra, responseResolver, dataResolver).then(((_arg2) => {\n        const result = _arg2;\n        let response_1;\n        if (result.tag === 1) {\n            throw (new Error(Helper_message(result.fields[0])));\n        }\n        else {\n            response_1 = result.fields[0];\n        }\n        return Promise.resolve(response_1);\n    })))));\n}\n\nexport function Fetch_get_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_fetchAs_25B10BBE(url, decoder, data, void 0, properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_tryGet_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_tryFetchAs_25B10BBE(url, decoder, data, void 0, properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_post_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_fetchAs_25B10BBE(url, decoder, data, \"POST\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_tryPost_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_tryFetchAs_25B10BBE(url, decoder, data, \"POST\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_put_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_fetchAs_25B10BBE(url, decoder, data, \"PUT\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_tryPut_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_tryFetchAs_25B10BBE(url, decoder, data, \"PUT\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_patch_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_fetchAs_25B10BBE(url, decoder, data, \"PATCH\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_tryPatch_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_tryFetchAs_25B10BBE(url, decoder, data, \"PATCH\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_delete_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_fetchAs_25B10BBE(url, decoder, data, \"DELETE\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\nexport function Fetch_tryDelete_5760677E(url, data, properties, headers, caseStrategy, extra, decoder, responseResolver, dataResolver) {\n    return Fetch_tryFetchAs_25B10BBE(url, decoder, data, \"DELETE\", properties, headers, caseStrategy, extra, responseResolver, dataResolver);\n}\n\n","import { Record } from \"./.fable/fable-library.3.1.12/Types.js\";\nimport { obj_type, union_type, array_type, record_type, class_type, string_type } from \"./.fable/fable-library.3.1.12/Reflection.js\";\nimport { array, map, datetimeOffset, string, object } from \"./.fable/Thoth.Json.4.0.0/Decode.fs.js\";\nimport { parse } from \"./.fable/fable-library.3.1.12/Long.js\";\nimport { uncurry } from \"./.fable/fable-library.3.1.12/Util.js\";\nimport { FSharpResult$2 } from \"./.fable/fable-library.3.1.12/Choice.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"./.fable/Fable.Promise.2.0.0/Promise.fs.js\";\nimport { promise } from \"./.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js\";\nimport { Helper_message, Fetch_tryGet_5760677E } from \"./.fable/Thoth.Fetch.2.0.0/Fetch.fs.js\";\nimport { Types_RequestProperties } from \"./.fable/Fable.Fetch.2.1.0/Fetch.fs.js\";\nimport { ofArray } from \"./.fable/fable-library.3.1.12/List.js\";\n\nexport class MediaInfo extends Record {\n    constructor(baseUrl, mimeType, created, width, height) {\n        super();\n        this.baseUrl = baseUrl;\n        this.mimeType = mimeType;\n        this.created = created;\n        this.width = width;\n        this.height = height;\n    }\n}\n\nexport function MediaInfo$reflection() {\n    return record_type(\"Album.MediaInfo\", [], MediaInfo, () => [[\"baseUrl\", string_type], [\"mimeType\", string_type], [\"created\", class_type(\"System.DateTimeOffset\")], [\"width\", class_type(\"System.Int64\")], [\"height\", class_type(\"System.Int64\")]]);\n}\n\nconst MediaInfoDecoder = (path_7) => ((v) => object((get$_1) => (new MediaInfo(get$_1.Required.Field(\"baseUrl\", (path, value) => string(path, value)), get$_1.Required.Field(\"mimeType\", (path_1, value_1) => string(path_1, value_1)), get$_1.Required.Field(\"created\", (path_2, value_2) => datetimeOffset(path_2, value_2)), get$_1.Required.Field(\"width\", (path_4, value_5) => map((value_4) => parse(value_4, 511, false, 64), (path_3, value_3) => string(path_3, value_3), path_4, value_5)), get$_1.Required.Field(\"height\", (path_6, value_8) => map((value_7) => parse(value_7, 511, false, 64), (path_5, value_6) => string(path_5, value_6), path_6, value_8)))), path_7, v));\n\nconst ResponseDecoder = (path_3) => ((v) => object((get$_1) => {\n    const status = get$_1.Required.Field(\"status\", (path, value) => string(path, value));\n    switch (status) {\n        case \"ok\": {\n            return new FSharpResult$2(0, get$_1.Required.Field(\"value\", (path_1, value_1) => array(uncurry(2, MediaInfoDecoder), path_1, value_1)));\n        }\n        case \"error\": {\n            return new FSharpResult$2(1, get$_1.Required.Field(\"message\", (path_2, value_2) => string(path_2, value_2)));\n        }\n        default: {\n            return new FSharpResult$2(1, \"invalid response from API server\");\n        }\n    }\n}, path_3, v));\n\nexport function get$() {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (Fetch_tryGet_5760677E(\"https://script.google.com/macros/s/AKfycbwjFhMb6D76FNfvTClDQ6zgMBWQ4p0WdUJxVXzYq8F1OVszjGz0cY6FJ7Kto1WDPi_J/exec?action=images\", void 0, ofArray([new Types_RequestProperties(0, \"GET\"), new Types_RequestProperties(3, \"cors\")]), void 0, void 0, void 0, uncurry(2, ResponseDecoder), {\n        ResolveType: () => union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [array_type(MediaInfo$reflection()), string_type], FSharpResult$2, () => [[[\"ResultValue\", array_type(MediaInfo$reflection())]], [[\"ErrorValue\", string_type]]]),\n    }, {\n        ResolveType: () => obj_type,\n    }).then(((_arg1) => {\n        const response = _arg1;\n        return (response.tag === 1) ? (Promise.resolve((new FSharpResult$2(1, Helper_message(response.fields[0]))))) : (Promise.resolve(response.fields[0]));\n    })))));\n}\n\n","import { Record, Union } from \"./.fable/fable-library.3.1.12/Types.js\";\nimport { MediaInfo$reflection } from \"./Album.fs.js\";\nimport { class_type, record_type, union_type, string_type, array_type } from \"./.fable/fable-library.3.1.12/Reflection.js\";\nimport { printf, toText } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { FSharpResult$2 } from \"./.fable/fable-library.3.1.12/Choice.js\";\n\nexport class State extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Init\", \"AlbumLoading\", \"AlbumLoaded\", \"AlbumLoadFailed\"];\n    }\n}\n\nexport function State$reflection() {\n    return union_type(\"Model.State\", [], State, () => [[], [], [[\"Item\", array_type(MediaInfo$reflection())]], [[\"Item\", string_type]]]);\n}\n\nexport function State__get_AsString(this$) {\n    switch (this$.tag) {\n        case 1: {\n            return \"Album Loading\";\n        }\n        case 2: {\n            return \"Album Loaded\";\n        }\n        case 3: {\n            return toText(printf(\"Album Load Failed (%s)\"))(this$.fields[0]);\n        }\n        default: {\n            return \"Init\";\n        }\n    }\n}\n\nexport class Model extends Record {\n    constructor(state) {\n        super();\n        this.state = state;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"Model.Model\", [], Model, () => [[\"state\", State$reflection()]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ignore\", \"InitFailed\", \"LoadAlbum\", \"LoadAlbumResponse\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Model.Msg\", [], Msg, () => [[], [[\"Item1\", string_type], [\"Item2\", class_type(\"System.Exception\")]], [], [[\"Item\", union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [array_type(MediaInfo$reflection()), string_type], FSharpResult$2, () => [[[\"ResultValue\", array_type(MediaInfo$reflection())]], [[\"ErrorValue\", string_type]]])]]]);\n}\n\n","import { toString, Record, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\"), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\"), unit_type)]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { record_type, list_type, class_type, bool_type, string_type, union_type, getCaseTag, getCaseName } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Record, toString, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { stringHash, int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { defaultArg, some } from \"../fable-library.3.1.12/Option.js\";\nimport { contains, filter, append, empty, cons, fold } from \"../fable-library.3.1.12/List.js\";\nimport { join } from \"../fable-library.3.1.12/String.js\";\nimport { HTMLAttr } from \"../Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\n\nexport function Reflection_getCaseName(case$) {\n    return getCaseName(case$);\n}\n\nexport function Reflection_getCaseTag(case$) {\n    return getCaseTag(case$);\n}\n\nexport class Screen extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"All\", \"desktop\", \"tablet\", \"mobile\", \"widescreen\", \"touch\", \"fullhd\"];\n    }\n}\n\nexport function Screen$reflection() {\n    return union_type(\"Fulma.Screen\", [], Screen, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Screen_ToString_2D2414B4(screen) {\n    switch (screen.tag) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6: {\n            return \"-\" + Reflection_getCaseName(screen);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Color_IColor extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-black\", \"is-dark\", \"is-light\", \"is-white\", \"is-primary\", \"is-info\", \"is-success\", \"is-warning\", \"is-danger\", \"is-link\", \"is-black-bis\", \"is-black-ter\", \"is-grey-darker\", \"is-grey-dark\", \"is-grey\", \"is-grey-light\", \"is-grey-lighter\", \"is-white-ter\", \"is-white-bis\", \"IsCustomColor\", \"NoColor\"];\n    }\n}\n\nexport function Color_IColor$reflection() {\n    return union_type(\"Fulma.Color.IColor\", [], Color_IColor, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", string_type]], []]);\n}\n\nexport function Color_ofColor(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"is-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return Reflection_getCaseName(level);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Size_ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-small\", \"is-medium\", \"is-large\"];\n    }\n}\n\nexport function Size_ISize$reflection() {\n    return union_type(\"Fulma.Size.ISize\", [], Size_ISize, () => [[], [], []]);\n}\n\nexport class TextSize_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Is1\", \"Is2\", \"Is3\", \"Is4\", \"Is5\", \"Is6\", \"Is7\"];\n    }\n}\n\nexport function TextSize_Option$reflection() {\n    return union_type(\"Fulma.TextSize.Option\", [], TextSize_Option, () => [[], [], [], [], [], [], []]);\n}\n\nexport function TextSize_Option_ToString_Z2E0B9453(x) {\n    return int32ToString(Reflection_getCaseTag(x) + 1);\n}\n\nexport class TextAlignment_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-centered\", \"has-text-justified\", \"has-text-left\", \"has-text-right\"];\n    }\n}\n\nexport function TextAlignment_Option$reflection() {\n    return union_type(\"Fulma.TextAlignment.Option\", [], TextAlignment_Option, () => [[], [], [], []]);\n}\n\nexport class TextWeight_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-weight-light\", \"has-text-weight-normal\", \"has-text-weight-semibold\", \"has-text-weight-bold\", \"has-text-weight-medium\"];\n    }\n}\n\nexport function TextWeight_Option$reflection() {\n    return union_type(\"Fulma.TextWeight.Option\", [], TextWeight_Option, () => [[], [], [], [], []]);\n}\n\nexport class TextTransform_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-capitalized\", \"is-lowercase\", \"is-uppercase\", \"is-italic\"];\n    }\n}\n\nexport function TextTransform_Option$reflection() {\n    return union_type(\"Fulma.TextTransform.Option\", [], TextTransform_Option, () => [[], [], [], []]);\n}\n\nexport class Display_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"block\", \"flex\", \"inline\", \"inline-block\", \"inline-flex\"];\n    }\n}\n\nexport function Display_Option$reflection() {\n    return union_type(\"Fulma.Display.Option\", [], Display_Option, () => [[], [], [], [], []]);\n}\n\nexport function Display_toDisplayClass(screen, display) {\n    return (\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Display_toDisplayOnlyClass(screen, display) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return ((\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support display only.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Spacing_TypeAndDirection extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"mt\", \"mr\", \"mb\", \"ml\", \"my\", \"mx\", \"pt\", \"pr\", \"pb\", \"pl\", \"py\", \"px\"];\n    }\n}\n\nexport function Spacing_TypeAndDirection$reflection() {\n    return union_type(\"Fulma.Spacing.TypeAndDirection\", [], Spacing_TypeAndDirection, () => [[], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Spacing_Amount extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\n    }\n}\n\nexport function Spacing_Amount$reflection() {\n    return union_type(\"Fulma.Spacing.Amount\", [], Spacing_Amount, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Spacing_toSpacingClass(typ, amount) {\n    return (Reflection_getCaseName(typ) + \"-\") + Reflection_getCaseName(amount);\n}\n\nexport function Modifier_ofBackground(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-background-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-background-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofText(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-text-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-text-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofInvisible(screen) {\n    return \"is-invisible\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofHidden(screen) {\n    return \"is-hidden\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofInvisibleOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-invisible\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofHiddenOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-hidden\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Modifier_IModifier extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BackgroundColor\", \"TextColor\", \"TextWeight\", \"TextSize\", \"TextSizeOnly\", \"TextAlignment\", \"TextAlignmentOnly\", \"TextTransform\", \"Display\", \"DisplayOnly\", \"is-clearfix\", \"is-pulled-left\", \"is-pulled-right\", \"is-marginless\", \"is-paddingless\", \"is-overlay\", \"is-clipped\", \"is-radiusless\", \"is-shadowless\", \"is-unselectable\", \"is-relative\", \"IsInvisible\", \"IsHidden\", \"IsInvisibleOnly\", \"IsHiddenOnly\", \"IsSrOnly\", \"IsScreenReaderOnly\", \"Spacing\"];\n    }\n}\n\nexport function Modifier_IModifier$reflection() {\n    return union_type(\"Fulma.Modifier.IModifier\", [], Modifier_IModifier, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Color_IColor$reflection()]], [[\"Item\", TextWeight_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item\", TextTransform_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [], [], [], [], [], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [], [], [[\"Item1\", Spacing_TypeAndDirection$reflection()], [\"Item2\", Spacing_Amount$reflection()]]]);\n}\n\nexport function Modifier_parseModifiers(options) {\n    return fold((result, option) => {\n        let screen_3, screen_7;\n        switch (option.tag) {\n            case 1: {\n                return cons(Modifier_ofText(option.fields[0]), result);\n            }\n            case 2: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 3: {\n                return cons((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 4: {\n                return cons((screen_3 = option.fields[0], (screen_3.tag === 2) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 1) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 4) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_3))), \"\")))), result);\n            }\n            case 5: {\n                return cons(Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 6: {\n                return cons((screen_7 = option.fields[0], (screen_7.tag === 2) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 1) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 4) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_7))), \"\")))), result);\n            }\n            case 7: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 8: {\n                return cons(Display_toDisplayClass(option.fields[0], option.fields[1]), result);\n            }\n            case 9: {\n                return cons(Display_toDisplayOnlyClass(option.fields[0], option.fields[1]), result);\n            }\n            case 21: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisible(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 23: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisibleOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 22: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHidden(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 24: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHiddenOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 25:\n            case 26: {\n                return cons(\"is-sr-only\", result);\n            }\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20: {\n                return cons(Reflection_getCaseName(option), result);\n            }\n            case 27: {\n                return cons(Spacing_toSpacingClass(option.fields[0], option.fields[1]), result);\n            }\n            default: {\n                return cons(Modifier_ofBackground(option.fields[0]), result);\n            }\n        }\n    }, empty(), options);\n}\n\nexport class Common_GenericOption extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Common_GenericOption$reflection() {\n    return union_type(\"Fulma.Common.GenericOption\", [], Common_GenericOption, () => [[[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Common_GenericOptions extends Record {\n    constructor(Props, Classes, RemovedClasses) {\n        super();\n        this.Props = Props;\n        this.Classes = Classes;\n        this.RemovedClasses = RemovedClasses;\n    }\n}\n\nexport function Common_GenericOptions$reflection() {\n    return record_type(\"Fulma.Common.GenericOptions\", [], Common_GenericOptions, () => [[\"Props\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))], [\"Classes\", list_type(string_type)], [\"RemovedClasses\", list_type(string_type)]]);\n}\n\nexport function Common_GenericOptions_get_Empty() {\n    return new Common_GenericOptions(empty(), empty(), empty());\n}\n\nexport function Common_GenericOptions_Parse_9AE2F7C(options, parser, baseClass, baseProps) {\n    const result = fold(parser, Common_GenericOptions_get_Empty(), options);\n    const result_1 = (baseClass == null) ? result : Common_GenericOptions__AddClass_Z721C83C5(result, baseClass);\n    if (baseProps == null) {\n        return result_1;\n    }\n    else {\n        return Common_GenericOptions__AddProps_416C4D0B(result_1, baseProps);\n    }\n}\n\nexport function Common_GenericOptions__AddProp_7BFEDA81(this$, prop) {\n    return new Common_GenericOptions(cons(prop, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddProps_416C4D0B(this$, props) {\n    return new Common_GenericOptions(append(props, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, cons(cl, this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__RemoveClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, this$.Classes, cons(cl, this$.RemovedClasses));\n}\n\nexport function Common_GenericOptions__AddCaseName_1505(this$, case$) {\n    return Common_GenericOptions__AddClass_Z721C83C5(this$, Reflection_getCaseName(case$));\n}\n\nexport function Common_GenericOptions__AddModifiers_5BB435D5(this$, modifiers) {\n    return new Common_GenericOptions(this$.Props, append(Modifier_parseModifiers(modifiers), this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z6D3CD4B7(this$, el, children) {\n    const children_1 = defaultArg(children, empty());\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props), children_1);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z46A53D36(this$, el) {\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props));\n}\n\nexport function Common_parseOptions(result, option) {\n    switch (option.tag) {\n        case 0: {\n            return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n        }\n        case 2: {\n            return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n        }\n        default: {\n            return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n        }\n    }\n}\n\nexport function Common_Helpers_classes(std, options, booleans) {\n    return new HTMLAttr(64, fold((complete_1, tupledArg) => {\n        if (tupledArg[1]) {\n            return (complete_1 + \" \") + tupledArg[0];\n        }\n        else {\n            return complete_1;\n        }\n    }, fold((complete, option) => {\n        if (option == null) {\n            return complete;\n        }\n        else {\n            return (complete + \" \") + option;\n        }\n    }, std, options), booleans));\n}\n\nexport function Text_p(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"p\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_div(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_span(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { Common_parseOptions, Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Color_ofColor, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { union_type, list_type, class_type, string_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-bold\", \"is-medium\", \"is-large\", \"is-halfheight\", \"is-fullheight-with-navbar\", \"is-fullheight\", \"Color\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Hero.Option\", [], Option, () => [[], [], [], [], [], [], [[\"Item\", Color_IColor$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function hero(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 2:\n            case 3:\n            case 5:\n            case 4:\n            case 0: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 8: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 9: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"hero\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport function head(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-head\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function body(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-body\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function foot(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-foot\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function video(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-video\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function buttons(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-buttons\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Screen_ToString_2D2414B4, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Screen$reflection, Reflection_getCaseName } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { contains } from \"../../fable-library.3.1.12/List.js\";\nimport { stringHash } from \"../../fable-library.3.1.12/Util.js\";\nimport { printf, toText } from \"../../fable-library.3.1.12/String.js\";\nimport { some } from \"../../fable-library.3.1.12/Option.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Columns.ISize\", [], ISize, () => [[], [], [], [], [], [], [], []]);\n}\n\nexport function ISize_ToString_2283FB3F(x) {\n    return Reflection_getCaseName(x);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-centered\", \"is-vcentered\", \"is-multiline\", \"is-gapless\", \"is-grid\", \"is-mobile\", \"is-desktop\", \"IsGap\", \"IsGapOnly\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Columns.Option\", [], Option, () => [[], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function columns(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let screen_4, size_4, x_2, arg30, arg20, arg10, screen_5, size_5, x_3, arg30_1, arg20_1, arg10_1;\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 7: {\n                const size = option.fields[1];\n                const screen = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x, y) => (x === y),\n                    GetHashCode: (x) => stringHash(x),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n            }\n            case 8: {\n                const size_3 = option.fields[1];\n                const screen_3 = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x_1, y_1) => (x_1 === y_1),\n                    GetHashCode: (x_1) => stringHash(x_1),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), (screen_4 = screen_3, (size_4 = size_3, (screen_4.tag === 2) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 1) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 4) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : (x_2 = screen_4, (console.warn(some((arg30 = Screen_ToString_2D2414B4(x_2), (arg20 = ISize_ToString_2283FB3F(size_4), (arg10 = Screen_ToString_2D2414B4(x_2), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10)(arg20)(arg30)))))), \"\")))))));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, (screen_5 = screen_3, (size_5 = size_3, (screen_5.tag === 2) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 1) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 4) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : (x_3 = screen_5, (console.warn(some((arg30_1 = Screen_ToString_2D2414B4(x_3), (arg20_1 = ISize_ToString_2283FB3F(size_5), (arg10_1 = Screen_ToString_2D2414B4(x_3), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10_1)(arg20_1)(arg30_1)))))), \"\")))))));\n                }\n            }\n            case 10: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 9: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 11: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"columns\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Reflection_getCaseName, Modifier_IModifier$reflection, Screen$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-one-quarter\", \"is-one-third\", \"is-half\", \"is-two-thirds\", \"is-three-quarters\", \"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\", \"is-9\", \"is-10\", \"is-11\", \"is-12\", \"is-narrow\", \"is-full\", \"is-one-fifth\", \"is-two-fifths\", \"is-three-fifths\", \"is-four-fifths\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Column.ISize\", [], ISize, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Width\", \"Offset\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Column.Option\", [], Option, () => [[[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nfunction suffix(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"-desktop\";\n        }\n        case 2: {\n            return \"-tablet\";\n        }\n        case 3: {\n            return \"-mobile\";\n        }\n        case 4: {\n            return \"-widescreen\";\n        }\n        case 6: {\n            return \"-fullhd\";\n        }\n        case 5: {\n            return \"-touch\";\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function ofWidth(screen, size) {\n    return Reflection_getCaseName(size) + suffix(screen);\n}\n\nexport function ofOffset(screen, offset) {\n    const className = Reflection_getCaseName(offset);\n    return (\"is-offset-\" + className.slice(3, className.length)) + suffix(screen);\n}\n\nexport function column(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofOffset(option.fields[0], option.fields[1]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofWidth(option.fields[0], option.fields[1]));\n            }\n        }\n    }, \"column\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddProp_7BFEDA81, Common_GenericOptions__AddCaseName_1505, Reflection_getCaseName, Color_ofColor, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Size_ISize$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { union_type, string_type, lambda_type, unit_type, list_type, class_type, bool_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { DOMAttr, HTMLAttr } from \"../../Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { singleton, empty, cons, map, exists } from \"../../fable-library.3.1.12/List.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Color\", \"Size\", \"is-fullwidth\", \"is-link\", \"is-outlined\", \"is-inverted\", \"is-text\", \"is-rounded\", \"is-expanded\", \"is-hovered\", \"is-focused\", \"is-active\", \"is-loading\", \"is-static\", \"is-light\", \"Disabled\", \"Props\", \"OnClick\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Button.Option\", [], Option, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Size_ISize$reflection()]], [], [], [], [], [], [], [], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [], [[\"Item\", bool_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function btnView(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let pattern_matching_result, state;\n        switch (option.tag) {\n            case 1: {\n                pattern_matching_result = 1;\n                break;\n            }\n            case 3:\n            case 2:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 14: {\n                pattern_matching_result = 2;\n                break;\n            }\n            case 9: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 10: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 11: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 12: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 13: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 15: {\n                pattern_matching_result = 4;\n                break;\n            }\n            case 17: {\n                pattern_matching_result = 5;\n                break;\n            }\n            case 16: {\n                pattern_matching_result = 6;\n                break;\n            }\n            case 18: {\n                pattern_matching_result = 7;\n                break;\n            }\n            case 19: {\n                pattern_matching_result = 8;\n                break;\n            }\n            default: pattern_matching_result = 0}\n        switch (pattern_matching_result) {\n            case 0: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Reflection_getCaseName(option.fields[0]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                if (state) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 4: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new HTMLAttr(79, option.fields[0]));\n            }\n            case 5: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new DOMAttr(40, option.fields[0]));\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n        }\n    }, \"button\"), element, children);\n}\n\nexport function button(options, children) {\n    return btnView((props, children_1) => react.createElement(\"button\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function span(options, children) {\n    return btnView((props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function a(options, children) {\n    return btnView((props, children_1) => react.createElement(\"a\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function Input_btnInput(typ, options) {\n    if (exists((opts) => {\n        if (opts.tag === 16) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, options)) {\n        return btnView((options_1, _arg1) => react.createElement(\"input\", keyValueList(options_1, 1)), map((opts_1) => {\n            if (opts_1.tag === 16) {\n                return new Option(16, cons(new HTMLAttr(159, typ), opts_1.fields[0]));\n            }\n            else {\n                return opts_1;\n            }\n        }, options), empty());\n    }\n    else {\n        return btnView((options_2, _arg2) => react.createElement(\"input\", keyValueList(options_2, 1)), cons(new Option(16, singleton(new HTMLAttr(159, typ))), options), empty());\n    }\n}\n\nexport function Input_reset(options) {\n    return Input_btnInput(\"reset\", options);\n}\n\nexport function Input_submit(options) {\n    return Input_btnInput(\"submit\", options);\n}\n\nexport class List_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-addons\", \"is-centered\", \"is-right\", \"are-small\", \"are-medium\", \"are-large\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function List_Option$reflection() {\n    return union_type(\"Fulma.Button.List.Option\", [], List_Option, () => [[], [], [], [], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function list(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"buttons\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { defaultArg, value as value_1 } from \"../fable-library.3.1.12/Option.js\";\nimport { curry, int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { ReactElementTypeModule_memoWith } from \"./Fable.React.Helpers.fs.js\";\nimport * as react from \"react\";\n\nexport class Cache {\n    constructor() {\n    }\n}\n\nexport function Cache$reflection() {\n    return class_type(\"Fable.React.Cache\", void 0, Cache);\n}\n\nexport function Cache_$ctor() {\n    return new Cache();\n}\n\n(() => {\n    Cache.cache = (new Map());\n})();\n\nexport function Cache_GetOrAdd_Z3AD3E68D(key, valueFactory) {\n    if (Cache.cache.has(key)) {\n        return Cache.cache.get(key);\n    }\n    else {\n        const v = valueFactory(key);\n        void Cache.cache.set(key, v);\n        return v;\n    }\n}\n\nexport class FunctionComponent {\n    constructor() {\n    }\n}\n\nexport function FunctionComponent$reflection() {\n    return class_type(\"Fable.React.FunctionComponent\", void 0, FunctionComponent);\n}\n\nexport function FunctionComponent_Of_Z5A158BBF(render, displayName, memoizeWith, withKey, __callingMemberName, __callingSourceFile, __callingSourceLine) {\n    return Cache_GetOrAdd_Z3AD3E68D((value_1(__callingSourceFile) + \"#L\") + int32ToString(value_1(__callingSourceLine)), (_arg1) => {\n        const displayName_1 = defaultArg(displayName, value_1(__callingMemberName));\n        render.displayName = displayName_1;\n        let elemType;\n        if (curry(2, memoizeWith) == null) {\n            elemType = render;\n        }\n        else {\n            const memoElement = ReactElementTypeModule_memoWith(memoizeWith, render);\n            memoElement.displayName = ((\"Memo(\" + displayName_1) + \")\");\n            elemType = memoElement;\n        }\n        return (props) => {\n            let f_1;\n            return react.createElement(elemType, (withKey == null) ? props : (f_1 = withKey, (props.key = f_1(props), props)));\n        };\n    });\n}\n\n","import * as react from \"react\";\nimport { equals, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { choose, fold } from \"../fable-library.3.1.12/Seq.js\";\nimport { isNullOrEmpty } from \"../fable-library.3.1.12/String.js\";\nimport { HTMLAttr } from \"./Fable.React.Props.fs.js\";\n\nexport function ReactElementTypeModule_memo(render) {\n    return react.memo(render, uncurry(2, null));\n}\n\nexport function ReactElementTypeModule_memoWith(areEqual, render) {\n    return react.memo(render, areEqual);\n}\n\nexport function Helpers_equalsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : equals(xValue, y[key]));\n        }\n        return result;\n    }\n    else {\n        return equals(x, y);\n    }\n}\n\nexport function Helpers_memoEqualsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : (xValue === y[key]));\n        }\n        return result;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Helpers_memoBuilder(name, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memo(render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_memoBuilderWith(name, areEqual, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memoWith(areEqual, render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_opt(o) {\n    const o_1 = o;\n    if (o_1 == null) {\n        return null;\n    }\n    else {\n        return o_1;\n    }\n}\n\nexport const Helpers_nothing = null;\n\nexport function Helpers_classBaseList(baseClass, classes) {\n    return new HTMLAttr(64, fold((state, name_1) => ((state + \" \") + name_1), baseClass, choose((tupledArg) => {\n        const name = tupledArg[0];\n        if (tupledArg[1] ? (!isNullOrEmpty(name)) : false) {\n            return name;\n        }\n        else {\n            return void 0;\n        }\n    }, classes)));\n}\n\nexport function Helpers_classList(classes) {\n    return Helpers_classBaseList(\"\", classes);\n}\n\n","import { compare } from \"./Util.js\";\nimport { unfold, delay } from \"./Seq.js\";\nimport { op_Addition, fromZero } from \"./BigInt.js\";\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\n\nexport function makeRangeStepFunction(step, stop, zero, add) {\n    const stepComparedWithZero = compare(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compare(x, stop) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, add(x, step)] : (void 0);\n    };\n}\n\nexport function integralRangeStep(start, step, stop, zero, add) {\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\n    return delay(() => unfold(stepFn, start));\n}\n\nexport function rangeBigInt(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\n}\n\nexport function rangeDecimal(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\n}\n\nexport function rangeDouble(start, step, stop) {\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\n}\n\nexport function rangeInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeUInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeChar(start, stop) {\n    const intStop = stop.charCodeAt(0) | 0;\n    return delay(() => unfold((c) => {\n        if (c <= intStop) {\n            return [String.fromCharCode(c), c + 1];\n        }\n        else {\n            return void 0;\n        }\n    }, start.charCodeAt(0)));\n}\n\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.12/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.1.12/Util.js\";\nimport { some } from \"../fable-library.3.1.12/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.12/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.1.12/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.1.12/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { ofArray } from \"../fable-library.3.1.12/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.1.12/Option.js\";\nimport { printf, toText } from \"../fable-library.3.1.12/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        void view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        void view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [program.update]);\n    const view = partialApply(2, mapView, [program.view]);\n    const setState = partialApply(2, mapSetState, [program.setState]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { Record } from \"../fable-library.3.1.12/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.1.12/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\n}\n\n","import { jsOptions } from \"./.fable/fable-library.3.1.12/Util.js\";\nimport * as en from \"./locales/en.json\";\nimport * as ja from \"./locales/ja.json\";\nimport i18next from \"i18next\";\nimport i18next$002Dbrowser$002Dlanguagedetector from \"i18next-browser-languagedetector\";\nimport { Cmd_OfPromise_perform, Cmd_none, Cmd_OfPromise_attempt, Cmd_batch } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { State__get_AsString, Model, State, Msg } from \"./Model.fs.js\";\nimport { ofArray, empty, singleton } from \"./.fable/fable-library.3.1.12/List.js\";\nimport { toText, printf, toConsoleError } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { get$ } from \"./Album.fs.js\";\nimport { body, Option, hero } from \"./.fable/Fulma.2.10.0/Layouts/Hero.fs.js\";\nimport { container } from \"./.fable/Fulma.2.10.0/Layouts/Container.fs.js\";\nimport { Option as Option_1, columns } from \"./.fable/Fulma.2.10.0/Layouts/Columns.fs.js\";\nimport { Option as Option_2, ISize, column } from \"./.fable/Fulma.2.10.0/Layouts/Column.fs.js\";\nimport { Screen } from \"./.fable/Fulma.2.10.0/Common.fs.js\";\nimport { empty as empty_1, singleton as singleton_1, append, delay, toList } from \"./.fable/fable-library.3.1.12/Seq.js\";\nimport { content } from \"./.fable/Fulma.2.10.0/Elements/Content.fs.js\";\nimport * as react from \"react\";\nimport { Option as Option_3, button } from \"./.fable/Fulma.2.10.0/Elements/Button.fs.js\";\nimport { viewGoogleFontLoader } from \"./View/Misc.fs.js\";\nimport { ProgramModule_mkProgram, ProgramModule_run } from \"./.fable/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Program_withReactSynchronous } from \"./.fable/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport function initI18n() {\n    const options = {\n        returnEmptyString: false,\n        resources: jsOptions((it_1) => {\n            it_1[\"en\"]=en;\n            it_1[\"ja\"]=ja;\n        }),\n    };\n    const pr = i18next.use(i18next$002Dbrowser$002Dlanguagedetector).init(options);\n    return pr.then(((value) => {\n    }));\n}\n\nexport const initCmd = Cmd_batch(singleton(Cmd_OfPromise_attempt(initI18n, void 0, (e) => (new Msg(1, \"i18n\", e)))));\n\nexport function init(_arg1) {\n    return [new Model(new State(0)), initCmd];\n}\n\nexport function update(msg, model) {\n    const matchValue = [msg, model.state];\n    let pattern_matching_result, e, msg_1, album, msg_2;\n    if (matchValue[0].tag === 1) {\n        pattern_matching_result = 1;\n        e = matchValue[0].fields[1];\n        msg_1 = matchValue[0].fields[0];\n    }\n    else if (matchValue[0].tag === 2) {\n        if (matchValue[1].tag === 0) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1].tag === 3) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 3;\n        }\n    }\n    else if (matchValue[0].tag === 3) {\n        if (matchValue[0].fields[0].tag === 1) {\n            pattern_matching_result = 5;\n            msg_2 = matchValue[0].fields[0].fields[0];\n        }\n        else {\n            pattern_matching_result = 4;\n            album = matchValue[0].fields[0].fields[0];\n        }\n    }\n    else {\n        pattern_matching_result = 0;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [model, Cmd_none()];\n        }\n        case 1: {\n            const arg20 = e.message;\n            toConsoleError(printf(\"failed to initialize \\u0027%s\\u0027: %s\"))(msg_1)(arg20);\n            return [model, Cmd_none()];\n        }\n        case 2: {\n            return [new Model(new State(1)), Cmd_OfPromise_perform(get$, void 0, (arg0) => (new Msg(3, arg0)))];\n        }\n        case 3: {\n            return [model, Cmd_none()];\n        }\n        case 4: {\n            return [new Model(new State(2, album)), Cmd_none()];\n        }\n        case 5: {\n            return [new Model(new State(3, msg_2)), Cmd_none()];\n        }\n    }\n}\n\nfunction viewMain(model, dispatch) {\n    return hero(singleton(new Option(5)), singleton(body(empty(), singleton(container(empty(), singleton(columns(singleton(new Option_1(9, \"has-text-centered\")), singleton(column(ofArray([new Option_2(0, new Screen(0), new ISize(2)), new Option_2(1, new Screen(0), new ISize(0))]), toList(delay(() => {\n        let arg10;\n        return append(singleton_1(content(empty(), ofArray([react.createElement(\"p\", {}, i18next.t(\"Hello, world!\")), (arg10 = State__get_AsString(model.state), toText(printf(\"state: %s\"))(arg10))]))), delay(() => {\n            const matchValue = model.state;\n            switch (matchValue.tag) {\n                case 3: {\n                    return singleton_1(button(singleton(new Option_3(17, (_arg1) => {\n                        dispatch(new Msg(2));\n                    })), singleton(i18next.t(\"load\"))));\n                }\n                case 1: {\n                    return empty_1();\n                }\n                case 2: {\n                    return empty_1();\n                }\n                default: {\n                    return singleton_1(button(singleton(new Option_3(17, (_arg1) => {\n                        dispatch(new Msg(2));\n                    })), singleton(i18next.t(\"load\"))));\n                }\n            }\n        }));\n    })))))))))));\n}\n\nfunction view(model, dispatch) {\n    return react.createElement(\"div\", {}, viewGoogleFontLoader(model, dispatch), viewMain(model, dispatch));\n}\n\nProgramModule_run(Program_withReactSynchronous(\"elmish-app\", ProgramModule_mkProgram(init, (msg, model) => update(msg, model), (model_1, dispatch) => view(model_1, dispatch))));\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react$002Ddom from \"react-dom\";\nimport { uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            window.cancelAnimationFrame(lastRequest);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { union_type, string_type, list_type, class_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-fluid\", \"is-widescreen\", \"is-fullhd\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Container.Option\", [], Option, () => [[], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function container(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 5: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"container\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { Common_GenericOptions__AddCaseName_1505, Reflection_getCaseName, Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Size_ISize$reflection } from \"../Common.fs.js\";\nimport { union_type, list_type, class_type, string_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Size\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Content.Option\", [], Option, () => [[[\"Item\", Size_ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function content(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 2: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Reflection_getCaseName(option.fields[0]));\n            }\n        }\n    }, \"content\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport class Ol_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-lower-roman\", \"is-upper-roman\", \"is-lower-alpha\", \"is-upper-alpha\", \"CustomClass\", \"Modifiers\", \"Props\"];\n    }\n}\n\nexport function Ol_Option$reflection() {\n    return union_type(\"Fulma.Content.Ol.Option\", [], Ol_Option, () => [[], [], [], [], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]]]);\n}\n\nexport function Ol_ol(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 5: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }), (props_1, children_1) => react.createElement(\"ol\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { some } from \"../fable-library.3.1.12/Option.js\";\nimport Timer from \"../fable-library.3.1.12/Timer.js\";\nimport { add } from \"../fable-library.3.1.12/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed);\n    t.Enabled = true;\n    t.Start();\n}\n\n","import { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport react$002Dgoogle$002Dfont$002Dloader from \"react-google-font-loader\";\nimport { uncurry } from \"../.fable/fable-library.3.1.12/Util.js\";\n\nexport function viewGoogleFontLoader(model, dispatch) {\n    const props = {\n        fonts: [{\n            font: \"Roboto\",\n            weights: [400, \"400i\"],\n        }],\n    };\n    return FunctionComponent_Of_Z5A158BBF(react$002Dgoogle$002Dfont$002Dloader, void 0, uncurry(2, void 0), void 0, \"googleFontLoader\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/Misc.fs\", 17)(props);\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfulma_demo\"] = self[\"webpackChunkfulma_demo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [216], () => (__webpack_require__(8819)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5080)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}