{"version":3,"sources":["/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/chunk loaded","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/create fake namespace object","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Util.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Option.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Int32.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Numeric.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/lib/long.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Long.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Date.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Types.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/String.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Reflection.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Array.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/List.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/AsyncBuilder.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Choice.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/cmd.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Async.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Model.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Promise.2.0.0/Promise.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/MapUtil.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Fetch.2.2.0/Fetch.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Album.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.Props.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Common.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Hero.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Columns.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Column.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/FSharp.Core.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Seq.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Extensions.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Elements/Button.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.React.7.3.0/Fable.React.Helpers.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/PhotoGallery.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Wrappers/Rewrap.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt/n.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/lib/big.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Decimal.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt/z.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/Range.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/fable-library.3.1.12/BigInt.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/ring.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/program.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.React.3.0.1/common.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/App.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.React.3.0.1/react.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Section.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fulma.2.10.0/Layouts/Container.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/Properties.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/View/Misc.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/src/.fable/Fable.Elmish.3.1.0/prelude.fs.js","/mnt/d/Documents/codes/ghost-club.github.io/webpack/bootstrap","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/define property getters","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/global","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/hasOwnProperty shorthand","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/make namespace object","/mnt/d/Documents/codes/ghost-club.github.io/webpack/runtime/jsonp chunk loading","/mnt/d/Documents/codes/ghost-club.github.io/webpack/startup"],"names":["deferred","leafPrototypes","getProto","isArrayLike","x","Array","isArray","ArrayBuffer","isView","sameConstructor","y","Object","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","value","done","Error","Dispose","getEnumerator","o","GetEnumerator","Symbol","iterator","toIterator","en","hasNext","undefined","padWithZeros","i","length","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","id","idMap","has","set","count","get","stringHash","s","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isHashable","arrayHash","Date","getTime","dateHash","values","map","v","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","j","compareArraysWith","compare","CompareTo","isComparable","key","compareObjects","max","comparer","jsOptions","mutator","opts","WeakMap","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","Some","toJSON","String","other","some","defaultArg","opt","defaultValue","NumberStyles","symbol","toPrecision","sd","toExponential","dp","toHex","Number","wasm","WebAssembly","Instance","Module","Uint8Array","exports","e","Long","low","high","unsigned","isLong","obj","prototype","multiply","substr","toFixed","bytes","le","fromBytesLE","fromBytesBE","fromBytes","$this","hi","lo","toBytesLE","toBytesBE","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","p","indexOf","substring","radixToPower","result","size","min","parseInt","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","numBits","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Addition","LongLib","op_Multiply","op_Division","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","replace","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","callStack","self","seqToString","cons","entries","join","name","Union","fields","concat","fieldStr","withParens","unionToString","splice","tag","cases","Record","recordToJSON","recordToString","recordGetHashCode","thisNames","recordEquals","recordCompareTo","fsFormatRegExp","printf","input","cont","lastIndex","strParts","matches","strIdx","exec","matchIndex","index","push","createPrinter","continuePrint","arg","toText","formatReplacement","flags","padLength","precision","sign","toLowerCase","numericCompare","isLessThan","toUpperCase","_provider","_a","_b","_c","dateWithOffset","d","dateToStringWithOffset","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","dateToStringWithKind","dateToString","zeroFlag","minusFlag","ch","padLeft","_strParts","_matches","_result","padArg","slice","args","_padLength","delimiter","xs","from","isRight","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","t","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","gen","endsWith","assertUnion","Helpers_allocateArrayFromCons","fill","target","targetIndex","start","initialize","initializer","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","_key","c","ListEnumerator$1","it","__","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","fold","folder","state","acc","iterate","action","unitVar0","ofArray","tail_1","ofArrayWithTail","append","ys","reverse","contains","tryFindIndex","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","cancel","listener","addListener","removeListener","register","$","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","Bind","computation","binder","onSuccess","ex","protectedBind","Combine","computation1","computation2","Delay","generator","For","sequence","body","While","Return","protectedReturn","ReturnFrom","TryFinally","compensation","TryWith","catchHandler","ex2","Using","resource","guard","Zero","FSharpChoice$2","Cmd_exec","dispatch","cmd","call","Cmd_none","Cmd_OfPromise_perform","task","ofSuccess","then","arg_1","State","State__get_AsString","this$","Model","initCompleted","lang","Msg","dashify","separator","m","charAt","keyValueList","caseRule","definedCaseRule","fail","kvPair","assign","changeCase","Types_RequestProperties","get$","url","init","fetch","response","ok","message","status","statusText","errorString","_arg1","text","_arg2","Promise","resolve","JSON","parse","f1","f2","er","reject","er_1","catch","er_2","er_3","success","DOMAttr","HTMLAttr","Reflection_getCaseName","case$","Screen","Screen_ToString_2D2414B4","screen","Color_ofColor","level","TextSize_Option_ToString_Z2E0B9453","Reflection_getCaseTag","Common_GenericOptions","Props","Classes","RemovedClasses","Common_GenericOptions_Parse_9AE2F7C","options","parser","baseClass","baseProps","result_1","Common_GenericOptions__AddClass_Z721C83C5","Common_GenericOptions__AddProps_416C4D0B","Common_GenericOptions__AddProp_7BFEDA81","prop","props","cl","Common_GenericOptions__AddCaseName_1505","Common_GenericOptions__AddModifiers_5BB435D5","modifiers","option","screen_3","screen_7","typ","amount","Modifier_ofText","console","warn","display","Display_toDisplayOnlyClass","Modifier_ofInvisible","Modifier_ofInvisibleOnly","Modifier_ofHidden","Modifier_ofHiddenOnly","Modifier_ofBackground","Common_GenericOptions__ToReactElement_Z6D3CD4B7","el","children","root","node","t_2","children_1","cls","Common_parseOptions","Option","ISize_ToString_2283FB3F","ISize","suffix","x_1","SR_notEnoughElements","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_generateWhileSome","openf","compute","closef","started","curr","value_1","finish","matchValue_1","mkSeq","Enumerator_Seq_$ctor_673A07F2","ofSeq","argName","Operators_NullArg","delay","sources","outerOpt","innerOpt","finished","inner","outer","inner_1","outer_1","ie","Enumerator_concat","ar","singleton_1","toList","ofArray_1","xs_3","enumerator","xs_5","ofSeq_1","generateIndexed","create","mapping","e_1","skip","Enumerator_enumerateThenFinally","collect","block","react","button","element","pattern_matching_result","btnView","Cache","FunctionComponent_Of_Z5A158BBF","render","displayName","memoizeWith","withKey","__callingMemberName","__callingSourceFile","__callingSourceLine","valueFactory","elemType","displayName_1","memoElement","areEqual","ReactElementTypeModule_memoWith","f_1","Cache_GetOrAdd_Z3AD3E68D","viewPhotoGallery","model","setProps","className","centerMode","infinite","centerPadding","slidesToShow","dots","autoplay","arrows","lazyLoad","src","arg30","height","arg20","width","arg10","baseUrl","onLoad","mapIndexed","react$002Dslick","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","n","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_baseN","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","b","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_lt","q","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","k_mut","k","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","split","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_mulSchoolBook","BigNatModule_scaleSubInPlace","a","patternInput","patternInput_1","ad","a_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","BigNatModule_ofInt32","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","FSharpList__get_Length","BigNatModule_getSmall","P","cmp","_this","MAX_DP","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","UNDEFINED","NUMERIC","nl","test","search","round","Big","DP","RM","rm","more","xc","findIndex","xci","idx","unshift","pop","stringify","doExponential","isNonzero","isneg","yc","l","bl","bt","ri","bz","ai","al","rl","qc","qi","shift","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","prec","sqrt","NE","PE","strict","valueOf","_Big_","normalize","TypeError","Decimal","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","BigNatModule_isSmall","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigNatModule_boundInt64","rem_u","rem_s","BigNatModule_embed64","BigNatModule_ofInt64","BigInteger_get_One","BigInteger_get_Zero","zero","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","st_1","Enumerator_unfold","two","RingState$1","RingBuffer$1","Program$4","update","subscribe","view","setState","syncDispatch","ProgramModule_runWith","program","rb","reentered","apply","partialApply","msg","item","wix_1","rix","items_1","wix$0027","ix","items","RingBuffer$1__doubleSize","wix","RingBuffer$1__Push_2B595","nextMsg","msg_1","model$0027","ex_1","rix$0027","RingBuffer$1__Pop","ex_3","lists","forEach","xs_6","ex_2","LazyProps$1","equal","Components_LazyView$1","shouldComponentUpdate","nextProps","_nextState","Component","initTasks","supportedLngs","ns","fallbackLng","returnEmptyString","resources","it_1","translation","ui","translation_1","ui_1","detection","it_2","cookieDomain","cookieMinutes","i18next","i18next$002Dbrowser$002Dlanguagedetector","initCmd","all","arg0","viewMain","props_1","section","container","screen_4","size_4","x_2","screen_5","size_5","x_3","arg30_1","arg20_1","arg10_1","size_3","y_1","columns","Option_1","ofWidth","column","Option_2","Option_3","react$002Dgoogle$002Dfont$002Dloader","fonts","font","weights","hero","ProgramModule_run","tupledArg","error","ProgramModule_mkProgram","lang_1","activePatternResult7198","toConsoleError","model_1","lazyView2With","placeholderId","ProgramModule_withSetState","react$002Ddom","ProgramModule_view","document","getElementById","Program_Internal_withReactSynchronousUsing","Common_lazyView2With","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","mode","__esModule","def","getOwnPropertyNames","definition","enumerable","g","globalThis","Function","window","hasOwnProperty","toStringTag","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"mappings":"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","file":"app.75965f8451322848ba3d.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = ((totalLength + arr_1.length) | 0);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = ((totalIdx + 1) | 0);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function insertRangeInPlace(index, range, array) {\n    let index_1;\n    let i = index | 0;\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            void (index_1 = (i | 0), array.splice(index_1, 0, x));\n            i = ((i + 1) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = ((iTrue + 1) | 0);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = ((iFalse + 1) | 0);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const res = [];\n    for (let i = 0; i <= (array.length - 1); i++) {\n        const matchValue = chooser(array[i]);\n        if (matchValue != null) {\n            const y = value_2(matchValue);\n            void (res.push(y));\n        }\n    }\n    if ((typeof cons) === \"function\") {\n        return map((x) => x, res, cons);\n    }\n    else {\n        return res;\n    }\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function allPairs(xs, ys) {\n    const len1 = xs.length | 0;\n    const len2 = ys.length | 0;\n    const res = new Array((len1 * len2));\n    for (let i = 0; i <= (xs.length - 1); i++) {\n        for (let j = 0; j <= (ys.length - 1); j++) {\n            res[(i * len2) + j] = [xs[i], ys[j]];\n        }\n    }\n    return res;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = (comparer(array1[i], array2[i]) | 0);\n                i = ((i + 1) | 0);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function tryExactlyOne(array) {\n    if (array.length === 1) {\n        return some(array[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { join } from \"./String.js\";\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\n\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\n\nexport const SR_inputListWasEmpty = \"List was empty\";\n\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport class FSharpList extends Record {\n    constructor(head, tail) {\n        super();\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        const xs = this;\n        return (\"[\" + join(\"; \", xs)) + \"]\";\n    }\n    Equals(other) {\n        const xs = this;\n        if (xs === other) {\n            return true;\n        }\n        else {\n            const loop = (xs_1_mut, ys_1_mut) => {\n                loop:\n                while (true) {\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                    const matchValue = [xs_1.tail, ys_1.tail];\n                    if (matchValue[0] != null) {\n                        if (matchValue[1] != null) {\n                            const xt = matchValue[0];\n                            const yt = matchValue[1];\n                            if (equals(xs_1.head, ys_1.head)) {\n                                xs_1_mut = xt;\n                                ys_1_mut = yt;\n                                continue loop;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                    else if (matchValue[1] != null) {\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                    break;\n                }\n            };\n            return loop(xs, other);\n        }\n    }\n    GetHashCode() {\n        const xs = this;\n        const loop = (i_mut, h_mut, xs_1_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\n                const matchValue = xs_1.tail;\n                if (matchValue != null) {\n                    const t = matchValue;\n                    if (i > 18) {\n                        return h | 0;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\n                        xs_1_mut = t;\n                        continue loop;\n                    }\n                }\n                else {\n                    return h | 0;\n                }\n                break;\n            }\n        };\n        return loop(0, 0, xs) | 0;\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return Array.from(this$);\n    }\n    CompareTo(other) {\n        const xs = this;\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1.tail, ys_1.tail];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const xt = matchValue[0];\n                        const yt = matchValue[1];\n                        const c = compare(xs_1.head, ys_1.head) | 0;\n                        if (c === 0) {\n                            xs_1_mut = xt;\n                            ys_1_mut = yt;\n                            continue loop;\n                        }\n                        else {\n                            return c | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1] != null) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                break;\n            }\n        };\n        return loop(xs, other) | 0;\n    }\n    GetEnumerator() {\n        const xs = this;\n        return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const xs = this;\n        return getEnumerator(xs);\n    }\n}\n\nexport function FSharpList$reflection(gen0) {\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\n}\n\nexport class ListEnumerator$1 {\n    constructor(xs) {\n        this.xs = xs;\n        this.it = this.xs;\n        this.current = null;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        const matchValue = __.it.tail;\n        if (matchValue != null) {\n            const t = matchValue;\n            __.current = __.it.head;\n            __.it = t;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        const __ = this;\n        __.it = __.xs;\n        __.current = null;\n    }\n    Dispose() {\n    }\n}\n\nexport function ListEnumerator$1$reflection(gen0) {\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\n\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\n    return new ListEnumerator$1(xs);\n}\n\nexport function FSharpList_get_Empty() {\n    return new FSharpList(null, void 0);\n}\n\nexport function FSharpList_Cons_305B8EAC(x, xs) {\n    return new FSharpList(x, xs);\n}\n\nexport function FSharpList__get_IsEmpty(xs) {\n    return xs.tail == null;\n}\n\nexport function FSharpList__get_Length(xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                i_mut = (i + 1);\n                xs_1_mut = matchValue;\n                continue loop;\n            }\n            else {\n                return i | 0;\n            }\n            break;\n        }\n    };\n    return loop(0, xs) | 0;\n}\n\nexport function FSharpList__get_Head(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return xs.head;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Tail(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return matchValue;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                if (i === index) {\n                    return xs_1.head;\n                }\n                else {\n                    i_mut = (i + 1);\n                    xs_1_mut = matchValue;\n                    continue loop;\n                }\n            }\n            else {\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function empty() {\n    return FSharpList_get_Empty();\n}\n\nexport function cons(x, xs) {\n    return FSharpList_Cons_305B8EAC(x, xs);\n}\n\nexport function singleton(x) {\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\n\nexport function isEmpty(xs) {\n    return FSharpList__get_IsEmpty(xs);\n}\n\nexport function length(xs) {\n    return FSharpList__get_Length(xs);\n}\n\nexport function head(xs) {\n    return FSharpList__get_Head(xs);\n}\n\nexport function tryHead(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        return void 0;\n    }\n    else {\n        return some(FSharpList__get_Head(xs));\n    }\n}\n\nexport function tail(xs) {\n    return FSharpList__get_Tail(xs);\n}\n\nexport function tryLast(xs_mut) {\n    tryLast:\n    while (true) {\n        const xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return void 0;\n        }\n        else {\n            const t = FSharpList__get_Tail(xs);\n            if (FSharpList__get_IsEmpty(t)) {\n                return some(FSharpList__get_Head(xs));\n            }\n            else {\n                xs_mut = t;\n                continue tryLast;\n            }\n        }\n        break;\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const loop = (xs_1_mut, ys_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (matchValue[1]) {\n                return 1;\n            }\n            else {\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n                if (c === 0) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\n                    continue loop;\n                }\n                else {\n                    return c | 0;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs, ys) | 0;\n}\n\nexport function toArray(xs) {\n    const len = FSharpList__get_Length(xs) | 0;\n    const res = fill(new Array(len), 0, len, null);\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (!FSharpList__get_IsEmpty(xs_1)) {\n                res[i] = FSharpList__get_Head(xs_1);\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(0, xs);\n    return res;\n}\n\nexport function fold(folder, state, xs) {\n    let acc = state;\n    let xs_1 = xs;\n    while (!FSharpList__get_IsEmpty(xs_1)) {\n        acc = folder(acc, FSharpList__get_Head(xs_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n    }\n    return acc;\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function foldIndexed(folder, state, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, state, xs);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    let acc = state;\n    let xs_1 = xs;\n    let ys_1 = ys;\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n        ys_1 = FSharpList__get_Tail(ys_1);\n    }\n    return acc;\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function unfold(gen, state) {\n    const loop = (acc_mut, node_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, node = node_mut;\n            const matchValue = gen(acc);\n            if (matchValue != null) {\n                acc_mut = matchValue[1];\n                node_mut = (t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t));\n                continue loop;\n            }\n            else {\n                return node;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(state, root);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function toSeq(xs) {\n    return xs;\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = xs.length - 1; i >= 0; i--) {\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\n\nexport function ofSeq(xs) {\n    let xs_3, t;\n    if (isArrayLike(xs)) {\n        return ofArray(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        const root = FSharpList_get_Empty();\n        let node = root;\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                node = (xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t)));\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        const xs_5 = node;\n        const t_2 = FSharpList_get_Empty();\n        xs_5.tail = t_2;\n        return FSharpList__get_Tail(root);\n    }\n}\n\nexport function concat(lists) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    const action = (xs) => {\n        node = fold((acc, x) => {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }, node, xs);\n    };\n    if (isArrayLike(lists)) {\n        lists.forEach(action);\n    }\n    else if (lists instanceof FSharpList) {\n        iterate(action, lists);\n    }\n    else {\n        const enumerator = getEnumerator(lists);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    const xs_6 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_6.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scan(folder, state, xs) {\n    let xs_4, t_2;\n    const root = FSharpList_get_Empty();\n    let node;\n    const t = new FSharpList(state, void 0);\n    root.tail = t;\n    node = t;\n    let acc = state;\n    let xs_3 = xs;\n    while (!FSharpList__get_IsEmpty(xs_3)) {\n        acc = folder(acc, FSharpList__get_Head(xs_3));\n        node = (xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2)));\n        xs_3 = FSharpList__get_Tail(xs_3);\n    }\n    const xs_6 = node;\n    const t_4 = FSharpList_get_Empty();\n    xs_6.tail = t_4;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scanBack(folder, xs, state) {\n    return ofArray(scanBack_1(folder, toArray(xs), state));\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\n}\n\nexport function collect(mapping, xs) {\n    let xs_1, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    let ys = xs;\n    while (!FSharpList__get_IsEmpty(ys)) {\n        let zs = mapping(FSharpList__get_Head(ys));\n        while (!FSharpList__get_IsEmpty(zs)) {\n            node = (xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t)));\n            zs = FSharpList__get_Tail(zs);\n        }\n        ys = FSharpList__get_Tail(ys);\n    }\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = foldIndexed((i, acc, x) => {\n        const t = new FSharpList(mapping(i, x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const t = new FSharpList(mapping(x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    const root = FSharpList_get_Empty();\n    const node = fold2((acc, x, y) => {\n        const t = new FSharpList(mapping(x, y), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = (t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(0, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                zs_1_mut = FSharpList__get_Tail(zs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(root, xs, ys, zs);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapFold(mapping, state, xs) {\n    const root = FSharpList_get_Empty();\n    const patternInput_1 = fold((tupledArg, x) => {\n        let t;\n        const patternInput = mapping(tupledArg[1], x);\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\n    }, [root, state], xs);\n    const t_2 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_2;\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\n}\n\nexport function tryPick(f, xs) {\n    const loop = (xs_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else {\n                const matchValue = f(FSharpList__get_Head(xs_1));\n                if (matchValue == null) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFind(f, xs) {\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function find(f, xs) {\n    const matchValue = tryFind(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFindBack_1(f, toArray(xs));\n}\n\nexport function findBack(f, xs) {\n    const matchValue = tryFindBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(f, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (f(FSharpList__get_Head(xs_1))) {\n                return i;\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, toArray(xs));\n}\n\nexport function findIndexBack(f, xs) {\n    const matchValue = tryFindIndexBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryItem(n, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (i === n) {\n                return some(FSharpList__get_Head(xs_1));\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function item(n, xs) {\n    return FSharpList__get_Item_Z524259A4(xs, n);\n}\n\nexport function filter(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        if (f(x)) {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }\n        else {\n            return acc;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function partition(f, xs) {\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n    const root2 = patternInput[1];\n    const root1 = patternInput[0];\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => {\n            let t, t_2;\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\n        };\n    }), [root1, root2], xs);\n    const t_4 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_4;\n    const t_5 = FSharpList_get_Empty();\n    patternInput_1[1].tail = t_5;\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\n\nexport function choose(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const t = new FSharpList(value_1(matchValue), void 0);\n            acc.tail = t;\n            return t;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function contains(value, xs, eq) {\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\n}\n\nexport function initialize(n, f) {\n    let xs, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    for (let i = 0; i <= (n - 1); i++) {\n        node = (xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t)));\n    }\n    const xs_2 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_2.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return fold(f, head(xs), tail(xs));\n    }\n}\n\nexport function reduceBack(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return foldBack(f, tail(xs), head(xs));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f, xs) {\n    return tryFindIndex(f, xs) != null;\n}\n\nexport function exists2(f_mut, xs_mut, ys_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1]) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1]) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    xs_mut = FSharpList__get_Tail(xs);\n                    ys_mut = FSharpList__get_Tail(ys);\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sortWith(comparer, xs) {\n    const arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, toArray(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\n}\n\nexport function allPairs(xs, ys) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    iterate((x) => {\n        iterate((y) => {\n            let xs_1, t;\n            node = (xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t)));\n        }, ys);\n    }, xs);\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function skip(count_mut, xs_mut) {\n    skip:\n    while (true) {\n        const count = count_mut, xs = xs_mut;\n        if (count <= 0) {\n            return xs;\n        }\n        else if (FSharpList__get_IsEmpty(xs)) {\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n        }\n        else {\n            count_mut = (count - 1);\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skip;\n        }\n        break;\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return xs;\n        }\n        else if (!predicate(FSharpList__get_Head(xs))) {\n            return xs;\n        }\n        else {\n            predicate_mut = predicate;\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skipWhile;\n        }\n        break;\n    }\n}\n\nexport function take(count, xs) {\n    if (count < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\n    }\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function takeWhile(predicate, xs) {\n    const loop = (acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function truncate(count, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function getSlice(startIndex, endIndex, xs) {\n    const len = length(xs) | 0;\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\n    if (startIndex_1 < 0) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\n    }\n    else if (endIndex_1 >= len) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\n    }\n    else if (endIndex_1 < startIndex_1) {\n        return FSharpList_get_Empty();\n    }\n    else {\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\n    }\n}\n\nexport function splitAt(index, xs) {\n    if (index < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\n    }\n    if (index > FSharpList__get_Length(xs)) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    return [take(index, xs), skip(index, xs)];\n}\n\nexport function exactlyOne(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n        return FSharpList__get_Head(xs);\n    }\n    else {\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\n        return some(FSharpList__get_Head(xs));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return ofArray(pairwise_1(toArray(xs)));\n}\n\nexport function windowed(windowSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\n}\n\nexport function transpose(lists) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.12/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.12/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.12/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w))));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { Record, Union } from \"./.fable/fable-library.3.1.12/Types.js\";\nimport { record_type, bool_type, union_type, string_type, array_type, class_type } from \"./.fable/fable-library.3.1.12/Reflection.js\";\nimport { printf, toText } from \"./.fable/fable-library.3.1.12/String.js\";\n\nexport class State extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Init\", \"AlbumLoading\", \"AlbumLoaded\", \"AlbumLoadFailed\"];\n    }\n}\n\nexport function State$reflection() {\n    return union_type(\"Model.State\", [], State, () => [[], [], [[\"Item\", array_type(class_type(\"Album.IMediaInfo\"))]], [[\"Item\", string_type]]]);\n}\n\nexport function State__get_AsString(this$) {\n    switch (this$.tag) {\n        case 1: {\n            return \"Album Loading\";\n        }\n        case 2: {\n            return \"Album Loaded\";\n        }\n        case 3: {\n            return toText(printf(\"Album Load Failed (%s)\"))(this$.fields[0]);\n        }\n        default: {\n            return \"Init\";\n        }\n    }\n}\n\nexport class Model extends Record {\n    constructor(state, initCompleted, lang) {\n        super();\n        this.state = state;\n        this.initCompleted = initCompleted;\n        this.lang = lang;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"Model.Model\", [], Model, () => [[\"state\", State$reflection()], [\"initCompleted\", bool_type], [\"lang\", string_type]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ignore\", \"InitCompleted\", \"InitFailed\", \"LoadAlbum\", \"LoadAlbumResponse\", \"SwitchLanguage\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Model.Msg\", [], Msg, () => [[], [], [[\"Item\", class_type(\"System.Exception\")]], [], [[\"Item\", class_type(\"Album.IResult\")]], [[\"Item\", string_type]]]);\n}\n\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.1.12/Choice.js\";\nimport { class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { equals, getEnumerator } from \"../fable-library.3.1.12/Util.js\";\n\nexport function reject(reason) {\n    return Promise.reject(reason);\n}\n\nexport function result(a) {\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\n}\n\nexport function mapResult(fn, a) {\n    return a.then(((result_1) => Result_Map(fn, result_1)));\n}\n\nexport function bindResult(fn, a) {\n    return a.then(((a_1) => {\n        if (a_1.tag === 1) {\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\n        }\n        else {\n            return result(fn(a_1.fields[0]));\n        }\n    }));\n}\n\nexport function mapResultError(fn, a) {\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\n}\n\nexport function tap(fn, a) {\n    return a.then(((x) => {\n        fn(x);\n        return x;\n    }));\n}\n\nexport class PromiseBuilder {\n    constructor() {\n    }\n}\n\nexport function PromiseBuilder$reflection() {\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\n}\n\nexport function PromiseBuilder_$ctor() {\n    return new PromiseBuilder();\n}\n\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\n    let p = Promise.resolve(undefined);\n    const enumerator = getEnumerator(seq);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            p = (p.then((() => body(a))));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return p;\n}\n\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\n    if (guard()) {\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\n    }\n    else {\n        return Promise.resolve(undefined);\n    }\n}\n\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\n    return p.then(((x_1) => {\n        compensation();\n        return x_1;\n    }),((er) => {\n        compensation();\n        throw er;\n    }));\n}\n\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\n    return {\n        then: (f1, f2) => {\n            try {\n                return generator().then(f1, f2);\n            }\n            catch (er) {\n                if (equals(f2, null)) {\n                    return Promise.reject(er);\n                }\n                else {\n                    try {\n                        return Promise.resolve(f2(er));\n                    }\n                    catch (er_1) {\n                        return Promise.reject(er_1);\n                    }\n                }\n            }\n        },\n        catch: (f) => {\n            try {\n                return generator().catch(f);\n            }\n            catch (er_2) {\n                try {\n                    return Promise.resolve(f(er_2));\n                }\n                catch (er_3) {\n                    return Promise.reject(er_3);\n                }\n            }\n        },\n    };\n}\n\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\n    return new Promise(((success, fail) => {\n        try {\n            const p_1 = Promise.resolve(p);\n            p_1.then(success, fail);\n        }\n        catch (er) {\n            fail(er);\n        }\n    }));\n}\n\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\n        let copyOfStruct = resource;\n        copyOfStruct.Dispose();\n    });\n}\n\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { bool_type, class_type, union_type, obj_type, int32_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\nimport { result } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\nimport { singleton } from \"../fable-library.3.1.12/List.js\";\n\nexport class Types_HttpRequestHeaders extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Accept\", \"Accept-Charset\", \"Accept-Encoding\", \"Accept-Language\", \"Accept-Datetime\", \"Authorization\", \"Cache-Control\", \"Connection\", \"Cookie\", \"Content-Length\", \"Content-MD5\", \"Content-Type\", \"Date\", \"Expect\", \"Forwarded\", \"From\", \"Host\", \"If-Match\", \"If-Modified-Since\", \"If-None-Match\", \"If-Range\", \"If-Unmodified-Since\", \"Max-Forwards\", \"Origin\", \"Pragma\", \"Proxy-Authorization\", \"Range\", \"Referer\", \"SOAPAction\", \"TE\", \"User-Agent\", \"Upgrade\", \"Via\", \"Warning\", \"X-Requested-With\", \"DNT\", \"X-Forwarded-For\", \"X-Forwarded-Host\", \"X-Forwarded-Proto\", \"Front-End-Https\", \"X-Http-Method-Override\", \"X-ATT-DeviceId\", \"X-Wap-Profile\", \"Proxy-Connection\", \"X-UIDH\", \"X-Csrf-Token\", \"Custom\"];\n    }\n}\n\nexport function Types_HttpRequestHeaders$reflection() {\n    return union_type(\"Fetch.Types.HttpRequestHeaders\", [], Types_HttpRequestHeaders, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"key\", string_type], [\"value\", obj_type]]]);\n}\n\nexport class Types_RequestProperties extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Method\", \"Headers\", \"Body\", \"Mode\", \"Credentials\", \"Cache\", \"Redirect\", \"Referrer\", \"ReferrerPolicy\", \"Integrity\", \"KeepAlive\", \"Signal\"];\n    }\n}\n\nexport function Types_RequestProperties$reflection() {\n    return union_type(\"Fetch.Types.RequestProperties\", [], Types_RequestProperties, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Fetch.Types.IHttpRequestHeaders\")]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", class_type(\"Fetch.Types.AbortSignal\")]]]);\n}\n\nfunction errorString(response) {\n    return (((int32ToString(response.status) + \" \") + (response.statusText)) + \" for URL \") + (response.url);\n}\n\nexport function fetch$(url, init) {\n    const pr = fetch(url, keyValueList(init, 1));\n    return pr.then(((response) => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            const message = errorString(response);\n            throw (new Error(message));\n        }\n    }));\n}\n\nexport function tryFetch(url, init) {\n    return result(fetch$(url, init));\n}\n\nexport function tryOptionsRequest(url) {\n    return result(fetch$(url, singleton(new Types_RequestProperties(0, \"OPTIONS\"))));\n}\n\n","import { printf, toText } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"./.fable/Fable.Promise.2.0.0/Promise.fs.js\";\nimport { promise } from \"./.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js\";\nimport { Types_RequestProperties, fetch$ } from \"./.fable/Fable.Fetch.2.2.0/Fetch.fs.js\";\nimport { ofArray } from \"./.fable/fable-library.3.1.12/List.js\";\nimport { equals } from \"./.fable/fable-library.3.1.12/Util.js\";\n\nexport function IMediaInfoModule_getOrigUrl(x) {\n    const arg30 = x.height | 0;\n    const arg20 = x.width | 0;\n    const arg10 = x.baseUrl;\n    return toText(printf(\"%s=w%d-h%d\"))(arg10)(arg20)(arg30);\n}\n\nfunction err(msg) {\n    return {\n        status: \"error\",\n        message: msg,\n    };\n}\n\nexport function get$() {\n    return PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (fetch$(\"https://script.google.com/macros/s/AKfycbwc04XnKjP8Yq-yCgw34WXxcEd06BO4Y3n2B9P65rVRcXN1qQjaXfNHXcsaXjhOd0fa/exec?action=images\", ofArray([new Types_RequestProperties(0, \"GET\"), new Types_RequestProperties(3, \"cors\")])).then(((_arg1) => (_arg1.text().then(((_arg2) => (Promise.resolve(JSON.parse(_arg2, (key, value) => (equals(key, \"created\") ? (new Date(value)) : value))))))))))));\n}\n\n","import { toString, Record, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.1.12/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\"), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\"), unit_type)]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { record_type, list_type, class_type, bool_type, string_type, union_type, getCaseTag, getCaseName } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Record, toString, Union } from \"../fable-library.3.1.12/Types.js\";\nimport { stringHash, int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { defaultArg, some } from \"../fable-library.3.1.12/Option.js\";\nimport { contains, filter, append, empty, cons, fold } from \"../fable-library.3.1.12/List.js\";\nimport { join } from \"../fable-library.3.1.12/String.js\";\nimport { HTMLAttr } from \"../Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../fable-library.3.1.12/MapUtil.js\";\n\nexport function Reflection_getCaseName(case$) {\n    return getCaseName(case$);\n}\n\nexport function Reflection_getCaseTag(case$) {\n    return getCaseTag(case$);\n}\n\nexport class Screen extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"All\", \"desktop\", \"tablet\", \"mobile\", \"widescreen\", \"touch\", \"fullhd\"];\n    }\n}\n\nexport function Screen$reflection() {\n    return union_type(\"Fulma.Screen\", [], Screen, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Screen_ToString_2D2414B4(screen) {\n    switch (screen.tag) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6: {\n            return \"-\" + Reflection_getCaseName(screen);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Color_IColor extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-black\", \"is-dark\", \"is-light\", \"is-white\", \"is-primary\", \"is-info\", \"is-success\", \"is-warning\", \"is-danger\", \"is-link\", \"is-black-bis\", \"is-black-ter\", \"is-grey-darker\", \"is-grey-dark\", \"is-grey\", \"is-grey-light\", \"is-grey-lighter\", \"is-white-ter\", \"is-white-bis\", \"IsCustomColor\", \"NoColor\"];\n    }\n}\n\nexport function Color_IColor$reflection() {\n    return union_type(\"Fulma.Color.IColor\", [], Color_IColor, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", string_type]], []]);\n}\n\nexport function Color_ofColor(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"is-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return Reflection_getCaseName(level);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Size_ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-small\", \"is-medium\", \"is-large\"];\n    }\n}\n\nexport function Size_ISize$reflection() {\n    return union_type(\"Fulma.Size.ISize\", [], Size_ISize, () => [[], [], []]);\n}\n\nexport class TextSize_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Is1\", \"Is2\", \"Is3\", \"Is4\", \"Is5\", \"Is6\", \"Is7\"];\n    }\n}\n\nexport function TextSize_Option$reflection() {\n    return union_type(\"Fulma.TextSize.Option\", [], TextSize_Option, () => [[], [], [], [], [], [], []]);\n}\n\nexport function TextSize_Option_ToString_Z2E0B9453(x) {\n    return int32ToString(Reflection_getCaseTag(x) + 1);\n}\n\nexport class TextAlignment_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-centered\", \"has-text-justified\", \"has-text-left\", \"has-text-right\"];\n    }\n}\n\nexport function TextAlignment_Option$reflection() {\n    return union_type(\"Fulma.TextAlignment.Option\", [], TextAlignment_Option, () => [[], [], [], []]);\n}\n\nexport class TextWeight_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-weight-light\", \"has-text-weight-normal\", \"has-text-weight-semibold\", \"has-text-weight-bold\", \"has-text-weight-medium\"];\n    }\n}\n\nexport function TextWeight_Option$reflection() {\n    return union_type(\"Fulma.TextWeight.Option\", [], TextWeight_Option, () => [[], [], [], [], []]);\n}\n\nexport class TextTransform_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-capitalized\", \"is-lowercase\", \"is-uppercase\", \"is-italic\"];\n    }\n}\n\nexport function TextTransform_Option$reflection() {\n    return union_type(\"Fulma.TextTransform.Option\", [], TextTransform_Option, () => [[], [], [], []]);\n}\n\nexport class Display_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"block\", \"flex\", \"inline\", \"inline-block\", \"inline-flex\"];\n    }\n}\n\nexport function Display_Option$reflection() {\n    return union_type(\"Fulma.Display.Option\", [], Display_Option, () => [[], [], [], [], []]);\n}\n\nexport function Display_toDisplayClass(screen, display) {\n    return (\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Display_toDisplayOnlyClass(screen, display) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return ((\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support display only.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Spacing_TypeAndDirection extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"mt\", \"mr\", \"mb\", \"ml\", \"my\", \"mx\", \"pt\", \"pr\", \"pb\", \"pl\", \"py\", \"px\"];\n    }\n}\n\nexport function Spacing_TypeAndDirection$reflection() {\n    return union_type(\"Fulma.Spacing.TypeAndDirection\", [], Spacing_TypeAndDirection, () => [[], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Spacing_Amount extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\n    }\n}\n\nexport function Spacing_Amount$reflection() {\n    return union_type(\"Fulma.Spacing.Amount\", [], Spacing_Amount, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Spacing_toSpacingClass(typ, amount) {\n    return (Reflection_getCaseName(typ) + \"-\") + Reflection_getCaseName(amount);\n}\n\nexport function Modifier_ofBackground(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-background-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-background-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofText(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-text-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-text-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofInvisible(screen) {\n    return \"is-invisible\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofHidden(screen) {\n    return \"is-hidden\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofInvisibleOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-invisible\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofHiddenOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-hidden\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Modifier_IModifier extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BackgroundColor\", \"TextColor\", \"TextWeight\", \"TextSize\", \"TextSizeOnly\", \"TextAlignment\", \"TextAlignmentOnly\", \"TextTransform\", \"Display\", \"DisplayOnly\", \"is-clearfix\", \"is-pulled-left\", \"is-pulled-right\", \"is-marginless\", \"is-paddingless\", \"is-overlay\", \"is-clipped\", \"is-radiusless\", \"is-shadowless\", \"is-unselectable\", \"is-relative\", \"IsInvisible\", \"IsHidden\", \"IsInvisibleOnly\", \"IsHiddenOnly\", \"IsSrOnly\", \"IsScreenReaderOnly\", \"Spacing\"];\n    }\n}\n\nexport function Modifier_IModifier$reflection() {\n    return union_type(\"Fulma.Modifier.IModifier\", [], Modifier_IModifier, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Color_IColor$reflection()]], [[\"Item\", TextWeight_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item\", TextTransform_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [], [], [], [], [], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [], [], [[\"Item1\", Spacing_TypeAndDirection$reflection()], [\"Item2\", Spacing_Amount$reflection()]]]);\n}\n\nexport function Modifier_parseModifiers(options) {\n    return fold((result, option) => {\n        let screen_3, screen_7;\n        switch (option.tag) {\n            case 1: {\n                return cons(Modifier_ofText(option.fields[0]), result);\n            }\n            case 2: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 3: {\n                return cons((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 4: {\n                return cons((screen_3 = option.fields[0], (screen_3.tag === 2) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 1) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 4) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_3))), \"\")))), result);\n            }\n            case 5: {\n                return cons(Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 6: {\n                return cons((screen_7 = option.fields[0], (screen_7.tag === 2) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 1) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 4) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_7))), \"\")))), result);\n            }\n            case 7: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 8: {\n                return cons(Display_toDisplayClass(option.fields[0], option.fields[1]), result);\n            }\n            case 9: {\n                return cons(Display_toDisplayOnlyClass(option.fields[0], option.fields[1]), result);\n            }\n            case 21: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisible(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 23: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisibleOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 22: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHidden(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 24: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHiddenOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 25:\n            case 26: {\n                return cons(\"is-sr-only\", result);\n            }\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20: {\n                return cons(Reflection_getCaseName(option), result);\n            }\n            case 27: {\n                return cons(Spacing_toSpacingClass(option.fields[0], option.fields[1]), result);\n            }\n            default: {\n                return cons(Modifier_ofBackground(option.fields[0]), result);\n            }\n        }\n    }, empty(), options);\n}\n\nexport class Common_GenericOption extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Common_GenericOption$reflection() {\n    return union_type(\"Fulma.Common.GenericOption\", [], Common_GenericOption, () => [[[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Common_GenericOptions extends Record {\n    constructor(Props, Classes, RemovedClasses) {\n        super();\n        this.Props = Props;\n        this.Classes = Classes;\n        this.RemovedClasses = RemovedClasses;\n    }\n}\n\nexport function Common_GenericOptions$reflection() {\n    return record_type(\"Fulma.Common.GenericOptions\", [], Common_GenericOptions, () => [[\"Props\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))], [\"Classes\", list_type(string_type)], [\"RemovedClasses\", list_type(string_type)]]);\n}\n\nexport function Common_GenericOptions_get_Empty() {\n    return new Common_GenericOptions(empty(), empty(), empty());\n}\n\nexport function Common_GenericOptions_Parse_9AE2F7C(options, parser, baseClass, baseProps) {\n    const result = fold(parser, Common_GenericOptions_get_Empty(), options);\n    const result_1 = (baseClass == null) ? result : Common_GenericOptions__AddClass_Z721C83C5(result, baseClass);\n    if (baseProps == null) {\n        return result_1;\n    }\n    else {\n        return Common_GenericOptions__AddProps_416C4D0B(result_1, baseProps);\n    }\n}\n\nexport function Common_GenericOptions__AddProp_7BFEDA81(this$, prop) {\n    return new Common_GenericOptions(cons(prop, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddProps_416C4D0B(this$, props) {\n    return new Common_GenericOptions(append(props, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, cons(cl, this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__RemoveClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, this$.Classes, cons(cl, this$.RemovedClasses));\n}\n\nexport function Common_GenericOptions__AddCaseName_1505(this$, case$) {\n    return Common_GenericOptions__AddClass_Z721C83C5(this$, Reflection_getCaseName(case$));\n}\n\nexport function Common_GenericOptions__AddModifiers_5BB435D5(this$, modifiers) {\n    return new Common_GenericOptions(this$.Props, append(Modifier_parseModifiers(modifiers), this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z6D3CD4B7(this$, el, children) {\n    const children_1 = defaultArg(children, empty());\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props), children_1);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z46A53D36(this$, el) {\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props));\n}\n\nexport function Common_parseOptions(result, option) {\n    switch (option.tag) {\n        case 0: {\n            return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n        }\n        case 2: {\n            return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n        }\n        default: {\n            return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n        }\n    }\n}\n\nexport function Common_Helpers_classes(std, options, booleans) {\n    return new HTMLAttr(64, fold((complete_1, tupledArg) => {\n        if (tupledArg[1]) {\n            return (complete_1 + \" \") + tupledArg[0];\n        }\n        else {\n            return complete_1;\n        }\n    }, fold((complete, option) => {\n        if (option == null) {\n            return complete;\n        }\n        else {\n            return (complete + \" \") + option;\n        }\n    }, std, options), booleans));\n}\n\nexport function Text_p(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"p\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_div(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_span(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { Common_parseOptions, Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Color_ofColor, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { union_type, list_type, class_type, string_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-bold\", \"is-medium\", \"is-large\", \"is-halfheight\", \"is-fullheight-with-navbar\", \"is-fullheight\", \"Color\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Hero.Option\", [], Option, () => [[], [], [], [], [], [], [[\"Item\", Color_IColor$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function hero(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 2:\n            case 3:\n            case 5:\n            case 4:\n            case 0: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 8: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 9: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"hero\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport function head(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-head\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function body(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-body\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function foot(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-foot\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function video(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-video\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function buttons(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"hero-buttons\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Screen_ToString_2D2414B4, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Screen$reflection, Reflection_getCaseName } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { contains } from \"../../fable-library.3.1.12/List.js\";\nimport { stringHash } from \"../../fable-library.3.1.12/Util.js\";\nimport { printf, toText } from \"../../fable-library.3.1.12/String.js\";\nimport { some } from \"../../fable-library.3.1.12/Option.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Columns.ISize\", [], ISize, () => [[], [], [], [], [], [], [], []]);\n}\n\nexport function ISize_ToString_2283FB3F(x) {\n    return Reflection_getCaseName(x);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-centered\", \"is-vcentered\", \"is-multiline\", \"is-gapless\", \"is-grid\", \"is-mobile\", \"is-desktop\", \"IsGap\", \"IsGapOnly\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Columns.Option\", [], Option, () => [[], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function columns(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let screen_4, size_4, x_2, arg30, arg20, arg10, screen_5, size_5, x_3, arg30_1, arg20_1, arg10_1;\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 7: {\n                const size = option.fields[1];\n                const screen = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x, y) => (x === y),\n                    GetHashCode: (x) => stringHash(x),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n            }\n            case 8: {\n                const size_3 = option.fields[1];\n                const screen_3 = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x_1, y_1) => (x_1 === y_1),\n                    GetHashCode: (x_1) => stringHash(x_1),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), (screen_4 = screen_3, (size_4 = size_3, (screen_4.tag === 2) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 1) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 4) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : (x_2 = screen_4, (console.warn(some((arg30 = Screen_ToString_2D2414B4(x_2), (arg20 = ISize_ToString_2283FB3F(size_4), (arg10 = Screen_ToString_2D2414B4(x_2), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10)(arg20)(arg30)))))), \"\")))))));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, (screen_5 = screen_3, (size_5 = size_3, (screen_5.tag === 2) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 1) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 4) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : (x_3 = screen_5, (console.warn(some((arg30_1 = Screen_ToString_2D2414B4(x_3), (arg20_1 = ISize_ToString_2283FB3F(size_5), (arg10_1 = Screen_ToString_2D2414B4(x_3), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10_1)(arg20_1)(arg30_1)))))), \"\")))))));\n                }\n            }\n            case 10: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 9: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 11: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"columns\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Reflection_getCaseName, Modifier_IModifier$reflection, Screen$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-one-quarter\", \"is-one-third\", \"is-half\", \"is-two-thirds\", \"is-three-quarters\", \"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\", \"is-9\", \"is-10\", \"is-11\", \"is-12\", \"is-narrow\", \"is-full\", \"is-one-fifth\", \"is-two-fifths\", \"is-three-fifths\", \"is-four-fifths\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Column.ISize\", [], ISize, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Width\", \"Offset\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Column.Option\", [], Option, () => [[[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nfunction suffix(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"-desktop\";\n        }\n        case 2: {\n            return \"-tablet\";\n        }\n        case 3: {\n            return \"-mobile\";\n        }\n        case 4: {\n            return \"-widescreen\";\n        }\n        case 6: {\n            return \"-fullhd\";\n        }\n        case 5: {\n            return \"-touch\";\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function ofWidth(screen, size) {\n    return Reflection_getCaseName(size) + suffix(screen);\n}\n\nexport function ofOffset(screen, offset) {\n    const className = Reflection_getCaseName(offset);\n    return (\"is-offset-\" + className.slice(3, className.length)) + suffix(screen);\n}\n\nexport function column(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofOffset(option.fields[0], option.fields[1]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofWidth(option.fields[0], option.fields[1]));\n            }\n        }\n    }, \"column\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\n\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\n\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\n\nexport function Enumerator_noReset() {\n    throw (new Error(SR_resetNotSupported));\n}\n\nexport function Enumerator_notStarted() {\n    throw (new Error(SR_enumerationNotStarted));\n}\n\nexport function Enumerator_alreadyFinished() {\n    throw (new Error(SR_enumerationAlreadyFinished));\n}\n\nexport class Enumerator_Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    toString() {\n        const xs = this;\n        const maxCount = 4;\n        let i = 0;\n        let str = \"seq [\";\n        const e = getEnumerator(xs);\n        try {\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                if (i > 0) {\n                    str = (str + \"; \");\n                }\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\n                i = ((i + 1) | 0);\n            }\n            if (i === maxCount) {\n                str = (str + \"; ...\");\n            }\n            return str + \"]\";\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n    GetEnumerator() {\n        const x = this;\n        return x.f();\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const x = this;\n        return x.f();\n    }\n}\n\nexport function Enumerator_Seq$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\n\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\n    return new Enumerator_Seq(f);\n}\n\nexport class Enumerator_FromFunctions$1 {\n    constructor(current, next, dispose) {\n        this.current = current;\n        this.next = next;\n        this.dispose = dispose;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        return __.next();\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        return Enumerator_noReset();\n    }\n    Dispose() {\n        const __ = this;\n        __.dispose();\n    }\n}\n\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\n\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n    return new Enumerator_FromFunctions$1(current, next, dispose);\n}\n\nexport function Enumerator_cast(e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        if (isDisposable(e)) {\n            e.Dispose();\n        }\n    });\n}\n\nexport function Enumerator_concat(sources) {\n    let outerOpt = void 0;\n    let innerOpt = void 0;\n    let started = false;\n    let finished = false;\n    let curr = void 0;\n    const finish = () => {\n        finished = true;\n        if (innerOpt != null) {\n            const inner = innerOpt;\n            try {\n                inner.Dispose();\n            }\n            finally {\n                innerOpt = (void 0);\n            }\n        }\n        if (outerOpt != null) {\n            const outer = outerOpt;\n            try {\n                outer.Dispose();\n            }\n            finally {\n                outerOpt = (void 0);\n            }\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        else if (finished) {\n            Enumerator_alreadyFinished();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        let copyOfStruct;\n        if (!started) {\n            started = true;\n        }\n        if (finished) {\n            return false;\n        }\n        else {\n            let res = void 0;\n            while (res == null) {\n                const matchValue = [outerOpt, innerOpt];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const inner_1 = matchValue[1];\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                            res = true;\n                        }\n                        else {\n                            try {\n                                inner_1.Dispose();\n                            }\n                            finally {\n                                innerOpt = (void 0);\n                            }\n                        }\n                    }\n                    else {\n                        const outer_1 = matchValue[0];\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                            innerOpt = (copyOfStruct = ie, getEnumerator(copyOfStruct));\n                        }\n                        else {\n                            finish();\n                            res = false;\n                        }\n                    }\n                }\n                else {\n                    outerOpt = getEnumerator(sources);\n                }\n            }\n            return value_1(res);\n        }\n    }, () => {\n        if (!finished) {\n            finish();\n        }\n    });\n}\n\nexport function Enumerator_enumerateThenFinally(f, e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        try {\n            e.Dispose();\n        }\n        finally {\n            f();\n        }\n    });\n}\n\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\n    let started = false;\n    let curr = void 0;\n    let state = some(openf());\n    const dispose = () => {\n        if (state != null) {\n            const x_1 = value_1(state);\n            try {\n                closef(x_1);\n            }\n            finally {\n                state = (void 0);\n            }\n        }\n    };\n    const finish = () => {\n        try {\n            dispose();\n        }\n        finally {\n            curr = (void 0);\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        if (!started) {\n            started = true;\n        }\n        if (state != null) {\n            const s = value_1(state);\n            let matchValue_1;\n            try {\n                matchValue_1 = compute(s);\n            }\n            catch (matchValue) {\n                finish();\n                throw matchValue;\n            }\n            if (matchValue_1 != null) {\n                curr = matchValue_1;\n                return true;\n            }\n            else {\n                finish();\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }, dispose);\n}\n\nexport function Enumerator_unfold(f, state) {\n    let curr = void 0;\n    let acc = state;\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (curr != null) {\n            const st = curr[1];\n            return curr[0];\n        }\n        else {\n            return Enumerator_notStarted();\n        }\n    }, () => {\n        curr = f(acc);\n        if (curr != null) {\n            const x_1 = curr[0];\n            const st_1 = curr[1];\n            acc = st_1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, () => {\n    });\n}\n\nexport function indexNotFound() {\n    throw (new Error(SR_keyNotFoundAlt));\n}\n\nexport function checkNonNull(argName, arg) {\n    if (arg == null) {\n        Operators_NullArg(argName);\n    }\n}\n\nexport function mkSeq(f) {\n    return Enumerator_Seq_$ctor_673A07F2(f);\n}\n\nexport function ofSeq(xs) {\n    checkNonNull(\"source\", xs);\n    return getEnumerator(xs);\n}\n\nexport function delay(generator) {\n    return mkSeq(() => getEnumerator(generator()));\n}\n\nexport function concat(sources) {\n    return mkSeq(() => Enumerator_concat(sources));\n}\n\nexport function unfold(generator, state) {\n    return mkSeq(() => Enumerator_unfold(generator, state));\n}\n\nexport function empty() {\n    return delay(() => (new Array(0)));\n}\n\nexport function singleton(x) {\n    return delay(() => singleton_1(x));\n}\n\nexport function ofArray(arr) {\n    return arr;\n}\n\nexport function toArray(xs) {\n    if (isArrayLike(xs)) {\n        return xs;\n    }\n    else if (xs instanceof FSharpList) {\n        return toArray_1(xs);\n    }\n    else {\n        return Array.from(xs);\n    }\n}\n\nexport function ofList(xs) {\n    return xs;\n}\n\nexport function toList(xs) {\n    if (isArrayLike(xs)) {\n        return ofArray_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        return ofSeq_1(xs);\n    }\n}\n\nexport function generate(create, compute, dispose) {\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\n}\n\nexport function generateIndexed(create, compute, dispose) {\n    return mkSeq(() => {\n        let i = -1;\n        return Enumerator_generateWhileSome(create, (x) => {\n            i = ((i + 1) | 0);\n            return compute(i, x);\n        }, dispose);\n    });\n}\n\nexport function append(xs, ys) {\n    return concat([xs, ys]);\n}\n\nexport function cast(xs) {\n    return mkSeq(() => {\n        checkNonNull(\"source\", xs);\n        return Enumerator_cast(getEnumerator(xs));\n    });\n}\n\nexport function choose(chooser, xs) {\n    return generate(() => ofSeq(xs), (e) => {\n        let curr = void 0;\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return curr;\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let c = 0;\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n            while (((c === 0) ? b1 : false) ? b2 : false) {\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\n                if (c === 0) {\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                }\n            }\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function contains(value, xs, comparer) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function enumerateFromFunctions(create, moveNext, current) {\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\n        const matchValue = x_1;\n        if (isDisposable(matchValue)) {\n            matchValue.Dispose();\n        }\n    });\n}\n\nexport function enumerateThenFinally(source, compensation) {\n    const compensation_1 = compensation;\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n        }\n        catch (matchValue) {\n            compensation_1();\n            throw matchValue;\n        }\n    });\n}\n\nexport function enumerateUsing(resource, source) {\n    const compensation = () => {\n        if (equals(resource, null)) {\n        }\n        else {\n            let copyOfStruct = resource;\n            copyOfStruct.Dispose();\n        }\n    };\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n        }\n        catch (matchValue_1) {\n            compensation();\n            throw matchValue_1;\n        }\n    });\n}\n\nexport function enumerateWhile(guard, xs) {\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\n}\n\nexport function filter(f, xs) {\n    return choose((x) => {\n        if (f(x)) {\n            return some(x);\n        }\n        else {\n            return void 0;\n        }\n    }, xs);\n}\n\nexport function exists(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function exists2(predicate, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let found = false;\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return found;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function exactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\n            }\n            else {\n                return v;\n            }\n        }\n        else {\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\n        }\n        else {\n            return void 0;\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryFind(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (predicate(c)) {\n                res = some(c);\n            }\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function find(predicate, xs) {\n    const matchValue = tryFind(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(predicate, xs) {\n    return tryFindBack_1(predicate, toArray(xs));\n}\n\nexport function findBack(predicate, xs) {\n    const matchValue = tryFindBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (i_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n                        return i;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        continue loop;\n                    }\n                }\n                else {\n                    return void 0;\n                }\n                break;\n            }\n        };\n        return loop(0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function findIndex(predicate, xs) {\n    const matchValue = tryFindIndex(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(predicate, xs) {\n    return tryFindIndexBack_1(predicate, toArray(xs));\n}\n\nexport function findIndexBack(predicate, xs) {\n    const matchValue = tryFindIndexBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function fold(folder, state, xs) {\n    const e = ofSeq(xs);\n    try {\n        let acc = state;\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return acc;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let acc = state;\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return acc;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function forAll(predicate, xs) {\n    return !exists((x) => (!predicate(x)), xs);\n}\n\nexport function forAll2(predicate, xs, ys) {\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\n}\n\nexport function tryHead(xs) {\n    if (isArrayLike(xs)) {\n        return tryHead_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryHead_2(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function head(xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function initialize(count, f) {\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\n}\n\nexport function initializeInfinite(f) {\n    return initialize(2147483647, f);\n}\n\nexport function isEmpty(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length === 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return isEmpty_1(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function tryItem(index, xs) {\n    if (isArrayLike(xs)) {\n        return tryItem_1(index, xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryItem_2(index, xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            const loop = (index_1_mut) => {\n                loop:\n                while (true) {\n                    const index_1 = index_1_mut;\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                        return void 0;\n                    }\n                    else if (index_1 === 0) {\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    }\n                    else {\n                        index_1_mut = (index_1 - 1);\n                        continue loop;\n                    }\n                    break;\n                }\n            };\n            return loop(index);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function item(index, xs) {\n    const matchValue = tryItem(index, xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function tryLast(xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    return acc;\n                }\n                else {\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    continue loop;\n                }\n                break;\n            }\n        };\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function length(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length | 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return length_1(xs) | 0;\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            let count = 0;\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                count = ((count + 1) | 0);\n            }\n            return count | 0;\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function map(mapping, xs) {\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function mapIndexed(mapping, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        const e3 = tupledArg[2];\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            try {\n                tupledArg_1[1].Dispose();\n            }\n            finally {\n                tupledArg_1[2].Dispose();\n            }\n        }\n    });\n}\n\nexport function readOnly(xs) {\n    checkNonNull(\"source\", xs);\n    return map((x) => x, xs);\n}\n\nexport function cache(xs) {\n    let cached = false;\n    const xsCache = [];\n    return delay(() => {\n        if (!cached) {\n            cached = true;\n            return map((x) => {\n                void (xsCache.push(x));\n                return x;\n            }, xs);\n        }\n        else {\n            return xsCache;\n        }\n    });\n}\n\nexport function allPairs(xs, ys) {\n    const ysCache = cache(ys);\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\n}\n\nexport function mapFold(mapping, state, xs) {\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function tryPick(chooser, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function pick(chooser, xs) {\n    const matchValue = tryPick(chooser, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function reduce(folder, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    continue loop;\n                }\n                else {\n                    return acc;\n                }\n                break;\n            }\n        };\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        else {\n            throw (new Error(SR_inputSequenceEmpty));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function reduceBack(folder, xs) {\n    const arr = toArray(xs);\n    if (arr.length > 0) {\n        return arr.reduceRight(folder);\n    }\n    else {\n        throw (new Error(SR_inputSequenceEmpty));\n    }\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reverse(xs) {\n    return delay(() => ofArray(reverse_1(toArray(xs))));\n}\n\nexport function scan(folder, state, xs) {\n    return delay(() => {\n        let acc = state;\n        return concat([singleton(state), map((x) => {\n            acc = folder(acc, x);\n            return acc;\n        }, xs)]);\n    });\n}\n\nexport function scanBack(folder, xs, state) {\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\n}\n\nexport function skip(count, xs) {\n    return mkSeq(() => {\n        const e = ofSeq(xs);\n        try {\n            for (let i = 1; i <= count; i++) {\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n                }\n            }\n            return Enumerator_enumerateThenFinally(() => {\n            }, e);\n        }\n        catch (matchValue) {\n            e.Dispose();\n            throw matchValue;\n        }\n    });\n}\n\nexport function skipWhile(predicate, xs) {\n    return delay(() => {\n        let skipped = true;\n        return filter((x) => {\n            if (skipped) {\n                skipped = predicate(x);\n            }\n            return !skipped;\n        }, xs);\n    });\n}\n\nexport function tail(xs) {\n    return skip(1, xs);\n}\n\nexport function take(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\n        if (i < count) {\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            else {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n            }\n        }\n        else {\n            return void 0;\n        }\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function takeWhile(predicate, xs) {\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function truncate(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function collect(mapping, xs) {\n    return delay(() => concat(map(mapping, xs)));\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\n}\n\nexport function windowed(windowSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\n}\n\nexport function transpose(xss) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\n}\n\nexport function sortWith(comparer, xs) {\n    return delay(() => {\n        const arr = toArray(xs);\n        arr.sort(comparer);\n        return ofArray(arr);\n    });\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\n}\n\n","import { Common_parseOptions, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7 } from \"./.fable/Fulma.2.10.0/Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"./.fable/fable-library.3.1.12/MapUtil.js\";\n\nexport function block(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"block\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddProp_7BFEDA81, Common_GenericOptions__AddCaseName_1505, Reflection_getCaseName, Color_ofColor, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Size_ISize$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { union_type, string_type, lambda_type, unit_type, list_type, class_type, bool_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { DOMAttr, HTMLAttr } from \"../../Fable.React.7.3.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\nimport { singleton, empty, cons, map, exists } from \"../../fable-library.3.1.12/List.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Color\", \"Size\", \"is-fullwidth\", \"is-link\", \"is-outlined\", \"is-inverted\", \"is-text\", \"is-rounded\", \"is-expanded\", \"is-hovered\", \"is-focused\", \"is-active\", \"is-loading\", \"is-static\", \"is-light\", \"Disabled\", \"Props\", \"OnClick\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Button.Option\", [], Option, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Size_ISize$reflection()]], [], [], [], [], [], [], [], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [], [[\"Item\", bool_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function btnView(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let pattern_matching_result, state;\n        switch (option.tag) {\n            case 1: {\n                pattern_matching_result = 1;\n                break;\n            }\n            case 3:\n            case 2:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 14: {\n                pattern_matching_result = 2;\n                break;\n            }\n            case 9: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 10: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 11: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 12: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 13: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 15: {\n                pattern_matching_result = 4;\n                break;\n            }\n            case 17: {\n                pattern_matching_result = 5;\n                break;\n            }\n            case 16: {\n                pattern_matching_result = 6;\n                break;\n            }\n            case 18: {\n                pattern_matching_result = 7;\n                break;\n            }\n            case 19: {\n                pattern_matching_result = 8;\n                break;\n            }\n            default: pattern_matching_result = 0}\n        switch (pattern_matching_result) {\n            case 0: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Reflection_getCaseName(option.fields[0]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                if (state) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 4: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new HTMLAttr(79, option.fields[0]));\n            }\n            case 5: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new DOMAttr(40, option.fields[0]));\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n        }\n    }, \"button\"), element, children);\n}\n\nexport function button(options, children) {\n    return btnView((props, children_1) => react.createElement(\"button\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function span(options, children) {\n    return btnView((props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function a(options, children) {\n    return btnView((props, children_1) => react.createElement(\"a\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function Input_btnInput(typ, options) {\n    if (exists((opts) => {\n        if (opts.tag === 16) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, options)) {\n        return btnView((options_1, _arg1) => react.createElement(\"input\", keyValueList(options_1, 1)), map((opts_1) => {\n            if (opts_1.tag === 16) {\n                return new Option(16, cons(new HTMLAttr(159, typ), opts_1.fields[0]));\n            }\n            else {\n                return opts_1;\n            }\n        }, options), empty());\n    }\n    else {\n        return btnView((options_2, _arg2) => react.createElement(\"input\", keyValueList(options_2, 1)), cons(new Option(16, singleton(new HTMLAttr(159, typ))), options), empty());\n    }\n}\n\nexport function Input_reset(options) {\n    return Input_btnInput(\"reset\", options);\n}\n\nexport function Input_submit(options) {\n    return Input_btnInput(\"submit\", options);\n}\n\nexport class List_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-addons\", \"is-centered\", \"is-right\", \"are-small\", \"are-medium\", \"are-large\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function List_Option$reflection() {\n    return union_type(\"Fulma.Button.List.Option\", [], List_Option, () => [[], [], [], [], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function list(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"buttons\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { class_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { defaultArg, value as value_1 } from \"../fable-library.3.1.12/Option.js\";\nimport { curry, int32ToString } from \"../fable-library.3.1.12/Util.js\";\nimport { ReactElementTypeModule_memoWith } from \"./Fable.React.Helpers.fs.js\";\nimport * as react from \"react\";\n\nexport class Cache {\n    constructor() {\n    }\n}\n\nexport function Cache$reflection() {\n    return class_type(\"Fable.React.Cache\", void 0, Cache);\n}\n\nexport function Cache_$ctor() {\n    return new Cache();\n}\n\n(() => {\n    Cache.cache = (new Map());\n})();\n\nexport function Cache_GetOrAdd_Z3AD3E68D(key, valueFactory) {\n    if (Cache.cache.has(key)) {\n        return Cache.cache.get(key);\n    }\n    else {\n        const v = valueFactory(key);\n        void Cache.cache.set(key, v);\n        return v;\n    }\n}\n\nexport class FunctionComponent {\n    constructor() {\n    }\n}\n\nexport function FunctionComponent$reflection() {\n    return class_type(\"Fable.React.FunctionComponent\", void 0, FunctionComponent);\n}\n\nexport function FunctionComponent_Of_Z5A158BBF(render, displayName, memoizeWith, withKey, __callingMemberName, __callingSourceFile, __callingSourceLine) {\n    return Cache_GetOrAdd_Z3AD3E68D((value_1(__callingSourceFile) + \"#L\") + int32ToString(value_1(__callingSourceLine)), (_arg1) => {\n        const displayName_1 = defaultArg(displayName, value_1(__callingMemberName));\n        render.displayName = displayName_1;\n        let elemType;\n        if (curry(2, memoizeWith) == null) {\n            elemType = render;\n        }\n        else {\n            const memoElement = ReactElementTypeModule_memoWith(memoizeWith, render);\n            memoElement.displayName = ((\"Memo(\" + displayName_1) + \")\");\n            elemType = memoElement;\n        }\n        return (props) => {\n            let f_1;\n            return react.createElement(elemType, (withKey == null) ? props : (f_1 = withKey, (props.key = f_1(props), props)));\n        };\n    });\n}\n\n","import * as react from \"react\";\nimport { equals, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { choose, fold } from \"../fable-library.3.1.12/Seq.js\";\nimport { isNullOrEmpty } from \"../fable-library.3.1.12/String.js\";\nimport { HTMLAttr } from \"./Fable.React.Props.fs.js\";\n\nexport function ReactElementTypeModule_memo(render) {\n    return react.memo(render, uncurry(2, null));\n}\n\nexport function ReactElementTypeModule_memoWith(areEqual, render) {\n    return react.memo(render, areEqual);\n}\n\nexport function Helpers_equalsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : equals(xValue, y[key]));\n        }\n        return result;\n    }\n    else {\n        return equals(x, y);\n    }\n}\n\nexport function Helpers_memoEqualsButFunctions(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if ((typeof x === 'object' && !x[Symbol.iterator]) ? (!(y == null)) : false) {\n        const keys = Object.keys(x);\n        const length = keys.length | 0;\n        let i = 0;\n        let result = true;\n        while ((i < length) ? result : false) {\n            const key = keys[i];\n            i = ((i + 1) | 0);\n            const xValue = x[key];\n            result = ((typeof xValue === 'function') ? true : (xValue === y[key]));\n        }\n        return result;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function Helpers_memoBuilder(name, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memo(render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_memoBuilderWith(name, areEqual, render) {\n    render.displayName = name;\n    const memoType = ReactElementTypeModule_memoWith(areEqual, render);\n    return (props) => react.createElement(memoType, props);\n}\n\nexport function Helpers_opt(o) {\n    const o_1 = o;\n    if (o_1 == null) {\n        return null;\n    }\n    else {\n        return o_1;\n    }\n}\n\nexport const Helpers_nothing = null;\n\nexport function Helpers_classBaseList(baseClass, classes) {\n    return new HTMLAttr(64, fold((state, name_1) => ((state + \" \") + name_1), baseClass, choose((tupledArg) => {\n        const name = tupledArg[0];\n        if (tupledArg[1] ? (!isNullOrEmpty(name)) : false) {\n            return name;\n        }\n        else {\n            return void 0;\n        }\n    }, classes)));\n}\n\nexport function Helpers_classList(classes) {\n    return Helpers_classBaseList(\"\", classes);\n}\n\n","import { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport { uncurry } from \"../.fable/fable-library.3.1.12/Util.js\";\nimport { ReactSlick_slider } from \"../Wrappers/Rewrap.fs.js\";\nimport { indexed, singleton, collect, delay, toList } from \"../.fable/fable-library.3.1.12/Seq.js\";\nimport * as react from \"react\";\nimport { printf, toText } from \"../.fable/fable-library.3.1.12/String.js\";\nimport { IMediaInfoModule_getOrigUrl } from \"../Album.fs.js\";\nimport { empty, singleton as singleton_1 } from \"../.fable/fable-library.3.1.12/List.js\";\n\nexport function imgDelayed(arg00) {\n    return FunctionComponent_Of_Z5A158BBF(arg00, void 0, uncurry(2, void 0), void 0, \"imgDelayed\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/PhotoGallery.fs\", 14);\n}\n\nexport function viewPhotoGallery(model, dispatch) {\n    const matchValue_1 = model.state;\n    if (matchValue_1.tag === 2) {\n        return singleton_1(ReactSlick_slider((it) => {\n            it.className = \"center\";\n            it.centerMode = true;\n            it.infinite = true;\n            it.centerPadding = \"50px\";\n            it.slidesToShow = 1;\n            it.dots = true;\n            it.autoplay = true;\n            it.arrows = false;\n            it.lazyLoad = \"progressive\";\n        }, toList(delay(() => collect((matchValue) => singleton(react.createElement(\"div\", {\n            key: toText(printf(\"gallery-img%d\"))(matchValue[0]),\n        }, react.createElement(\"img\", {\n            src: IMediaInfoModule_getOrigUrl(matchValue[1]),\n            onLoad: (e) => {\n            },\n        }))), indexed(matchValue_1.fields[0]))))));\n    }\n    else {\n        return empty();\n    }\n}\n\n","import * as react from \"react\";\nimport react$002Dslick from \"react-slick\";\nimport { jsOptions } from \"../.fable/fable-library.3.1.12/Util.js\";\n\nexport function ReactSlick_slider(setProps, children) {\n    return react.createElement(react$002Dslick, jsOptions(setProps), ...children);\n}\n\n","import { Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3, y_5;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            wj = (y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = (v | 0);\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = (v | 0);\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = ((n.digits[i] + (res << 3)) | 0);\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = (bound | 0);\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = (x_1 | 0);\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = (n.digits[i] | 0);\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = (n.digits[i + d] | 0);\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = (x_3 | 0);\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = ((k + 1) | 0);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = (i | 0);\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = ((n - 1) | 0);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = ((n - 1) | 0);\n                        p = ((p - 1) | 0);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return cons([k, ten2k], prior);\n            }\n            else {\n                prior_mut = cons([k, ten2k], prior);\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (!isEmpty(_arg1)) {\n                const prior_1 = tail(_arg1);\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return cons(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\n    if (isEmpty(digits_4)) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", toArray(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","// Adapted from https://github.com/MikeMcl/big.js/blob/0f94dc9110d55c4f324a47ba6a2e832ce23ac589/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v6.0.3\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2020 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n */\nPE = 29, // 0 to 1000000\n/*\n * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n * primitive number without a loss of precision.\n */\nSTRICT = false, // true or false\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            if (typeof n !== 'string') {\n                if (Big.strict === true) {\n                    throw TypeError(INVALID + 'number');\n                }\n                // Minus zero?\n                n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n            }\n            parse(x, n);\n        }\n        // Retain a reference to this Big constructor.\n        // Shadow Big.prototype.constructor which points to Object.\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.strict = STRICT;\n    return Big;\n}\nfunction normalize(x) {\n    // x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    if (!NUMERIC.test(n)) {\n        throw Error(INVALID + 'number');\n    }\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // original version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP + 1, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n    var xc = x.c;\n    if (rm === UNDEFINED)\n        rm = Big.RM;\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n        throw Error(INVALID_RM);\n    }\n    if (sd < 1) {\n        more =\n            rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 ||\n                rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));\n        xc.length = 1;\n        if (more) {\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n            x.e = x.e - sd + 1;\n            xc[0] = 1;\n        }\n        else {\n            // Zero.\n            xc[0] = x.e = 0;\n        }\n    }\n    else if (sd < xc.length) {\n        // xc[sd] is the digit after the digit that may be rounded up.\n        const isZero = xc.findIndex((xci, idx) => idx >= sd && xci > 0) < 0;\n        more =\n            rm === 1 && xc[sd] >= 5 ||\n                rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n                    (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n                rm === 3 && (more || !isZero);\n        // Remove any digits after the required precision.\n        xc.length = sd--;\n        // Round up?\n        if (more) {\n            // Rounding up may mean the previous digit has to be rounded up.\n            for (; ++xc[sd] > 9;) {\n                xc[sd] = 0;\n                if (!sd--) {\n                    ++x.e;\n                    xc.unshift(1);\n                }\n            }\n        }\n        // Remove trailing zeros.\n        for (sd = xc.length; !xc[--sd];)\n            xc.pop();\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n    var e = x.e, s = x.c.join(''), n = s.length;\n    // Exponential notation?\n    if (doExponential) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n) {\n            for (e -= n; e--;)\n                s += '0';\n        }\n        else if (e < n) {\n            s = s.slice(0, e) + '.' + s.slice(e);\n        }\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && isNonzero ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // original version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    // Divisor is zero?\n    if (!b[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    // Dividend is 0? Return +-0.\n    if (!a[0]) {\n        y.s = k;\n        y.c = [y.e = 0];\n        return y;\n    }\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1; // precision of the result\n    q.s = k;\n    k = p < 0 ? 0 : p;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n        p--;\n    }\n    // Round?\n    if (qi > p)\n        round(q, p, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return this.cmp(y) === 0;\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (yc[0]) {\n            y.s = -b;\n        }\n        else if (xc[0]) {\n            y = new Big(x);\n        }\n        else {\n            y.s = 1;\n        }\n        return y;\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0]) {\n        throw Error(DIV_BY_ZERO);\n    }\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var e, k, t, Big = this.constructor, x = new Big(this), y = new Big(y);\n    // Signs differ?\n    if (x.s != y.s) {\n        y.s = -y.s;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        if (!yc[0]) {\n            if (xc[0]) {\n                y = new Big(x);\n            }\n            else {\n                y.s = x.s;\n            }\n        }\n        return y;\n    }\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (e = xe - ye) {\n        if (e > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            e = -e;\n            t = xc;\n        }\n        t.reverse();\n        for (; e--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    e = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (k = 0; e; xc[e] %= 10)\n        k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (k) {\n        xc.unshift(k);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (e = xc.length; xc[--e] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big('1'), one = new Big('1'), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n        throw Error(INVALID + 'exponent');\n    }\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n        throw Error(INVALID + 'precision');\n    }\n    return round(new this.constructor(this), sd, rm);\n};\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n        throw Error(INVALID_DP);\n    }\n    return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big('0.5');\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0) {\n        throw Error(NAME + 'No square root');\n    }\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s + '');\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0]) {\n        y.c = [y.e = 0];\n        return y;\n    }\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = b;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), ++dp, rm);\n        for (; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, true, !!n);\n};\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n    var x = this, n = x.c[0];\n    if (dp !== UNDEFINED) {\n        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n            throw Error(INVALID_DP);\n        }\n        x = round(new x.constructor(x), dp + x.e + 1, rm);\n        // x.e may have changed if the value is rounded up.\n        for (dp = dp + x.e + 1; x.c.length < dp;)\n            x.c.push(0);\n    }\n    return stringify(x, false, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toJSON = P.toString = function () {\n    var x = this, Big = x.constructor;\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n    var n = Number(stringify(this, true, true));\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\n        throw Error(NAME + 'Imprecise conversion');\n    }\n    return n;\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n    var x = this, Big = x.constructor, n = x.c[0];\n    if (sd !== UNDEFINED) {\n        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n            throw Error(INVALID + 'precision');\n        }\n        x = round(new Big(x), sd, rm);\n        for (; x.c.length < sd;)\n            x.c.push(0);\n    }\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n    var x = this, Big = x.constructor;\n    if (Big.strict === true) {\n        throw Error(NAME + 'valueOf disallowed');\n    }\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n// Export\nexport var Big = _Big_();\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { Record, toString } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = (signInt | 0);\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    toJSON(_key) {\n        const this$ = this;\n        return toString(this$);\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { compare } from \"./Util.js\";\nimport { unfold, delay } from \"./Seq.js\";\nimport { op_Addition, fromZero } from \"./BigInt.js\";\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\n\nexport function makeRangeStepFunction(step, stop, zero, add) {\n    const stepComparedWithZero = compare(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compare(x, stop) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, add(x, step)] : (void 0);\n    };\n}\n\nexport function integralRangeStep(start, step, stop, zero, add) {\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\n    return delay(() => unfold(stepFn, start));\n}\n\nexport function rangeBigInt(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\n}\n\nexport function rangeDecimal(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\n}\n\nexport function rangeDouble(start, step, stop) {\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\n}\n\nexport function rangeInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeUInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeChar(start, stop) {\n    const intStop = stop.charCodeAt(0) | 0;\n    return delay(() => unfold((c) => {\n        if (c <= intStop) {\n            return [String.fromCharCode(c), c + 1];\n        }\n        else {\n            return void 0;\n        }\n    }, start.charCodeAt(0)));\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\nimport { toString as toString_1 } from \"./Types.js\";\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equals_1(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equals_1(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compare_1(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compare_1(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), 0, bytes.length, false);\n    }\n}\n\n","import { Union } from \"../fable-library.3.1.12/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.12/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.1.12/Util.js\";\nimport { some } from \"../fable-library.3.1.12/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.12/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.1.12/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.1.12/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { ofArray } from \"../fable-library.3.1.12/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.1.12/Option.js\";\nimport { printf, toText } from \"../fable-library.3.1.12/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        void view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        void view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [program.update]);\n    const view = partialApply(2, mapView, [program.view]);\n    const setState = partialApply(2, mapSetState, [program.setState]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { Record } from \"../fable-library.3.1.12/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.1.12/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.1.12/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\n}\n\n","import { some } from \"./.fable/fable-library.3.1.12/Option.js\";\nimport { jsOptions } from \"./.fable/fable-library.3.1.12/Util.js\";\nimport translation from \"./locales/ja/translation.json\";\nimport ui from \"./locales/ja/ui.json\";\nimport translation_1 from \"./locales/en/translation.json\";\nimport ui_1 from \"./locales/en/ui.json\";\nimport i18next from \"i18next\";\nimport i18next$002Dbrowser$002Dlanguagedetector from \"i18next-browser-languagedetector\";\nimport { ofArray, empty, singleton } from \"./.fable/fable-library.3.1.12/List.js\";\nimport { Cmd_OfPromise_perform, Cmd_none, Cmd_OfPromise_result } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { State__get_AsString, Model, State, Msg } from \"./Model.fs.js\";\nimport { toText, printf, toConsoleError } from \"./.fable/fable-library.3.1.12/String.js\";\nimport { get$ } from \"./Album.fs.js\";\nimport { FSharpChoice$2 } from \"./.fable/fable-library.3.1.12/Choice.js\";\nimport { body, Option, hero } from \"./.fable/Fulma.2.10.0/Layouts/Hero.fs.js\";\nimport * as react from \"react\";\nimport { section } from \"./.fable/Fulma.2.10.0/Layouts/Section.fs.js\";\nimport { container } from \"./.fable/Fulma.2.10.0/Layouts/Container.fs.js\";\nimport { Option as Option_1, columns } from \"./.fable/Fulma.2.10.0/Layouts/Columns.fs.js\";\nimport { Option as Option_2, ISize, column } from \"./.fable/Fulma.2.10.0/Layouts/Column.fs.js\";\nimport { Screen } from \"./.fable/Fulma.2.10.0/Common.fs.js\";\nimport { empty as empty_1, singleton as singleton_1, append, delay, toList } from \"./.fable/fable-library.3.1.12/Seq.js\";\nimport { block } from \"./Extensions.fs.js\";\nimport { Option as Option_3, button } from \"./.fable/Fulma.2.10.0/Elements/Button.fs.js\";\nimport { Language_get_Flip } from \"./Properties.fs.js\";\nimport { viewPhotoGallery } from \"./View/PhotoGallery.fs.js\";\nimport { viewGoogleFontLoader } from \"./View/Misc.fs.js\";\nimport { ProgramModule_mkProgram, ProgramModule_run } from \"./.fable/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Program_withReactSynchronous } from \"./.fable/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport const initI18n = (() => {\n    const options = {\n        supportedLngs: [\"ja\", \"en\"],\n        ns: some([\"translation\", \"ui\"]),\n        fallbackLng: some(\"en\"),\n        returnEmptyString: false,\n        resources: jsOptions((it_1) => {\n            it_1[\"ja\"]={\n                translation: translation,\n                ui: ui,\n            };\n            it_1[\"en\"]={\n                translation: translation_1,\n                ui: ui_1,\n            };\n        }),\n        detection: some(jsOptions((it_2) => {\n            it_2.cookieDomain = \"xn--pckjp4dudxftf.xn--tckwe\";\n            it_2.cookieMinutes = 10;\n        })),\n    };\n    const pr = i18next.use(i18next$002Dbrowser$002Dlanguagedetector).init(options);\n    return pr.then(((value_1) => {\n    }));\n})();\n\nexport const initTasks = singleton(initI18n);\n\nexport const initCmd = Cmd_OfPromise_result((() => {\n    let pr_2;\n    const pr_1 = Promise.all(initTasks);\n    pr_2 = (pr_1.then(((_arg1) => (new Msg(1)))));\n    return pr_2.then(void 0, ((arg0) => (new Msg(2, arg0))));\n})());\n\nexport function init(_arg1) {\n    return [new Model(new State(0), false, \"unspecified\"), initCmd];\n}\n\nexport function update(msg, model) {\n    const matchValue = [msg, model.state];\n    let pattern_matching_result, e, lang_1, x_1, x_2;\n    if (matchValue[0].tag === 1) {\n        pattern_matching_result = 1;\n    }\n    else if (matchValue[0].tag === 2) {\n        pattern_matching_result = 2;\n        e = matchValue[0].fields[0];\n    }\n    else if (matchValue[0].tag === 5) {\n        pattern_matching_result = 3;\n        lang_1 = matchValue[0].fields[0];\n    }\n    else if (matchValue[0].tag === 3) {\n        if (matchValue[1].tag === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1].tag === 3) {\n            pattern_matching_result = 4;\n        }\n        else {\n            pattern_matching_result = 5;\n        }\n    }\n    else if (matchValue[0].tag === 4) {\n        let activePatternResult7198;\n        const x = matchValue[0].fields[0];\n        activePatternResult7198 = ((x.status === \"ok\") ? (new FSharpChoice$2(0, x)) : (new FSharpChoice$2(1, x)));\n        if (activePatternResult7198.tag === 1) {\n            pattern_matching_result = 7;\n            x_2 = activePatternResult7198.fields[0];\n        }\n        else {\n            pattern_matching_result = 6;\n            x_1 = activePatternResult7198.fields[0];\n        }\n    }\n    else {\n        pattern_matching_result = 0;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return [model, Cmd_none()];\n        }\n        case 1: {\n            return [new Model(model.state, true, (i18next.language === \"ja\") ? \"ja\" : \"en\"), Cmd_none()];\n        }\n        case 2: {\n            const arg10 = e.message;\n            toConsoleError(printf(\"failed to initialize: %s\"))(arg10);\n            return [model, Cmd_none()];\n        }\n        case 3: {\n            return [new Model(model.state, model.initCompleted, lang_1), Cmd_OfPromise_perform(() => {\n                switch (lang_1) {\n                    case \"en\": {\n                        return i18next.changeLanguage(\"en\");\n                    }\n                    case \"ja\": {\n                        return i18next.changeLanguage(\"ja\");\n                    }\n                    default: {\n                        return i18next.changeLanguage(\"en\");\n                    }\n                }\n            }, void 0, (_arg1) => (new Msg(0)))];\n        }\n        case 4: {\n            return [new Model(new State(1), model.initCompleted, model.lang), Cmd_OfPromise_perform(get$, void 0, (arg0) => (new Msg(4, arg0)))];\n        }\n        case 5: {\n            return [model, Cmd_none()];\n        }\n        case 6: {\n            return [new Model(new State(2, x_1.value), model.initCompleted, model.lang), Cmd_none()];\n        }\n        case 7: {\n            return [new Model(new State(3, x_2.message), model.initCompleted, model.lang), Cmd_none()];\n        }\n    }\n}\n\nfunction viewLoading(model, dispatch) {\n    return hero(singleton(new Option(5)), singleton(body(empty(), singleton(react.createElement(\"p\", {\n        key: \"loading\",\n    }, \"Loading...\")))));\n}\n\nfunction viewMain(model, dispatch) {\n    return section(empty(), singleton(container(empty(), singleton(columns(singleton(new Option_1(9, \"has-text-centered\")), singleton(column(ofArray([new Option_2(0, new Screen(0), new ISize(12)), new Option_2(1, new Screen(0), new ISize(6))]), toList(delay(() => {\n        let arg10;\n        return append(singleton_1(block(empty(), ofArray([react.createElement(\"p\", {\n            key: \"hello-world\",\n        }, i18next.t(\"Hello, world!\")), react.createElement(\"p\", {\n            key: \"state\",\n        }, (arg10 = State__get_AsString(model.state), toText(printf(\"state: %s\"))(arg10)))]))), delay(() => {\n            let matchValue;\n            return append((matchValue = model.state, (matchValue.tag === 0) ? singleton_1(button(singleton(new Option_3(17, (_arg1) => {\n                dispatch(new Msg(3));\n            })), singleton(i18next.t(\"load\")))) : ((matchValue.tag === 3) ? singleton_1(button(singleton(new Option_3(17, (_arg1) => {\n                dispatch(new Msg(3));\n            })), singleton(i18next.t(\"load\")))) : (void 0, empty_1()))), delay(() => {\n                let matchValue_1;\n                return append(singleton_1(block(empty(), singleton(button(singleton(new Option_3(17, (_arg2) => {\n                    dispatch(new Msg(5, Language_get_Flip()(model.lang)));\n                })), singleton((matchValue_1 = model.lang, (matchValue_1 === \"en\") ? (i18next.t(\"ui:change-to-another-language\")) : ((matchValue_1 === \"ja\") ? (i18next.t(\"ui:change-to-another-language\")) : (i18next.t(\"ui:change-to-another-language\"))))))))), delay(() => singleton_1(block(empty(), toList(delay(() => viewPhotoGallery(model, dispatch)))))));\n            }));\n        }));\n    })))))))));\n}\n\nfunction view(model, dispatch) {\n    return react.createElement(\"div\", {\n        key: \"div-main\",\n    }, ...toList(delay(() => append(singleton_1(viewGoogleFontLoader(model, dispatch)), delay(() => (model.initCompleted ? singleton_1(viewMain(model, dispatch)) : singleton_1(viewLoading(model, dispatch))))))));\n}\n\nProgramModule_run(Program_withReactSynchronous(\"elmish-app\", ProgramModule_mkProgram(init, (msg, model) => update(msg, model), (model_1, dispatch) => view(model_1, dispatch))));\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react$002Ddom from \"react-dom\";\nimport { uncurry } from \"../fable-library.3.1.12/Util.js\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            window.cancelAnimationFrame(lastRequest);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { union_type, string_type, list_type, class_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Props\", \"CustomClass\", \"is-medium\", \"is-large\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Section.Option\", [], Option, () => [[[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [], [], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function section(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 3: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 0: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"section\"), (props_1, children_1) => react.createElement(\"section\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.12/Types.js\";\nimport { union_type, string_type, list_type, class_type } from \"../../fable-library.3.1.12/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.12/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-fluid\", \"is-widescreen\", \"is-fullhd\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Container.Option\", [], Option, () => [[], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function container(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 5: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"container\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","\nexport function Language_get_Flip() {\n    return (_arg1) => ((_arg1 === \"en\") ? \"ja\" : ((_arg1 === \"ja\") ? \"en\" : \"unspecified\"));\n}\n\n","import { FunctionComponent_Of_Z5A158BBF } from \"../.fable/Fable.React.7.3.0/Fable.React.FunctionComponent.fs.js\";\nimport react$002Dgoogle$002Dfont$002Dloader from \"react-google-font-loader\";\nimport { uncurry } from \"../.fable/fable-library.3.1.12/Util.js\";\n\nexport function viewGoogleFontLoader(model, dispatch) {\n    const props = {\n        fonts: [{\n            font: \"Roboto\",\n            weights: [400, \"400i\"],\n        }],\n    };\n    return FunctionComponent_Of_Z5A158BBF(react$002Dgoogle$002Dfont$002Dloader, void 0, uncurry(2, void 0), void 0, \"googleFontLoader\", \"/mnt/d/Documents/codes/ghost-club.github.io/src/View/Misc.fs\", 17)(props);\n}\n\n","import { some } from \"../fable-library.3.1.12/Option.js\";\nimport Timer from \"../fable-library.3.1.12/Timer.js\";\nimport { add } from \"../fable-library.3.1.12/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed);\n    t.Enabled = true;\n    t.Start();\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfulma_demo\"] = self[\"webpackChunkfulma_demo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [216], () => (__webpack_require__(7720)))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5080)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}